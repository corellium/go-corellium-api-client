openapi: 3.0.0
info:
  description: REST API to manage your virtual devices.
  termsOfService: https://www.corellium.com/legal/terms
  title: Corellium API
  version: 5.5.0-18750
servers:
- description: ""
  url: "https://{serverName}/api"
  variables:
    serverName:
      default: app.corellium.com
security:
- BearerAuth: []
tags:
- description: ""
  name: Agent
- description: ""
  name: Authentication
- description: ""
  name: Config
- description: ""
  name: CoreTrace
- description: ""
  name: Deployments
- description: ""
  name: Domain
- description: ""
  name: DomainAuthProvider
- description: ""
  name: Extensions
- description: ""
  name: Flavors
- description: ""
  name: HyperTrace
- description: ""
  name: Hypervisor Hooks
- description: ""
  name: Images
- description: ""
  name: Instances
- description: ""
  name: Invites
- description: ""
  name: Licensing
- description: ""
  name: Models
- description: ""
  name: Netdump
- description: ""
  name: Projects
- description: ""
  name: Roles
- description: ""
  name: Snapshots
- description: ""
  name: Status
- description: ""
  name: TOTP
- description: ""
  name: Teams
- description: ""
  name: TrialRequests
- description: ""
  name: Users
- description: ""
  name: VPN
- description: ""
  name: WebPlayer
- description: ""
  name: hidden
- description: ""
  name: internal
- description: ""
  name: noArm
paths:
  /v1/auth/login:
    post:
      deprecated: false
      operationId: v1AuthLogin
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Credential Login
                value: |-
                  {
                    "username": "admin",
                    "password": "password"
                  }
              example2:
                summary: API Token Login
                value: |-
                  {
                    "apiToken": "<token>"
                  }
            schema:
              type: object
        description: Authorization data ( Credentials|ApiToken )
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Success
                  value:
                    token: eyJhbGciOiJSUzM4NCIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiZjU0MmY3NTktNGQ3OC00MTE5LWE4MWQtNDVmM2YxNTdhYmZkIiwiZG9tYWluIjoiNjQzMjM3ZWYtMzQ3My00ZTc3LTg3NTEtMWI1YTY4ZWU4ZTY5Iiwibm9JT1MiOmZhbHNlLCJhZG1pbmlzdHJhdG9yIjp0cnVlLCJwcm9qZWN0LWFkbWluaXN0cmF0b3IiOnRydWUsInRvdHAiOm51bGwsImVwb2NoIjpudWxsLCJpYXQiOjE2NDc3MTk0MTAsImV4cCI6MTY0Nzc0MTAxMH0.f9qD88Zaj-ux6Sc2NTGMDp0Q0WQlLQtDwOJsaajvaG_B0B8DABNU3lyCqU1eYmHOUH7cdTIfxg6PommhVh6TeIr7NNW8r1da4YYVg8Dltpv5WjIHTrHTPK-hpfvvArnhY6IszEy9o4fd4YYIYxEn4wxqNJoFG9ZygX3iN4aL5pU0ZtPyjj6Rhb8wTXikwIlqf2-mE1hwUlJt6b_HEf9B5gle_zMeLsDssDQ34SrBgIzD8Hqqnb2pfu9w7VCc2xGyBfa5hy1eIdwgc_A9S44G4jzf7OKAkm1BP239dMlIfv6YUrDOVSqip1j2UleTRRRT2dQiPdeKAzOltPhMQ_qB9o6plXUvQh4GKyavDWiM1Kvcj-HN6NdvPDG24CyZIqV3Hr_KgC5laCG6xaJY6G4whVyY-tFfWuG5Kw8oX_Ao5BXBl6MbrDTLgDauNoua_zVeeWOiAA1tT6lcno3ppHcb-9ikozVhLX5z7jegmzuVYyYBwqlpI_m0A-bQE_MAoMpt5GNRwz0tkQqHL4-lIL9M5vy04BrkNsxLlY0lrfGj9VFIIv8ojxMUERfGP5FnS3CsEqTgZogOjk96EMEeHCUv1JciOSOcnVFB5NqM84ueeViNkRpDasD0lJY0arJMG4DegORmWT6pLrK76M-M-Eoize343uSPgIGikbhfVTS9njQ
                    expiration: 2022-03-20T01:50:10.000Z
              schema:
                $ref: '#/components/schemas/Token'
          description: User Authorization
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid username or password.
                    errorID: InvalidUsernameorPassword
                    originalError: Access denied
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security: []
      summary: Log In
      tags:
      - Authentication
  /v1/billing/invites:
    post:
      deprecated: false
      description: Create Subscriber Invite
      operationId: v1CreateSubscriberInvite
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: payload example
                value: |2-
                   {
                    "coupon_options": {
                      "type": "percent",
                      "amount": 100,
                      "used": false
                    },
                    "plan": {
                      "licenseType": "individual-usage",
                      "cores": 6
                    },
                    "trial": {
                      "duration": 100
                    },
                    "name": "John",
                    "email": "john.doe@example.com",
                    "coupon_code": "1I454WY14V4QV9",
                    "domain": null,
                    "aggregate": "app.example.com",
                    "use_by": null,
                    "active": true,
                    "reusable": false,
                    "createdAt": "2022-05-06T02:39:23.000Z",
                    "updatedAt": "2022-05-06T02:39:23.000Z"
                  }
            schema:
              $ref: '#/components/schemas/SubscriberInvite'
        description: Payload of Subscriber Invite
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberInvite'
          description: Success
      security:
      - BearerAuth: []
      summary: Create Subscriber Invite
      tags:
      - TrialRequests
  /v1/config:
    get:
      deprecated: false
      operationId: v1GetConfig
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
          description: application/json
      security: []
      summary: Get all configs
      tags:
      - Config
  /v1/domain/{domainId}/auth/{providerId}:
    delete:
      deprecated: false
      operationId: v1DeleteDomainAuthProvider
      parameters:
      - deprecated: false
        description: Domain ID - uuid
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Provider ID - uuid
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Delete an auth provider from a domain
      tags:
      - DomainAuthProvider
    put:
      deprecated: false
      operationId: v1UpdateDomainAuthProvider
      parameters:
      - deprecated: false
        description: Domain ID - uuid
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Provider ID - uuid
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Auth Provider
                value: |-
                  {
                    "enabled": false,
                    "providerType": "open-id-connect",
                    "label": "Login with Custom Auth0",
                    "config": {
                      "discoveryUrl": "http://localhost:8080/realms/Corellium/.well-known/openid-configuration",
                      "clientId": "B5GhRzrVn19adO1a1vJ6aZRYdNY9jSP4",
                      "clientSecret": "itsasecret",
                      "invitedOnly": true
                    }
                  }
            schema:
              $ref: '#/components/schemas/DomainAuthProviderRequest'
        description: Request Data
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: OK
                  value:
                    providerType: open-id-connect
                    enabled: false
                    default: false
                    label: Spiffy Label
                    config:
                      discoveryUrl: http://localhost:8080/realms/Corellium/.well-known/openid-configuration
                      clientId: B5GhRzrVn19adO1a1vJ6aZRYdNY9jSP4
                      clientSecret: itsasecret
                      invitedOnly: false
                    identifier: 48f0871a-4d47-4343-ac66-12873f29dd3e
                    createdBy: 66cfc2b7-ccba-48c1-b2f7-3ef2d0f5dcdc
                    createdAt: 2023-06-26T23:27:25.000Z
                    updatedAt: 2023-06-26T23:27:25.000Z
              schema:
                $ref: '#/components/schemas/DomainAuthProviderResponse'
          description: OK
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Update an auth provider for a domain
      tags:
      - DomainAuthProvider
  /v1/domain/{domainId}/auth:
    get:
      deprecated: false
      operationId: v1GetDomainAuthProviders
      parameters:
      - deprecated: false
        description: Domain ID - uuid
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DomainAuthProviderResponse'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Return all configured auth providers for a domain (including globally
        configured providers)
      tags:
      - DomainAuthProvider
    post:
      deprecated: false
      operationId: v1CreateDomainAuthProvider
      parameters:
      - deprecated: false
        description: Domain ID - uuid
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Auth Provider
                value: |-
                  {
                    "enabled": true,
                    "providerType": "open-id-connect",
                    "label": "Login with Custom Auth0",
                    "config": {
                      "discoveryUrl": "http://localhost:8080/realms/Corellium/.well-known/openid-configuration",
                      "clientId": "B5GhRzrVn19adO1a1vJ6aZRYdNY9jSP4",
                      "clientSecret": "itsasecret",
                      "invitedOnly": false
                    }
                  }
            schema:
              $ref: '#/components/schemas/DomainAuthProviderRequest'
        description: Request Data
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: OK
                  value: |-
                    {
                      "identifier": "c64ad2a9-5be8-4c87-98af-0572adbe1085",
                      "providerType": "open-id-connect",
                      "default": false,
                      "label": "Login with Custom Domain Auth0 Provider",
                      "config": {
                        "discoveryUrl": "http://localhost:8080/realms/Corellium/.well-known/openid-configuration",
                        "clientId": "B5GhRzrVn19adO1a1vJ6aZRYdNY9jSP4",
                        "clientSecret": "itsasecret",
                        "invitedOnly": false
                      },
                      "createdBy": "525b6183-7265-4f87-b6cb-1f6ec1b996dd",
                      "updatedAt": "2023-06-26T23:24:14.339Z",
                      "createdAt": "2023-06-26T23:24:14.339Z",
                      "enabled": true
                      "default": false
                    }
              schema:
                $ref: '#/components/schemas/DomainAuthProviderResponse'
          description: OK
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Create a new auth provider for a domain
      tags:
      - DomainAuthProvider
  /v1/instances/{instanceId}/hooks:
    get:
      deprecated: false
      operationId: v1GetHooks
      parameters:
      - deprecated: false
        description: "limit for pagination results, defaults to 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - deprecated: false
        description: "offset for pagination results, defaults to 0"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: number
        style: form
      - deprecated: false
        description: "sort ASC or DESC, defaults to DESC"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Hooks
                  value:
                  - identifier: c92edeb3-2add-4949-a297-ca3a37a1f752
                    label: TEST HOOK
                    address: 0xfffffff006ae8864
                    patch: "print(\"Hello, world\\n\");"
                    patchType: csmfcc
                    enabled: true
                    createdAt: 2022-10-11T22:28:04.000Z
                    updatedAt: 2022-10-11T22:28:04.000Z
                    instanceId: 79e56136-1258-4eed-8734-c14c6eff990b
              schema:
                items:
                  $ref: '#/components/schemas/Hook'
                type: array
          description: Hooks
        "304":
          description: No changes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get all hypervisor hooks for Instance
      tags:
      - Hypervisor Hooks
    post:
      deprecated: false
      operationId: v1CreateHook
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1CreateHookParameters'
        description: application/json
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                example1:
                  summary: Hook
                  value:
                    identifier: c92edeb3-2add-4949-a297-ca3a37a1f752
                    label: TEST HOOK
                    address: 0xfffffff006ae8864
                    patch: "print(\"Hello, world\\n\");"
                    patchType: csmfcc
                    enabled: true
                    createdAt: 2022-10-11T22:28:04.000Z
                    updatedAt: 2022-10-11T22:28:04.000Z
                    instanceId: 79e56136-1258-4eed-8734-c14c6eff990b
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Create hypervisor hook for Instance
      tags:
      - Hypervisor Hooks
  /v1/hooks/{hookId}:
    delete:
      deprecated: false
      operationId: v1DeleteHook
      parameters:
      - deprecated: false
        description: Hook ID
        explode: false
        in: path
        name: hookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Delete an existing hypervisor hook
      tags:
      - Hypervisor Hooks
    get:
      deprecated: false
      operationId: v1GetHookById
      parameters:
      - deprecated: false
        description: Hook Id
        explode: false
        in: path
        name: hookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Hook
                  value:
                    identifier: c92edeb3-2add-4949-a297-ca3a37a1f752
                    label: TEST HOOK
                    address: 0xfffffff006ae8864
                    patch: "print(\"Hello, world\\n\");"
                    patchType: csmfcc
                    enabled: true
                    createdAt: 2022-10-11T22:28:04.000Z
                    updatedAt: 2022-10-11T22:28:04.000Z
                    instanceId: 79e56136-1258-4eed-8734-c14c6eff990b
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get hypervisor hook by id
      tags:
      - Hypervisor Hooks
    put:
      deprecated: false
      operationId: v1UpdateHook
      parameters:
      - deprecated: false
        description: Hook ID
        explode: false
        in: path
        name: hookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Update hypervisor hook
                value: "{ \"enabled\": false}"
            schema:
              $ref: '#/components/schemas/V1CreateHookParameters'
        description: application/json
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Hook
                  value:
                    identifier: c92edeb3-2add-4949-a297-ca3a37a1f752
                    label: TEST HOOK
                    address: 0xfffffff006ae8864
                    patch: "print(\"Hello, world\\n\");"
                    patchType: csmfcc
                    enabled: true
                    createdAt: 2022-10-11T22:28:04.000Z
                    updatedAt: 2022-10-11T22:28:04.000Z
                    instanceId: 79e56136-1258-4eed-8734-c14c6eff990b
              schema:
                $ref: '#/components/schemas/Hook'
          description: Hook
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Update an existing hypervisor hook
      tags:
      - Hypervisor Hooks
  /v1/images:
    get:
      deprecated: false
      operationId: v1GetImages
      parameters:
      - deprecated: false
        description: Optionally filter by project - uuid
        explode: true
        in: query
        name: project
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
          description: application/json
      security:
      - BearerAuth: []
      summary: Get all Images Metadata
      tags:
      - Images
    post:
      deprecated: false
      operationId: v1CreateImage
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            examples:
              example1:
                summary: Create image in Project
                value: |-
                  {
                    "name": "test",
                    "type": "kernel",
                    "project": "d59db33d-27bd-4b22-878d-49e4758a648e"
                  }
              example2:
                summary: Create image in Instance
                value: |-
                  {
                    "name": "test",
                    "type": "kernel",
                    "project": "d59db33d-27bd-4b22-878d-49e4758a648e",
                    "instance": "17fc3e9b-5970-4000-8e51-8279588b7701"
                  }
            schema:
              $ref: '#/components/schemas/ImageCreationOptions'
        description: Image data
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Image Created
                  value:
                    status: active
                    id: 18af26fe-8a5a-479a-80ec-013c54176d6f
                    name: test
                    type: kernel
                    encapsulated: false
                    size: null
                    project: d59db33d-27bd-4b22-878d-49e4758a648e
                    created_at: 2022-03-26T01:54:25.670Z
                    updated_at: 2022-03-26T01:54:25.670Z
              schema:
                $ref: '#/components/schemas/Image'
          description: application/json
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=17fc3e9b-5970-4000-8e51-8279588b7701
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 17fc3e9b-5970-4000-8e51-8279588b7701
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: application/json
      security:
      - BearerAuth: []
      summary: Create a new Image
      tags:
      - Images
  /v1/images/{imageId}:
    get:
      deprecated: false
      operationId: v1GetImage
      parameters:
      - deprecated: false
        description: Image ID - uuid
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                    status: active
                    id: e85f2792-d9de-480e-80ca-a6b992e43619
                    name: IOT_HTTP_WebServer.elf
                    type: kernel
                    size: null
                    encoding: plain
                    project: d59db33d-27bd-4b22-878d-49e4758a648e
                    created_at: 2022-03-16T17:56:37.000Z
                    updated_at: 2022-03-16T17:56:38.000Z
              schema:
                $ref: '#/components/schemas/Image'
          description: application/json
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=17fc3e9b-5970-4000-8e51-8279588b7701
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 17fc3e9b-5970-4000-8e51-8279588b7701
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: application/json
      security:
      - BearerAuth: []
      summary: Get Image Metadata
      tags:
      - Images
    post:
      deprecated: false
      description: "If the active project has enough remaining quota, updates an Image\
        \ with the contents of the request body."
      operationId: v1UploadImageData
      parameters:
      - deprecated: false
        description: Image ID - uuid
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          binary:
            schema:
              type: string
        description: Uploaded Image
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                    status: active
                    id: e85f2792-d9de-480e-80ca-a6b992e43619
                    name: IOT_HTTP_WebServer.elf
                    type: fwbinary
                    size: null
                    encoding: plain
                    project: d59db33d-27bd-4b22-878d-49e4758a648e
                    created_at: 2022-03-16T17:56:37.000Z
                    updated_at: 2022-03-16T17:56:38.000Z
              schema:
                $ref: '#/components/schemas/Image'
          description: application/json
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=17fc3e9b-5970-4000-8e51-8279588b7701
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 17fc3e9b-5970-4000-8e51-8279588b7701
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: application/json
        "409":
          content:
            application/json:
              examples:
                example3:
                  summary: Conflict
                  value:
                    error: Conflict with existing Image
                    errorID: Conflict
                    object:
                      status: active
                      id: 8e90e4ba-ef34-4a35-af60-beca88166e79
                      name: IOT_HTTP_WebServer.elf
                      type: fwbinary
                      size: null
                      encoding: plain
                      project: 163c7e1b-4f26-4744-8423-dfa3d327f21a
                      created_at: 2022-04-01T07:41:39.000Z
                      updated_at: 2022-04-01T07:41:39.000Z
              schema:
                $ref: '#/components/schemas/ApiConflictError'
          description: Conflict
      security:
      - BearerAuth: []
      summary: Upload Image Data
      tags:
      - Images
  /v2/images/{imageId}:
    delete:
      deprecated: false
      operationId: v1DeleteImage
      parameters:
      - deprecated: false
        description: Image ID - uuid
        explode: false
        in: path
        name: imageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "404":
          content:
            application/json:
              examples:
                example1:
                  summary: Not Found
                  value:
                    error: Image with imageId=d59db33d-27bd-4b22-878d-49e4758a648e
                      not found
                    errorID: NotFound
                    name: Image
                    params:
                      imageId: d59db33d-27bd-4b22-878d-49e4758a648e
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete Image
      tags:
      - Images
  /v1/ready:
    get:
      deprecated: false
      description: Check if  API is ready for queries
      operationId: v1Ready
      parameters: []
      responses:
        "204":
          description: API is ready for queries
        "503":
          content:
            application/json:
              examples:
                example1:
                  summary: Error response example
                  value:
                    error: shut down
              schema:
                $ref: '#/components/schemas/ApiError'
          description: API is not ready
      security: []
      summary: API Status
      tags:
      - Status
  /v1/instances:
    get:
      deprecated: false
      operationId: v1GetInstances
      parameters:
      - deprecated: false
        description: Optionally filter by instance name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - deprecated: false
        description: Attributes to include in instance return
        explode: false
        in: query
        name: returnAttr
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instance'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get Instances
      tags:
      - Instances
    post:
      deprecated: false
      operationId: v1CreateInstance
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Minimal
                value: |-
                  {
                    "project": "<your_project_id>",
                    "name": "rpi4b Created via API",
                    "flavor": "rpi4b",
                    "os": "11.2.0"
                  }
            schema:
              $ref: '#/components/schemas/InstanceCreateOptions'
        description: The vm definition to create
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Accepted
                  value:
                    id: 7f4f241c-821f-4219-905f-c3b50b0db5dd
              schema:
                $ref: '#/components/schemas/InstanceReturn'
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                example2:
                  summary: Unsupported Model
                  value:
                    error: Unsupported device model
                    errorID: UserError
                    field: flavor
                example3:
                  summary: Unsupported Firmware
                  value:
                    error: Cannot find firmware package for given firmware version
                    errorID: UserError
                    field: fwpackage
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example4:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Create Instance
      tags:
      - Instances
  /v1/instances/{instanceId}:
    delete:
      deprecated: false
      operationId: v1DeleteInstance
      parameters:
      - deprecated: false
        description: Instance ID
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=7f4f241c-821f-4219-905f-c3b50b0db5dd
                      not found
                    errorID: InstanceNotFound
                    name: Instance
                    params:
                      instanceId: 7f4f241c-821f-4219-905f-c3b50b0db5dd
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Remove Instance
      tags:
      - Instances
    get:
      deprecated: false
      operationId: v1GetInstance
      parameters:
      - deprecated: false
        description: Instance ID
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Attributes to include in instance return
        explode: false
        in: query
        name: returnAttr
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Success
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=7f4f241c-821f-4219-905f-c3b50b0db5dd
                      not found
                    errorID: InstanceNotFound
                    name: Instance
                    params:
                      instanceId: 7f4f241c-821f-4219-905f-c3b50b0db5dd
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Get Instance
      tags:
      - Instances
    patch:
      deprecated: false
      operationId: v1PatchInstance
      parameters:
      - deprecated: false
        description: Instance ID
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Patch
                value: |-
                  {
                   "name": "New Name"
                  }
            schema:
              $ref: '#/components/schemas/PatchInstanceOptions'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: application/json
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=7f4f241c-821f-4219-905f-c3b50b0db5dd
                      not found
                    errorID: InstanceNotFound
                    name: Instance
                    params:
                      instanceId: 7f4f241c-821f-4219-905f-c3b50b0db5dd
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update Instance
      tags:
      - Instances
  /v1/instances/{instanceId}/agent/v1/app/ready:
    get:
      deprecated: false
      operationId: v1AgentAppReady
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentAppReadyResponse'
          description: App Agent State
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Check if App subsystem is ready
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/app/install:
    post:
      deprecated: false
      description: Installs the app located at path which must be present on the VM
        filesystem
      operationId: v1AgentInstallApp
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: App parameters
                value: |-
                  {
                    "path": "/tmp/test.ipa"
                  }
            schema:
              $ref: '#/components/schemas/AgentInstallBody'
        description: App parameters
        required: true
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Install App at path
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/app/apps:
    get:
      deprecated: false
      operationId: v1AgentListApps
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentAppsList'
          description: Installed Apps Info
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: List Apps
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/app/apps/update:
    get:
      deprecated: false
      operationId: v1AgentListAppsStatus
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Installed Apps Status Info
                  value:
                    apps:
                    - running: false
                      bundleID: bundle.id.one
                    - running: true
                      bundleID: bundle.id.two
                    frontmost: bundle.id.two
              schema:
                $ref: '#/components/schemas/AgentAppsList'
          description: Installed Apps Status Info
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: List Apps Status
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/app/icons:
    get:
      deprecated: false
      operationId: v1AgentListAppIcons
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: App Bundle ID
        explode: true
        in: query
        name: bundleID
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Icons
                  value:
                    icons:
                      bundle.id: <base64Data>
              schema:
                items:
                  $ref: '#/components/schemas/AgentIcons'
                type: array
          description: Installed Apps Icons
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: List App Icons
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/app/apps/{bundleId}/run:
    post:
      deprecated: false
      operationId: v1AgentRunApp
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: App Bundle ID
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Run an App
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/app/apps/{bundleId}/kill:
    post:
      deprecated: false
      operationId: v1AgentKillApp
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: App Bundle ID
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Kill an App
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/app/apps/{bundleId}/uninstall:
    post:
      deprecated: false
      operationId: v1AgentUninstallApp
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: App Bundle ID
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Uninstall an App
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/file/device/{filePath}:
    delete:
      deprecated: false
      operationId: v1AgentDeleteFile
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: File Path on VM
        explode: false
        in: path
        name: filePath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              examples:
                example1:
                  summary: No such file
                  value:
                    error: "Could not delete '/tmp/file.bin': No such file or directory"
                    errorID: AgentError
                    originalError:
                      name: OperationFailed
                      message: "Could not delete '/tmp/file.bin': No such file or\
                        \ directory"
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Delete a File on VM
      tags:
      - Agent
    get:
      deprecated: false
      operationId: v1AgentGetFile
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: File Path on VM
        explode: false
        in: path
        name: filePath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/File'
          description: File Contents
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Download a File from VM
      tags:
      - Agent
    patch:
      deprecated: false
      operationId: v1AgentSetFileAttributes
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: File Path on VM
        explode: false
        in: path
        name: filePath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileChanges'
        description: New attrs
        required: true
      responses:
        "204":
          description: Success
      security:
      - BearerAuth: []
      summary: Change Attrs of a File on VM
      tags:
      - Agent
    put:
      deprecated: false
      operationId: v1AgentUploadFile
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: File Path on VM to write to
        explode: false
        in: path
        name: filePath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/File'
        description: Uploaded File Contents
        required: true
      responses:
        "204":
          description: No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Upload a file to VM
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/file/temp:
    post:
      deprecated: false
      description: |-
        Returns a temporary random filename that is guranteed to be unique on the VMs
        filesystem at the time of invocation of this method.
      operationId: v1AgentGetTempFilename
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Filename
                  value: /var/tmp/temp.VcJh6k
              schema:
                type: string
          description: The temp file path
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Get the path for a new temp file
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/profile/profiles:
    get:
      deprecated: false
      operationId: v1AgentListProfiles
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Installed Profiles
                  value:
                    profiles:
                    - <profileId>
              schema:
                $ref: '#/components/schemas/AgentProfilesReturn'
          description: Installed Profiles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: List Profiles
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/profile/install:
    post:
      deprecated: false
      operationId: v1AgentInstallProfile
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/File'
        description: Profile to Install
        required: true
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Install a Profile to VM
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/profile/profiles/{profileId}:
    delete:
      deprecated: false
      operationId: v1AgentUninstallProfile
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: profileId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Uninstall a Profile from VM
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/system/shutdown:
    post:
      deprecated: false
      operationId: v1AgentSystemShutdown
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Instruct VM to halt
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/system/network:
    get:
      deprecated: false
      operationId: v1AgentSystemGetNetwork
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                    value: 10.11.100.1
              schema:
                $ref: '#/components/schemas/AgentValueReturn'
          description: IP Address of eth0
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Get IP of eth0 (AOSP only)
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/system/getprop:
    post:
      deprecated: false
      operationId: v1AgentSystemGetProp
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: application/json
                value: |-
                  {
                    "property": "corellium.opengapps"
                  }
            schema:
              $ref: '#/components/schemas/AgentSystemGetPropBody'
        description: Parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                    value: "1"
              schema:
                $ref: '#/components/schemas/AgentValueReturn'
          description: Value of requested property
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Get System Property (AOSP only)
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/system/install-opengapps:
    post:
      deprecated: false
      operationId: v1AgentSystemInstallOpenGApps
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: application/json
                value: |-
                  {
                      "url": "http://downloads.sourceforge.net/project/opengapps/arm64/20220119/open_gapps-arm64-11.0-pico-20220119.zip?r=&ts=1653516572&use_mirror=gigenet",
                      "hash": "58398bf7628f38ef07eaeb3abe26f3ebf0474f4d5ecdac0852bd5de3c15cc828",
                      "fingerprint": "google/flame/flame:11/RP1A.200720.009/6720564:user/release-keys__2020-09-05"
                  }
            schema:
              type: object
        description: Installation parameters
        required: true
      responses:
        "204":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Install OpenGApps (AOSP only)
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/system/adbauth:
    get:
      deprecated: false
      operationId: v1AgentSystemGetAdbAuth
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSystemAdbAuth'
          description: Current ADB Auth setting
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Get ADB Auth Setting (AOSP only)
      tags:
      - Agent
    put:
      deprecated: false
      operationId: v1AgentSystemSetAdbAuth
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: application/json
                value: |-
                  {
                    "enabled": true
                  }
            schema:
              $ref: '#/components/schemas/AgentSystemAdbAuth'
        description: Desired ADB Auth Setting
        required: true
      responses:
        "204":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Set ADB Auth Setting (AOSP only)
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/system/lock:
    post:
      deprecated: false
      operationId: v1AgentSystemLock
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Lock Device (iOS Only)
      tags:
      - Agent
  /v1/instances/{instanceId}/agent/v1/system/unlock:
    post:
      deprecated: false
      operationId: v1AgentSystemUnlock
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentError'
          description: Agent Error
      security:
      - BearerAuth: []
      summary: Unlock Device (iOS Only)
      tags:
      - Agent
  /v1/instances/{instanceId}/console:
    get:
      deprecated: false
      operationId: v1GetInstanceConsole
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: OK
                  value:
                    url: wss://host.domain.com/console/N5IKFgwlQVzkqxak4wGQ78vhPU3JbF0W0xJl_eXz5q9sQlRy2DILxZ0i8DH_pC7jf6MoqUqVcp7fctgNHAAOx_xfCAiKXc4J9r7YavPe7KQhEciHTXfPp1fFMz40ACh3kdPC38M3URNMSWWaCmfg45qd3S0CqMW0r2_Bp9CNo2k%3D
              schema:
                $ref: '#/components/schemas/InstanceConsoleEndpoint'
          description: OK
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=7f4f241c-821f-4219-905f-c3b50b0db5dd
                      not found
                    errorID: InstanceNotFound
                    name: Instance
                    params:
                      instanceId: 7f4f241c-821f-4219-905f-c3b50b0db5dd
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Get console websocket URL
      tags:
      - Instances
  /v1/instances/{instanceId}/networkMonitor.pcap:
    get:
      deprecated: false
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.tcpdump.pcap:
              schema:
                $ref: '#/components/schemas/File'
          description: pcap file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Download a Network Monitor pcap file
      tags:
      - Instances
  /v1/instances/{instanceId}/netdump.pcap:
    get:
      deprecated: false
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.tcpdump.pcap:
              schema:
                $ref: '#/components/schemas/File'
          description: pcapng file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Download a netdump pcap file
      tags:
      - Instances
      - Netdump
  /v1/instances/{instanceId}/start:
    post:
      deprecated: false
      operationId: v1StartInstance
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceStartOptions'
        description: Start options
        required: false
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: No instance associated with this value
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                example3:
                  summary: Conflict
                  value:
                    error: Instance is already started
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
      security:
      - BearerAuth: []
      summary: Start an Instance
      tags:
      - Instances
  /v1/instances/{instanceId}/stop:
    post:
      deprecated: false
      operationId: v1StopInstance
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceStopOptions'
        description: Stop options
        required: false
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: No instance associated with this value
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                example3:
                  summary: Conflict
                  value:
                    error: Instance is currently in an off state
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/UserError'
          description: Conflict
      security:
      - BearerAuth: []
      summary: Stop an Instance
      tags:
      - Instances
  /v1/instances/{instanceId}/reboot:
    post:
      deprecated: false
      operationId: v1RebootInstance
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: No instance associated with this value
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Reboot an Instance
      tags:
      - Instances
  /v1/instances/{instanceId}/pause:
    post:
      deprecated: false
      operationId: v1PauseInstance
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: No instance associated with this value
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Pause an Instance
      tags:
      - Instances
  /v1/instances/{instanceId}/unpause:
    post:
      deprecated: false
      operationId: v1UnpauseInstance
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: No instance associated with this value
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Unpause an Instance
      tags:
      - Instances
  /v1/instances/{instanceId}/state:
    put:
      deprecated: false
      operationId: v1SetInstanceState
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V1SetStateBody'
        description: Desired State
        required: true
      responses:
        "204":
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                example1:
                  summary: Task in Progress
                  value:
                    error: Instance is currently attempting to process a different
                      task
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance not found
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                example4:
                  summary: Conflict
                  value:
                    error: Instance cannot transition to that state
                    errorID: UserError
                    field: state
              schema:
                $ref: '#/components/schemas/UserError'
          description: Conflict
      security:
      - BearerAuth: []
      summary: Set state of Instance
      tags:
      - Instances
  /v2/instances/{instanceId}/state:
    get:
      deprecated: false
      operationId: v2GetInstanceState
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: The attributes to return.
        explode: true
        in: query
        name: returnAttr
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Current Instance State
                  value: "on"
              schema:
                $ref: '#/components/schemas/InstanceState'
          description: Current Instance State
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: No instance associated with this value
                    errorID: UserError
                    field: InstanceId
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Get state of Instance
      tags:
      - Instances
  /v1/instances/{instanceId}/rate:
    get:
      deprecated: false
      description: "Returns the cost, in microcents, for the instance in the on and\
        \ off state. Instances are charged $0.25 / day for storage (off) and $0.25\
        \ per core per hour (on)."
      operationId: v1GetInstanceRate
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Rate Information
                  value:
                    onRateMicrocents: 13889
                    offRateMicrocents: 289
              schema:
                $ref: '#/components/schemas/RateInfo'
          description: Rate Information
      security:
      - BearerAuth: []
      summary: Get rate information
      tags:
      - Instances
  /v1/instances/{instanceId}/gpios:
    get:
      deprecated: false
      operationId: v1GetInstanceGpios
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Current GPIO State
                  value:
                    led:
                      bitCount: 8
                      banks:
                      - - 1
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                    button:
                      bitCount: 2
                      banks:
                      - - 1
                        - 0
                      - - 0
                        - 1
                    switch:
                      bitCount: 8
                      banks:
                      - - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 1
              schema:
                $ref: '#/components/schemas/GpiosState'
          description: Current GPIO State
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Get Instance GPIOs
      tags:
      - Instances
    put:
      deprecated: false
      operationId: v1SetInstanceGpios
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Desired GPIO State
                value: |-
                  {
                    "button": {
                      "bitCount": 2,
                      "banks": [
                        [0,1],
                        [1,0]
                      ]
                    },
                    "switch": {
                      "bitCount": 8,
                      "banks": [
                        [0,1,0,1,0,1,0,1]
                      ]
                    }
                  }
            schema:
              $ref: '#/components/schemas/GpiosState'
        description: New GPIO state
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Current GPIOs State
                  value:
                    led:
                      bitCount: 8
                      banks:
                      - - 1
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                        - 0
                    button:
                      bitCount: 2
                      banks:
                      - - 0
                        - 1
                      - - 1
                        - 0
                    switch:
                      bitCount: 8
                      banks:
                      - - 0
                        - 1
                        - 0
                        - 1
                        - 0
                        - 1
                        - 0
                        - 1
              schema:
                $ref: '#/components/schemas/GpiosState'
          description: Current GPIOs State
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Set Instance GPIOs
      tags:
      - Instances
  /v1/instances/{instanceId}/peripherals:
    get:
      deprecated: false
      operationId: v1GetInstancePeripherals
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Current Peripherals State
                  value:
                    acceleration:
                    - 0
                    - 9.81
                    - 0
                    gyroscope:
                    - 0
                    - 0
                    - 0
                    magnetic:
                    - 0
                    - 45
                    - 0
                    orientation:
                    - 0
                    - 0
                    - 0
                    temperature: 25
                    proximity: 50
                    light: 20
                    pressure: 1013.25
                    humidity: 55
              schema:
                $ref: '#/components/schemas/PeripheralsData'
          description: Current Peripherals State
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Get Instance Peripherals
      tags:
      - Instances
    put:
      deprecated: false
      operationId: v1SetInstancePeripherals
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Current Peripherals State
                value: |-
                  {
                    "acceleration": [0, 9.81, 0],
                    "gyroscope": [0, 0, 0],
                    "magnetic": [0, 45, 0 ],
                    "orientation": [0, 0, 0 ],
                    "temperature": 25,
                    "proximity": 50,
                    "light": 20,
                    "pressure": 1013.25,
                    "humidity": 55
                  }
            schema:
              $ref: '#/components/schemas/PeripheralsData'
        description: New peripherals state
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Current Peripherals State
                  value:
                    acceleration:
                    - 0
                    - 9.81
                    - 0
                    gyroscope:
                    - 0
                    - 0
                    - 0
                    magnetic:
                    - 0
                    - 45
                    - 0
                    orientation:
                    - 0
                    - 0
                    - 0
                    temperature: 25
                    proximity: 50
                    light: 20
                    pressure: 1013.25
                    humidity: 55
              schema:
                $ref: '#/components/schemas/PeripheralsData'
          description: Current Peripherals State
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Set Instance Peripherals
      tags:
      - Instances
  /v1/instances/{instanceId}/restoreBackup:
    post:
      deprecated: false
      operationId: v1RestoreBackup
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreBackupData'
        description: Restore backup data
        required: false
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Restore backup
      tags:
      - Instances
  /v1/instances/{instanceId}/screenshot.{format}:
    get:
      deprecated: false
      operationId: v1GetInstanceScreenshot
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: New peripherals state
        explode: false
        in: path
        name: format
        required: true
        schema:
          enum:
          - png
          - jpeg
          type: string
        style: simple
      - deprecated: false
        description: Screenshot scale 1:N
        explode: true
        in: query
        name: scale
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Screenshot'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Screenshot'
          description: Screenshot
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Get Instance Screenshot
      tags:
      - Instances
  /v1/instances/{instanceId}/rotate:
    post:
      deprecated: false
      description: |-
        Rotate device to orientation.  Accepted orientations:
        1. Portrait
        2. Portrait vertically inverted (up-side-down)
        3. Landscape with top of the device to the left
        4. Landscape with top of the device to the right
      operationId: v1RotateInstance
      parameters:
      - deprecated: false
        description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Portrait orientation
                value: |-
                  {
                    "orientation": 1
                  }
              example2:
                summary: Landscape orientation
                value: |-
                  {
                    "orientation": 4
                  }
            schema:
              $ref: '#/components/schemas/RotateBody'
        description: ""
        required: true
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=7f4f241c-821f-4219-905f-c3b50b0db5dd
                      not found
                    errorID: InstanceNotFound
                    name: Instance
                    params:
                      instanceId: 7f4f241c-821f-4219-905f-c3b50b0db5dd
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Rotate device to specified orientation
      tags:
      - Instances
  /v1/instances/{instanceId}/input:
    post:
      deprecated: false
      description: |-
        Sends a touch or button event to the VM.

        - Buttons (or keys) to be held during the input are specified as an array of strings, each string must be either a single ascii character or one of the following keywords:
          - VM Buttons: finger, homeButton, holdButton, volumeUp, volumeDown, ringerSwitch, backButton, overviewButton
          - Keyboard Buttons: again, alt, alterase, apostrophe, back, backslash, backspace, bassboost, bookmarks, bsp, calc, camera, cancel, caps, capslock, chat, close, closecd, comma, compose, computer, config, connect, copy, ctrl, cut, cyclewindows, dashboard, del, delete, deletefile, dot, down, edit, eject, ejectclose, email, end, enter, equal, esc, escape, exit, f1, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f2, f20, f21, f22, f23, f24, f3, f4, f5, f6, f7, f8, f9, fastfwd, file, finance, find, forward, front, grave, hangeul, hanja, help, henkan, home, homepage, hp, hrgn, ins, insert, iso, k102, kp0, kp1, kp2, kp3, kp4, kp5, kp6, kp7, kp8, kp9, kpasterisk, kpcomma, kpdot, kpenter, kpequal, kpjpcomma, kpleftparen, kpminus, kpplus, kpplusminus, kprightparen, kpslash, ktkn, ktknhrgn, left, leftalt, leftbrace, leftctrl, leftmeta, leftshift, linefeed, macro, mail, menu, meta, minus, move, msdos, muhenkan, mute, new, next, numlock, open, pagedown, pageup, paste, pause, pausecd, pgdn, pgup, phone, play, playcd, playpause, power, previous, print, prog1, prog2, prog3, prog4, props, question, record, redo, refresh, return, rewind, right, rightalt, rightbrace, rightctrl, rightmeta, rightshift, ro, rotate, scale, screenlock, scrolldown, scrolllock, scrollup, search, semicolon, sendfile, setup, shift, shop, slash, sleep, sound, space, sport, stop, stopcd, suspend, sysrq, tab, undo, up, voldown, volup, wakeup, www, xfer, yen, zkhk
      operationId: v1PostInstanceInput
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: "100ms touch at 300,600"
                value: |-
                  [
                    {
                      "buttons": ["finger"],
                      "position": [
                        [300, 600]
                      ],
                      "wait": 0
                    },
                    {
                      "buttons": [],
                      "wait": 100
                    }
                  ]
              example2:
                summary: One finger swipe
                value: |-
                  [
                    {
                      "startButtons": ["finger"],
                      "start": [
                        [300, 600]
                      ],
                      "bezierPoints": [
                        [ [350, 700] ],
                        [ [375, 750] ]
                      ],
                      "end": [
                        [400, 650]
                      ],
                      "endButtons": [],
                      "duration": 200
                    }
                  ]
              example3:
                summary: Two finger swipe
                value: |-
                  [
                    {
                      "startButtons": ["finger"],
                      "start": [
                        [300, 600], [350, 650]
                      ],
                      "bezierPoints": [
                        [ [350, 700], [400, 750] ],
                        [ [375, 750], [425, 800] ]
                      ],
                      "end": [
                        [400, 650], [450, 700]
                      ],
                      "endButtons": [],
                      "duration": 200
                    }
                  ]
              example4:
                summary: "Type Hello, world"
                value: |-
                  [
                    {
                      "text": "Hello, world"
                    }
                  ]
              example5:
                summary: "Touch point then type \"Hello, world\""
                value: |-
                  [
                    {
                      "buttons": ["finger"],
                      "position": [
                        [300, 600]
                      ],
                      "wait": 0
                    },
                    {
                      "buttons": [],
                      "wait": 100
                    },
                    {
                      "text": "Hello, world"
                    }
                  ]
              example6:
                summary: Example of pressing/releasing the fingerprint sensor
                value: |-
                  [
                      {
                        "buttons": ["finger:1"]
                      },
                      {
                        "buttons": [],
                        "wait": 500
                      }
                    ]
            schema:
              items:
                $ref: '#/components/schemas/InstanceInput'
              type: array
        description: The input to send to the VM
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
          description: ETA of input completion in milliseconds
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Provide Instance Input
      tags:
      - Instances
  /v1/instances/{instanceId}/consoleLog:
    get:
      deprecated: false
      operationId: v1GetInstanceConsoleLog
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Current console log
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get Console Log
      tags:
      - Instances
  /v1/instances/{instanceId}/panics:
    delete:
      deprecated: false
      operationId: v1ClearInstancePanics
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Clear Panics
      tags:
      - Instances
    get:
      deprecated: false
      operationId: v1GetInstancePanics
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Array of panics
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get Panics
      tags:
      - Instances
  /v1/instances/{instanceId}/media/play:
    post:
      deprecated: false
      operationId: v1MediaPlay
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Play a file located at a URL
                value: |-
                  {
                    "url": "http://null.to/test.mp4"
                  }
              example2:
                summary: Play an already uploaded file
                value: |-
                  {
                    "imageId": "afec1445-979c-4181-8a3b-3099935085c7"
                  }
            schema:
              $ref: '#/components/schemas/MediaPlayBody'
        description: Request Body
        required: true
      responses:
        "204":
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Conflict
      security:
      - BearerAuth: []
      summary: Start playing media
      tags:
      - Instances
  /v1/instances/{instanceId}/media/stop:
    post:
      deprecated: false
      operationId: v1MediaStop
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Stop playing media
      tags:
      - Instances
  /v1/instances/{instanceId}/strace:
    delete:
      deprecated: false
      operationId: v1ClearCoreTrace
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Clear CoreTrace logs
      tags:
      - CoreTrace
      - Instances
  /v1/instances/{instanceId}/strace/enable:
    post:
      deprecated: false
      operationId: v1StartCoreTrace
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Start CoreTrace on an instance
      tags:
      - CoreTrace
      - Instances
  /v1/instances/{instanceId}/strace/disable:
    post:
      deprecated: false
      operationId: v1StopCoreTrace
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Stop CoreTrace on an instance.
      tags:
      - CoreTrace
      - Instances
  /v1/instances/{instanceId}/strace/thread-list:
    get:
      deprecated: false
      operationId: v1ListThreads
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Threads
                  value:
                  - kernelId: ffffffc0117d7280
                    name: swapper
                    pid: 0
                    threads:
                    - kernelId: ffffffc0117d7280
                      tid: 0
                      stack:
                      - ffffffc01001655c
                      - ffffffc010cf10c4
                      - ffffffc010cf0c14
                      - ffffffc010cf0dd4
                      - ffffffc0100d768c
                      - ffffffc010cfae2c
                      - ffffffc01008b8a8
                      - ffffffc01008bb24
                      - ffffffc010cf11cc
                      - ffffffc011530a04
                      - ffffffc011530f60
                      - 00000000419f0000
                    - kernelId: ffffffc0117d8630
                      tid: 0
                      stack:
                      - fffffffffffffffc
              schema:
                items:
                  $ref: '#/components/schemas/KernelTask'
                type: array
          description: Threads
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get Running Threads (CoreTrace)
      tags:
      - CoreTrace
      - Instances
  /v1/instances/{instanceId}/btrace-authorize:
    get:
      deprecated: false
      operationId: v1BtracePreauthorize
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Token
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Pre-authorize an btrace download
      tags:
      - HyperTrace
      - Instances
  /v1/instances/{instanceId}/btrace-kcrange:
    get:
      deprecated: false
      operationId: v1Kcrange
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Kcranges
                  value: |-
                    [
                      {
                          "kext": "com.apple.iokit.IOSlowAdaptiveClockingFamily",
                          "range": [
                              "fffffff005964000",
                              "fffffff0059654c7"
                          ]
                      },
                      {
                          "kext": "com.apple.iokit.IOStorageFamily",
                          "range": [
                              "fffffff005966000",
                              "fffffff005979ebf"
                    ]
              schema:
                items:
                  $ref: '#/components/schemas/Kcrange'
                type: array
          description: Kcranges
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get Kernel extension ranges
      tags:
      - HyperTrace
      - Instances
  /v1/instances/{instanceId}/btrace:
    delete:
      deprecated: false
      operationId: v1ClearHyperTrace
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Clear HyperTrace logs
      tags:
      - HyperTrace
      - Instances
  /v1/instances/{instanceId}/btrace/enable:
    post:
      deprecated: false
      operationId: v1StartHyperTrace
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BtraceEnableOptions'
        description: ""
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Start HyperTrace on an instance
      tags:
      - HyperTrace
      - Instances
  /v1/instances/{instanceId}/btrace/disable:
    post:
      deprecated: false
      operationId: v1StopHyperTrace
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Stop HyperTrace on an instance.
      tags:
      - HyperTrace
      - Instances
  /v1/instances/{instanceId}/hooks/execute:
    post:
      deprecated: false
      operationId: v1ExecuteHyperTraceHooks
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Execute Hooks on an instance
      tags:
      - Hypervisor Hooks
      - Instances
  /v1/instances/{instanceId}/hooks/clear:
    post:
      deprecated: false
      operationId: v1ClearHyperTraceHooks
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Clear Hooks on an instance
      tags:
      - Hypervisor Hooks
      - Instances
  /v1/instances/{instanceId}/sslsplit/enable:
    post:
      deprecated: false
      operationId: v1StartNetworkMonitor
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Start Network Monitor on an instance.
      tags:
      - Instances
  /v1/instances/{instanceId}/sslsplit/disable:
    post:
      deprecated: false
      operationId: v1StopNetworkMonitor
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Stop Network Monitor on an instance.
      tags:
      - Instances
  /v1/instances/{instanceId}/netdump/enable:
    post:
      deprecated: false
      operationId: v1StartNetdump
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Capture all traffic
                value: "{ }"
              example2:
                summary: Capture only port 443 or 80 traffic from pid 42
                value: |-
                  {
                    ports: [ "443", "80" ],
                    processes: [ "42" ]
                  }
              example3:
                summary: Capture only port 443 or 80 traffic from process named misd
                value: |-
                  {
                    ports: [ "443", "80" ],
                    processes: [ "misd" ]
                  }
              example4:
                summary: Capture only TCP port 443 or 80 traffic to host 1.1.1.1
                value: |-
                  {
                    ports: [ "443", "80" ],
                    protocols: [ "tcp" ],
                    hosts: [ "1.1.1.1" ]
                  }
            schema:
              $ref: '#/components/schemas/NetdumpFilter'
        description: ""
        required: false
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Start Enhanced Network Monitor on an instance.
      tags:
      - Instances
      - Netdump
  /v1/instances/{instanceId}/netdump/disable:
    post:
      deprecated: false
      operationId: v1StopNetdump
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Stop Enhanced Network Monitor on an instance.
      tags:
      - Instances
      - Netdump
  /v1/instances/{instanceId}/exposeport/enable:
    post:
      deprecated: false
      operationId: v1EnableExposePort
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Enable an exposed port on an instance for device access.
      tags:
      - Instances
  /v1/instances/{instanceId}/exposeport/disable:
    post:
      deprecated: false
      operationId: v1DisableExposePort
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Disable an exposed port on an instance for device access.
      tags:
      - Instances
  /v1/instances/{instanceId}/message:
    post:
      deprecated: false
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Receive a message on an iOS vm
      tags:
      - Instances
  /v2/instances/{instanceId}/quickConnectCommand:
    get:
      deprecated: false
      operationId: v2GetInstanceQuickConnectCommand
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Quick Connect Command
                  value: ssh -J 17e41199-edb8-4c5f-912a-5e42550b0a9d@proxy.ci-2.corellium.co
                    root@10.11.221.3
              schema:
                type: string
          description: Quick Connect Command
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Recommended SSH Command for Quick Connect
      tags:
      - Instances
  /v1/instances/{instanceId}/upgrade:
    post:
      deprecated: false
      operationId: v1UpgradeInstance
      parameters:
      - deprecated: false
        description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: application/json
                value: |-
                  {
                    "os":"16.1",
                    "osbuild":"20B79"
                  }
            schema:
              $ref: '#/components/schemas/InstanceUpgradeBody'
        description: ""
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Upgrade iOS version
      tags:
      - Instances
  /v1/instances/{instanceId}/snapshots:
    get:
      deprecated: false
      operationId: v1GetInstanceSnapshots
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                  - id: c96b1f17-d694-45a9-af68-0a08f9c6098b
                    name: Initial Snapshot - Thu Mar 31 2022 23:56:32 GMT+0000 (Coordinated
                      Universal Time)
                    instance: 1008acc6-4886-41c3-9373-196114993a96
                    status:
                      task: none
                      created: true
                    date: 1648770996000
                    fresh: true
                    live: false
                    local: true
              schema:
                items:
                  $ref: '#/components/schemas/Snapshot'
                type: array
          description: application/json
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Get Instance Snapshots
      tags:
      - Snapshots
      - Instances
    post:
      deprecated: false
      operationId: v1CreateSnapshot
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotCreationOptions'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                    id: 16312ce2-a4b8-4a12-a60e-4f0f5b493418
                    name: Snapshot Name
                    instance: 1008acc6-4886-41c3-9373-196114993a96
                    status:
                      task: creating
                    date: 1648841621613
                    local: true
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: application/json
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Create Instance Snapshot
      tags:
      - Snapshots
      - Instances
  /v1/instances/{instanceId}/snapshots/{snapshotId}:
    delete:
      deprecated: false
      operationId: v1DeleteInstanceSnapshot
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Snapshot ID - uuid
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Snapshot
      tags:
      - Snapshots
      - Instances
    get:
      deprecated: false
      operationId: v1GetInstanceSnapshot
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Snapshot ID - uuid
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                    id: c96b1f17-d694-45a9-af68-0a08f9c6098b
                    name: Initial Snapshot - Thu Mar 31 2022 23:56:32 GMT+0000 (Coordinated
                      Universal Time)
                    instance: 1008acc6-4886-41c3-9373-196114993a96
                    status:
                      task: none
                      created: true
                    date: 1648770996000
                    fresh: true
                    live: false
                    local: true
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: application/json
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Get Instance Snapshot
      tags:
      - Snapshots
      - Instances
    patch:
      deprecated: false
      operationId: v1RenameInstanceSnapshot
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Snapshot ID - uuid
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotCreationOptions'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                    id: 16312ce2-a4b8-4a12-a60e-4f0f5b493418
                    name: New Name
                    instance: 1008acc6-4886-41c3-9373-196114993a96
                    status:
                      task: none
                      created: true
                    date: 1648841621000
                    live: false
                    local: true
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: application/json
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Rename a Snapshot
      tags:
      - Snapshots
      - Instances
  /v1/instances/{instanceId}/snapshots/{snapshotId}/restore:
    post:
      deprecated: false
      operationId: v1RestoreInstanceSnapshot
      parameters:
      - deprecated: false
        description: Instance ID - uuid
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Snapshot ID - uuid
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Restore a Snapshot
      tags:
      - Snapshots
      - Instances
  /v1/license/features:
    get:
      deprecated: false
      operationId: v1GetSupportedFeatures
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                  - RestoreBackup
                  - Netdump
                  - OsUpdate
              schema:
                items:
                  type: string
                type: array
          description: application/json
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get all supported features for user
      tags:
      - Licensing
  /v1/models:
    get:
      deprecated: false
      operationId: v1GetModels
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Supported device configurations
                  value:
                  - type: iot
                    name: rpi4b
                    flavor: rpi4b
                    description: Raspberry Pi 4
                    model: rpi4b
                    peripherals: false
                    quotas:
                      cores: 4
                      cpus: 4
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Supported device configurations
      security:
      - BearerAuth: []
      summary: Get Supported Models
      tags:
      - Models
  /v1/models/{model}/software:
    get:
      deprecated: false
      operationId: v1GetModelSoftware
      parameters:
      - deprecated: false
        description: Model to list available software for
        explode: false
        in: path
        name: model
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Supported software loads
                  value:
                  - version: 11.2.0
                    buildid: lite
                    AndroidFlavor: null
                    APIVersion: null
                    sha256sum: null
                    sha1sum: null
                    md5sum: 43419a06ef040f07161d574a03bd7a46-89
                    size: 463812863
                    uniqueid: Raspberry Pi OS lite
                    metadata: {}
                    releasedate: 2022-04-08T16:00:45Z
                    uploaddate: null
                    url: https://firmwares-us-east-1-avh-s3-arm-com.s3.amazonaws.com/rpi4b-11.2-lite.coreimg-88715747-93d8-4d48-b8af-94507662df9d
                    orig_url: https://firmwares-us-east-1-avh-s3-arm-com.s3.amazonaws.com/rpi4b-11.2-lite.coreimg-88715747-93d8-4d48-b8af-94507662df9d
                    filename: rpi4b-11.2-lite.coreimg-88715747-93d8-4d48-b8af-94507662df9d
                  - version: 11.2.0
                    buildid: desktop
                    AndroidFlavor: null
                    APIVersion: null
                    sha256sum: null
                    sha1sum: null
                    md5sum: cab7f75cd1347c521c0173717b04c5cd-229
                    size: 1197657757
                    uniqueid: Raspberry Pi OS Desktop
                    metadata: {}
                    releasedate: 2022-04-08T16:00:45Z
                    uploaddate: null
                    url: https://firmwares-us-east-1-avh-s3-arm-com.s3.amazonaws.com/rpi4b-11.2-desktop.coreimg-2df8a164-06bd-4342-885f-fb20d51feb76
                    orig_url: https://firmwares-us-east-1-avh-s3-arm-com.s3.amazonaws.com/rpi4b-11.2-desktop.coreimg-2df8a164-06bd-4342-885f-fb20d51feb76
                    filename: rpi4b-11.2-desktop.coreimg-2df8a164-06bd-4342-885f-fb20d51feb76
              schema:
                items:
                  $ref: '#/components/schemas/Firmware'
                type: array
          description: Supported software loads for this model
      security:
      - BearerAuth: []
      summary: Get Software for Model
      tags:
      - Models
  /v1/projects:
    get:
      deprecated: false
      operationId: v1GetProjects
      parameters:
      - deprecated: false
        description: Filter by project name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - deprecated: false
        description: Only include id of project in results
        explode: true
        in: query
        name: ids_only
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: All Projects
                  value:
                  - id: d59db33d-27bd-4b22-878d-49e4758a648e
                    name: ProjectName
                    settings:
                      internet-access: true
                      dhcp: true
                    quotas:
                      cores: 30
                      instances: 75
                      ram: 184320
                    quotasUsed:
                      cores: 2
                      instances: 7
                      ram: 2048
                      gpu: 0
                  - id: e2fdb33c-37ae-4b22-878d-49e4758a51f0
                    name: OtherProject
                    settings:
                      internet-access: true
                      dhcp: true
                    quotas:
                      cores: 30
                      instances: 75
                      ram: 184320
                    quotasUsed:
                      cores: 2
                      instances: 7
                      ram: 2048
                      gpu: 0
                example2:
                  summary: "Project: Filtered by Name"
                  value:
                  - id: d59db33d-27bd-4b22-878d-49e4758a648e
                    name: ProjectName
                    settings:
                      internet-access: true
                      dhcp: true
                    quotas:
                      cores: 30
                      instances: 75
                      ram: 184320
                    quotasUsed:
                      cores: 2
                      instances: 7
                      ram: 2048
                      gpu: 0
                example3:
                  summary: "All Projects: id only"
                  value:
                  - id: d59db33d-27bd-4b22-878d-49e4758a648e
                  - id: e2fdb33c-37ae-4b22-878d-49e4758a51f0
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: Projects
        "403":
          content:
            application/json:
              examples:
                example4:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example5:
                  summary: No Projects Found
                  value: {}
              schema:
                $ref: '#/components/schemas/UserError'
          description: No Projects Found
      security:
      - BearerAuth: []
      summary: Get Projects
      tags:
      - Projects
    post:
      deprecated: false
      operationId: v1CreateProject
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: New Project
                value: |-
                  {
                    "name": "New Project",
                    "settings": {
                      "internet-access": true
                    },
                    "quotas": {
                      "cores": 8,
                      "instances": 2,
                      "ram": 16384
                    }
                  }
            schema:
              $ref: '#/components/schemas/Project'
        description: Project
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Create a Project
      tags:
      - Projects
  /v1/projects/{projectId}:
    delete:
      deprecated: false
      operationId: v1DeleteProject
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: OK
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Delete a Project
      tags:
      - Projects
    get:
      deprecated: false
      operationId: v1GetProject
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get a Project
      tags:
      - Projects
    patch:
      deprecated: false
      operationId: v1UpdateProject
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        description: Updated Project Settings
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Update a Project
      tags:
      - Projects
  /v1/projects/{projectId}/instances:
    get:
      deprecated: false
      operationId: v1GetProjectInstances
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Filter by project name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - deprecated: false
        description: Attributes to include in instance return
        explode: false
        in: query
        name: returnAttr
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Instance'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get Instances in Project
      tags:
      - Projects
  /v1/projects/{projectId}/settings:
    patch:
      deprecated: false
      operationId: v1UpdateProjectSettings
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSettings'
        description: New settings
        required: true
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Change Project Settings
      tags:
      - Projects
  /v1/projects/{projectId}/vpnconfig/{format}:
    get:
      deprecated: false
      operationId: v1GetProjectVpnConfig
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: VPN Config format
        explode: false
        in: path
        name: format
        required: true
        schema:
          enum:
          - ovpn
          type: string
        style: simple
      responses:
        "200":
          content:
            application/x-openvpn-profile:
              schema:
                type: string
          description: OpenVPN Configuration
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get Project VPN Configuration
      tags:
      - Projects
  /v1/projects/{projectId}/keys:
    get:
      deprecated: false
      operationId: v1GetProjectKeys
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Authorized Keys
                  value:
                  - identifier: 28c55862-ea9e-4120-8ec9-678972ed9388
                    kind: ssh
                    project: 50e8c4bd-11a0-4c78-bd57-20481f0272c8
                    label: My New Key
                    key: ssh-ed25519 <key>
                    updatedAt: 2022-05-06T01:45:25.377Z
                    createdAt: 2022-05-06T01:45:25.377Z
                    fingerprint: <fingerprint>
              schema:
                items:
                  $ref: '#/components/schemas/ProjectKey'
                type: array
          description: Authorized Keys
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get Project Authorized Keys
      tags:
      - Projects
    post:
      deprecated: false
      operationId: v1AddProjectKey
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: New ed25519 SSH key
                value: |-
                  {
                    "kind": "ssh",
                    "label": "My New Key",
                    "key": "ssh-ed25519 <key>"
                  }
            schema:
              $ref: '#/components/schemas/ProjectKey'
        description: Key to add
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Authorized Key
                  value:
                    identifier: 28c55862-ea9e-4120-8ec9-678972ed9388
                    kind: ssh
                    project: 50e8c4bd-11a0-4c78-bd57-20481f0272c8
                    label: My New Key
                    key: ssh-ed25519 <key>
                    updatedAt: 2022-05-06T01:45:25.377Z
                    createdAt: 2022-05-06T01:45:25.377Z
                    fingerprint: <fingerprint>
              schema:
                $ref: '#/components/schemas/ProjectKey'
          description: Authorized Key
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Add Project Authorized Key
      tags:
      - Projects
  /v1/projects/{projectId}/keys/{keyId}:
    delete:
      deprecated: false
      operationId: v1RemoveProjectKey
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Key ID - uuid
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not found
                  value:
                    error: "projectKey with project=50e8c4bd-11a0-4c78-bd57-20481f0272c8,\
                      \ identifier=28c55862-ea9e-4120-8ec9-678972ed9388 not found"
                    errorID: NotFound
                    name: projectKey
                    params:
                      project: 50e8c4bd-11a0-4c78-bd57-20481f0272c8
                      identifier: 28c55862-ea9e-4120-8ec9-678972ed9388
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: Not found
      security:
      - BearerAuth: []
      summary: Delete Project Authorized Key
      tags:
      - Projects
  /v1/roles:
    get:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1Roles
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Roles
                  value:
                  - role: admin
                    project: df67838d-0ada-499c-b7a0-e55da078c76b
                    user: bbae7b15-c212-4055-a0ee-89381d01d160
                  - role: _member_
                    project: df67838d-0ada-499c-b7a0-e55da078c76b
                    user: bbae7b15-c212-4055-a0ee-89381d01d160
                  - role: admin
                    project: df67838d-0ada-499c-b7a0-e55da078c76b
                    team: ad423e65-8744-4289-92c4-aa9770dc0153
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Roles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get all roles
      tags:
      - Roles
  /v1/roles/projects/{projectId}/users/{userId}/roles/{roleId}:
    delete:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1RemoveUserRoleFromProject
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: User ID - uuid
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Role ID - uuid
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Remove user role from project
      tags:
      - Roles
    put:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1AddUserRoleToProject
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: User ID - uuid
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Role ID - uuid
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Add user role to project
      tags:
      - Roles
  /v1/roles/projects/{projectId}/teams/{teamId}/roles/{roleId}:
    delete:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1RemoveTeamRoleFromProject
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Team ID - uuid
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Role ID - uuid
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Remove team role from project
      tags:
      - Roles
    put:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1AddTeamRoleToProject
      parameters:
      - deprecated: false
        description: Project ID - uuid
        explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Team ID - uuid
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: Role ID - uuid
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Add team role to project
      tags:
      - Roles
  /v1/snapshots/{snapshotId}:
    delete:
      deprecated: false
      operationId: v1DeleteSnapshot
      parameters:
      - deprecated: false
        description: Snapshot ID - uuid
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example2:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Snapshot
      tags:
      - Snapshots
    get:
      deprecated: false
      operationId: v1GetSnapshot
      parameters:
      - deprecated: false
        description: Snapshot ID - uuid
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                    id: c96b1f17-d694-45a9-af68-0a08f9c6098b
                    name: Initial Snapshot - Thu Mar 31 2022 23:56:32 GMT+0000 (Coordinated
                      Universal Time)
                    instance: 1008acc6-4886-41c3-9373-196114993a96
                    status:
                      task: none
                      created: true
                    date: 1648770996000
                    fresh: true
                    live: false
                    local: true
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: application/json
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Get Snapshot
      tags:
      - Snapshots
    patch:
      deprecated: false
      operationId: v1SnapshotRename
      parameters:
      - deprecated: false
        description: Snapshot ID - uuid
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotCreationOptions'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: application/json
                  value:
                    id: 16312ce2-a4b8-4a12-a60e-4f0f5b493418
                    name: New Name
                    instance: 1008acc6-4886-41c3-9373-196114993a96
                    status:
                      task: none
                      created: true
                    date: 1648841621000
                    live: false
                    local: true
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: application/json
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                example3:
                  summary: Not Found
                  value:
                    error: Instance with instanceId=3a28e565-cf46-4706-86e7-e3af6b33ae0dd
                      not found
                    errorID: NotFound
                    name: Instance
                    params:
                      instanceId: 3a28e565-cf46-4706-86e7-e3af6b33ae0dd
              schema:
                $ref: '#/components/schemas/UserError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Rename a Snapshot
      tags:
      - Snapshots
  /v1/teams:
    get:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1Teams
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Teams
                  value:
                  - id: all-users
                    label: All Users
                    users:
                    - id: 83d6b5f9-ca8b-45a5-b73a-b4f9d2a8f30f
                      label: User
                      name: user@gmail.com
                      email: user@gmail.com
                      administrator: true
                    - id: bbae7b15-c212-4055-a0ee-89381d01d160
                      label: User2
                      name: user2@gmail.com
                      email: user2@gmail.com
                      administrator: null
                  - id: ad423e65-8744-4289-92c4-aa9770dc0153
                    label: Team Leads
                    users:
                    - id: 83d6b5f9-ca8b-45a5-b73a-b4f9d2a8f30f
                      label: User
                      name: user@gmail.com
                      email: user@gmail.com
                      administrator: true
              schema:
                items:
                  $ref: '#/components/schemas/Team'
                type: array
          description: Teams
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Get teams
      tags:
      - Teams
    post:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1TeamCreate
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Create Team
                value: "{ \"name\": \"Test Team\"}"
            schema:
              $ref: '#/components/schemas/CreateTeam'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamCreate'
          description: User
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Create team
      tags:
      - Teams
  /v1/teams/{teamId}:
    delete:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1TeamDelete
      parameters:
      - deprecated: false
        description: Team ID - uuid
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInternalConsistencyError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete team
      tags:
      - Teams
    patch:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1TeamChange
      parameters:
      - deprecated: false
        description: Team ID - uuid
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Create Team
                value: "{ \"name\": \"Test Team\"}"
            schema:
              $ref: '#/components/schemas/CreateTeam'
        description: ""
        required: true
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundError'
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update team
      tags:
      - Teams
  /v1/teams/{teamId}/users/{userId}:
    delete:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1RemoveUserFromTeam
      parameters:
      - deprecated: false
        description: Team ID - uuid
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: User ID - uuid
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInternalConsistencyError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Remove user from team
      tags:
      - Teams
    put:
      deprecated: false
      description: This endpoint is available for Enterprise accounts only
      operationId: v1AddUserToTeam
      parameters:
      - deprecated: false
        description: Team ID - uuid
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: string
        style: simple
      - deprecated: false
        description: User ID - uuid
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid or missing authorization token
                    errorID: PermissionDenied
                    originalError: Invalid or missing authorization token
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInternalConsistencyError'
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Add user to team
      tags:
      - Teams
  /v1/users:
    post:
      deprecated: false
      operationId: v1CreateUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: User data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: User
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid username or password.
                    errorID: InvalidUsernameorPassword
                    originalError: Access denied
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Create User
      tags:
      - Users
  /v1/users/agree:
    post:
      deprecated: false
      operationId: v1UserAgreeTerms
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgreedAck'
          description: application/json
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Consent to the current terms and conditions
      tags:
      - Users
  /v1/users/{userId}:
    delete:
      deprecated: false
      operationId: v1DeleteUser
      parameters:
      - deprecated: false
        description: userId - uuid
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: User
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid username or password.
                    errorID: InvalidUsernameorPassword
                    originalError: Access denied
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Delete User
      tags:
      - Users
    patch:
      deprecated: false
      operationId: v1UpdateUser
      parameters:
      - deprecated: false
        description: userId - uuid
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: User data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: User
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid username or password.
                    errorID: InvalidUsernameorPassword
                    originalError: Access denied
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Update User
      tags:
      - Users
  /v1/users/login:
    post:
      deprecated: false
      operationId: v1UsersLogin
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Authorization data
                value: |-
                  {
                    "username": "admin",
                    "password": "password"
                  }
            schema:
              $ref: '#/components/schemas/Credentials'
        description: Authorization data
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                example1:
                  summary: Success
                  value:
                    token: eyJhbGciOiJSUzM4NCIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiZjU0MmY3NTktNGQ3OC00MTE5LWE4MWQtNDVmM2YxNTdhYmZkIiwiZG9tYWluIjoiNjQzMjM3ZWYtMzQ3My00ZTc3LTg3NTEtMWI1YTY4ZWU4ZTY5Iiwibm9JT1MiOmZhbHNlLCJhZG1pbmlzdHJhdG9yIjp0cnVlLCJwcm9qZWN0LWFkbWluaXN0cmF0b3IiOnRydWUsInRvdHAiOm51bGwsImVwb2NoIjpudWxsLCJpYXQiOjE2NDc3MTk0MTAsImV4cCI6MTY0Nzc0MTAxMH0.f9qD88Zaj-ux6Sc2NTGMDp0Q0WQlLQtDwOJsaajvaG_B0B8DABNU3lyCqU1eYmHOUH7cdTIfxg6PommhVh6TeIr7NNW8r1da4YYVg8Dltpv5WjIHTrHTPK-hpfvvArnhY6IszEy9o4fd4YYIYxEn4wxqNJoFG9ZygX3iN4aL5pU0ZtPyjj6Rhb8wTXikwIlqf2-mE1hwUlJt6b_HEf9B5gle_zMeLsDssDQ34SrBgIzD8Hqqnb2pfu9w7VCc2xGyBfa5hy1eIdwgc_A9S44G4jzf7OKAkm1BP239dMlIfv6YUrDOVSqip1j2UleTRRRT2dQiPdeKAzOltPhMQ_qB9o6plXUvQh4GKyavDWiM1Kvcj-HN6NdvPDG24CyZIqV3Hr_KgC5laCG6xaJY6G4whVyY-tFfWuG5Kw8oX_Ao5BXBl6MbrDTLgDauNoua_zVeeWOiAA1tT6lcno3ppHcb-9ikozVhLX5z7jegmzuVYyYBwqlpI_m0A-bQE_MAoMpt5GNRwz0tkQqHL4-lIL9M5vy04BrkNsxLlY0lrfGj9VFIIv8ojxMUERfGP5FnS3CsEqTgZogOjk96EMEeHCUv1JciOSOcnVFB5NqM84ueeViNkRpDasD0lJY0arJMG4DegORmWT6pLrK76M-M-Eoize343uSPgIGikbhfVTS9njQ
                    expiration: 2022-03-20T01:50:10.000Z
              schema:
                $ref: '#/components/schemas/Token'
          description: User Authorization
        "403":
          content:
            application/json:
              examples:
                example2:
                  summary: Forbidden
                  value:
                    error: Invalid username or password.
                    errorID: InvalidUsernameorPassword
                    originalError: Access denied
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security: []
      summary: Log In
      tags:
      - Users
  /v1/users/change-password:
    post:
      deprecated: false
      description: Authenticated solely by the old-password.
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Password Change
                value: |-
                  {
                    "user": "<userId>",
                    "old-password": "Password1",
                    "new-password": "Password2"
                  }
            schema:
              $ref: '#/components/schemas/PasswordChangeBody'
        description: ""
        required: true
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid username or password.
                    errorID: InvalidUsernameorPassword
                    originalError: Access denied
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security: []
      summary: Change User Password
      tags:
      - Users
  /v1/users/reset-password:
    post:
      deprecated: false
      operationId: v1ResetUserPassword
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example1:
                summary: Password Reset
                value: |-
                  {
                    "token": "<token>",
                    "totpToken": "<totpToken>",
                    "new-password": "password"
                  }
            schema:
              $ref: '#/components/schemas/PasswordResetBody'
        description: application/json
        required: true
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid username or password.
                    errorID: InvalidUsernameorPassword
                    originalError: Access denied
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security: []
      summary: Reset User Password
      tags:
      - Users
  /v1/users/send-reset-link:
    post:
      deprecated: false
      operationId: v1SendUserResetLink
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetLinkBody'
        description: application/json
        required: true
      responses:
        "204":
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid username or password.
                    errorID: InvalidUsernameorPassword
                    originalError: Access denied
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security: []
      summary: Send Password Reset Link
      tags:
      - Users
  /v1/users/reset-link-info:
    get:
      deprecated: false
      operationId: v1GetResetLinkInfo
      parameters:
      - deprecated: false
        description: Reset token
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Reset Link Info
        "403":
          content:
            application/json:
              examples:
                example1:
                  summary: Forbidden
                  value:
                    error: Invalid username or password.
                    errorID: InvalidUsernameorPassword
                    originalError: Access denied
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
      security: []
      summary: Send Password Reset Link Info
      tags:
      - Users
components:
  schemas:
    Credentials:
      description: ""
      example:
        password: password
        username: username
      properties:
        username:
          description: Authentication Username
          type: string
        password:
          description: Authentication Password
          format: password
          type: string
      required:
      - password
      - username
      type: object
    Token:
      description: ""
      example:
        expiration: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        token:
          description: ""
          type: string
        expiration:
          description: Token expiration
          format: date-time
          nullable: true
          type: string
      required:
      - token
      type: object
    ApiToken:
      description: ""
      properties:
        apiToken:
          description: ""
          type: string
      required:
      - apiToken
      type: object
    coupon_options:
      description: Coupon options
      example:
        amount: 0.8008281904610115
        used: true
        type: percent
      properties:
        type:
          description: ""
          enum:
          - percent
          - discount
          - absolute
          type: string
        amount:
          description: Amount
          type: number
        used:
          description: "Is Used. If true, this coupon has been used and cannot be\
            \ used again"
          type: boolean
      required:
      - amount
      - type
      - used
      type: object
    plan:
      description: Plan options
      example:
        licenseType: premium
        cores: 6
      properties:
        licenseType:
          description: ""
          enum:
          - premium
          - individual
          - standard
          - enterprise
          - individual-usage
          - enterprise-usage
          - unrestricted
          type: string
        cores:
          description: Number of CPU cores
          type: integer
      required:
      - cores
      - licenseType
      type: object
    trial:
      description: Trial options
      example:
        duration: 1.4658129805029452
      properties:
        duration:
          description: Duration in days
          type: number
      required:
      - duration
      type: object
    SubscriberInvite:
      description: Subscriber Invite
      example:
        coupon_code: coupon_code
        use_by: use_by
        active: true
        coupon_options:
          amount: 0.8008281904610115
          used: true
          type: percent
        trial:
          duration: 1.4658129805029452
        aggregate: aggregate
        reusable: true
        createdAt: createdAt
        domain: domain
        name: name
        plan:
          licenseType: premium
          cores: 6
        email: email
        updatedAt: updatedAt
      properties:
        coupon_options:
          $ref: '#/components/schemas/coupon_options'
        plan:
          $ref: '#/components/schemas/plan'
        trial:
          $ref: '#/components/schemas/trial'
        name:
          description: Name
          nullable: true
          type: string
        email:
          description: Email
          nullable: true
          type: string
        coupon_code:
          description: Coupon code
          type: string
        domain:
          description: Domain
          nullable: true
          type: string
        aggregate:
          description: Aggregate
          type: string
        use_by:
          description: Used By
          nullable: true
          type: string
        active:
          description: Is Active flag
          type: boolean
        reusable:
          description: Is reusable flag
          type: boolean
        createdAt:
          description: Created Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
          type: string
        updatedAt:
          description: Updated Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
          type: string
      required:
      - active
      - aggregate
      - coupon_code
      - createdAt
      - reusable
      - updatedAt
      type: object
    EmptyResponse:
      description: ""
      properties: {}
      type: object
    TrialRequestMetadata:
      description: ""
      properties:
        name:
          description: ""
          nullable: true
          type: string
        company:
          description: provided company name
          nullable: true
          type: string
        malware:
          description: "option from sign up form, interesting using for malware"
          nullable: true
          type: boolean
        research:
          description: "option from sign up form, interesting using for research"
          nullable: true
          type: boolean
        pentest:
          description: "option from sign up form, interesting using for pentesting"
          nullable: true
          type: boolean
        other:
          description: "option from sign up form, interesting using for other area\
            \ added here"
          nullable: true
          type: string
      type: object
    Address:
      description: The user's address
      properties:
        address1:
          description: "Address line 1 (e.g., street, PO Box, or company name)."
          nullable: true
          type: string
        address2:
          description: "Address line 2 (e.g., apartment, suite, unit, or building)."
          nullable: true
          type: string
        city:
          description: "City, district, suburb, town, or village."
          nullable: true
          type: string
        country:
          description: Two-letter country code (ISO 3166-1 alpha-2).
          nullable: true
          type: string
        postal_code:
          description: ZIP or postal code.
          nullable: true
          type: string
        state:
          description: "State, county, province, or region."
          nullable: true
          type: string
      type: object
    TrialRequestOptions:
      description: ""
      properties:
        address:
          $ref: '#/components/schemas/Address'
        email:
          description: The user's email address.
          nullable: true
          type: string
        name:
          description: The user's full name.
          nullable: true
          type: string
        metadata:
          $ref: '#/components/schemas/TrialRequestMetadata'
        enterprise:
          description: "If true, create an enterprise domain."
          nullable: true
          type: boolean
        token:
          description: Stripe payment token.
          nullable: true
          type: string
      type: object
    GrantTrialRequestResponse:
      description: ""
      properties:
        code:
          description: Trial request code
          nullable: true
          type: string
      type: object
    Plan:
      description: ""
      properties:
        planId:
          description: Plan ID
          nullable: true
          type: string
        name:
          description: Plan Name
          nullable: true
          type: string
      type: object
    Maintenance:
      description: ""
      properties:
        message:
          description: Maintenance message
          nullable: true
          type: string
        header:
          description: Maintenance header
          nullable: true
          type: string
      type: object
    Trial:
      description: ""
      example:
        defaultDevices: 2.3021358869347655
        defaultCores: 7.061401241503109
        defaultDuration: 5.962133916683182
        defaultHours: 5.637376656633329
      properties:
        defaultDuration:
          description: Maintenance message
          nullable: true
          type: number
        defaultHours:
          description: Maintenance header
          nullable: true
          type: number
        defaultDevices:
          description: Maintenance header
          nullable: true
          type: number
        defaultCores:
          description: Maintenance header
          nullable: true
          type: number
      type: object
    Logging:
      description: ""
      example:
        development: true
        throwWarnings: true
      properties:
        development:
          description: Denotes whether it's in development
          nullable: true
          type: boolean
        throwWarnings:
          description: Denotes whether to throw warnings
          nullable: true
          type: boolean
      type: object
    AuthProvider:
      description: ""
      example:
        identifier: identifier
        default: true
        authorizationUrl: authorizationUrl
        provider: provider
        name: name
        label: label
        id: id
        providerType: providerType
        enabled: true
      properties:
        name:
          description: Provider name for a given provider type
          nullable: true
          type: string
        identifier:
          description: The identifier for the provider
          nullable: true
          type: string
        providerType:
          description: Provider type
          nullable: true
          type: string
        default:
          description: Denotes whether it's the default
          nullable: true
          type: boolean
        label:
          description: Provider label
          nullable: true
          type: string
        enabled:
          description: Denotes whether they're enabled or not
          nullable: true
          type: boolean
        authorizationUrl:
          description: URL for provider auth
          nullable: true
          type: string
        id:
          description: The identifier for the provider
          nullable: true
          type: string
        provider:
          description: Auth provider
          nullable: true
          type: string
      type: object
    ConfigResponse:
      description: ""
      example:
        appDomain: appDomain
        authProviders:
        - identifier: identifier
          default: true
          authorizationUrl: authorizationUrl
          provider: provider
          name: name
          label: label
          id: id
          providerType: providerType
          enabled: true
        - identifier: identifier
          default: true
          authorizationUrl: authorizationUrl
          provider: provider
          name: name
          label: label
          id: id
          providerType: providerType
          enabled: true
        enableFirmwareImageUpload: true
        auxWebhook: auxWebhook
        installerAvailable: true
        zapierBugsWebhook: zapierBugsWebhook
        trial:
          defaultDevices: 2.3021358869347655
          defaultCores: 7.061401241503109
          defaultDuration: 5.962133916683182
          defaultHours: 5.637376656633329
        snapshotLimit: 0.8008281904610115
        cloudAdmin: cloudAdmin
        cloudDomain: cloudDomain
        stripePublicKey: stripePublicKey
        showDomainSettings: true
        maxKernelSize: 6.027456183070403
        billingDomain: billingDomain
        onSite: true
        sepSim: true
        invoicedPublishableKey: invoicedPublishableKey
        maxNetworkMonitorFileSize: maxNetworkMonitorFileSize
        billingBackend: billingBackend
        sentryUrl: sentryUrl
        invalidBuild: true
        maxRamdiskSize: 1.4658129805029452
        domainAuthenticationProviders: true
        zapierFeedbackWebhook: zapierFeedbackWebhook
        version: version
        filesAdmin: filesAdmin
        intercomId: intercomId
        charmSDK: charmSDK
        logging:
          development: true
          throwWarnings: true
        gtmId: gtmId
        maintenance: null
      properties:
        onSite:
          description: Denotes whether it's an on-site install
          nullable: true
          type: boolean
        showDomainSettings:
          description: Denotes whether to show domain settings
          nullable: true
          type: boolean
        version:
          description: Denotes the version
          nullable: true
          type: string
        invalidBuild:
          description: Denotes whether the build is invalid
          nullable: true
          type: boolean
        sepSim:
          description: Denotes whether sepSim is enabled
          nullable: true
          type: boolean
        installerAvailable:
          description: Denotes whether installer is available
          nullable: true
          type: boolean
        invoicedPublishableKey:
          description: API publishable key to use for Invoiced
          nullable: true
          type: string
        stripePublicKey:
          description: Stripe public key
          nullable: true
          type: string
        intercomId:
          description: "Intercom app ID, also known as workspace ID"
          nullable: true
          type: string
        auxWebhook:
          description: Webhook URL for aux
          nullable: true
          type: string
        gtmId:
          description: Google Tag Manager
          nullable: true
          type: string
        zapierFeedbackWebhook:
          description: Webhook URL to send feedback into Productboard automatically
          nullable: true
          type: string
        zapierBugsWebhook:
          description: Webhook URL to send frontend errors to Jira automatically
          nullable: true
          type: string
        billingBackend:
          description: Default backend billing api name for new subscriptions (e.g.
            "stripe")
          nullable: true
          type: string
        maintenance:
          $ref: '#/components/schemas/ConfigResponse_maintenance'
        logging:
          $ref: '#/components/schemas/Logging'
        cloudAdmin:
          description: URL for cloud admin login
          nullable: true
          type: string
        filesAdmin:
          description: URL for files admin login
          nullable: true
          type: string
        cloudDomain:
          description: Cloud domain name (usually corellium.com or staging.corellium.com)
          nullable: true
          type: string
        billingDomain:
          description: Billing domain name
          nullable: true
          type: string
        appDomain:
          description: App domain name (usually app.corellium.com or app.staging.corellium.com)
          nullable: true
          type: string
        maxNetworkMonitorFileSize:
          description: Maximum network monitor file size
          nullable: true
          type: string
        enableFirmwareImageUpload:
          description: Denotes whether users can upload firmware images
          nullable: true
          type: boolean
        authProviders:
          description: Auth providers
          items:
            $ref: '#/components/schemas/AuthProvider'
          nullable: true
          type: array
        snapshotLimit:
          description: Maximum number of snapshots to allow
          nullable: true
          type: number
        maxKernelSize:
          description: "The maximum size, in bytes, (default: 100 MB) that an uploaded\
            \ kernel should be"
          nullable: true
          type: number
        maxRamdiskSize:
          description: "The maximum size, in bytes, (default: 500 MB) that an uploaded\
            \ ramdisk should be"
          nullable: true
          type: number
        charmSDK:
          description: Denotes whether charmSDK is enabled
          nullable: true
          type: string
        trial:
          $ref: '#/components/schemas/Trial'
        sentryUrl:
          description: Sentry URL
          nullable: true
          type: string
        domainAuthenticationProviders:
          description: "If enabled, adds the default providers in their current configuration"
          nullable: true
          type: boolean
      type: object
    DomainOptions:
      description: ""
      properties:
        totpRequired:
          description: "if true, totp is required"
          nullable: true
          type: boolean
        trialExtension:
          $ref: '#/components/schemas/TrialExtension'
      type: object
    TrialExtension:
      description: ""
      properties:
        duration:
          description: how many additional days?
          nullable: true
          type: number
        reason:
          description: why does the user want more time?
          nullable: true
          type: string
        denied:
          description: ""
          nullable: true
          type: boolean
        deniedReason:
          description: explanation for why the request was denied
          nullable: true
          type: string
      type: object
    OpenIDConfig:
      description: ""
      example:
        invitedOnly: true
        clientId: clientId
        clientSecret: clientSecret
        discoveryUrl: discoveryUrl
      properties:
        discoveryUrl:
          description: Service Discovery URL
          nullable: true
          type: string
        clientId:
          description: Service Client ID
          nullable: true
          type: string
        clientSecret:
          description: Service Client Secret
          nullable: true
          type: string
        invitedOnly:
          description: Only accept individuals with invitations
          nullable: true
          type: boolean
      type: object
    DomainAuthProviderRequest:
      description: ""
      example:
        label: label
        config:
          invitedOnly: true
          clientId: clientId
          clientSecret: clientSecret
          discoveryUrl: discoveryUrl
        providerType: providerType
        enabled: true
      properties:
        providerType:
          description: Provider Type
          type: string
        enabled:
          description: Enabled/Disabled
          type: boolean
        label:
          description: Login Button Text
          nullable: true
          type: string
        config:
          $ref: '#/components/schemas/OpenIDConfig'
      required:
      - enabled
      - providerType
      type: object
    DomainAuthProviderResponse:
      description: ""
      example:
        identifier: identifier
        label: label
        providerType: providerType
        enabled: true
        createdAt: createdAt
        default: true
        authorizationUrl: authorizationUrl
        provider: provider
        createdBy: createdBy
        name: name
        id: id
        config:
          invitedOnly: true
          clientId: clientId
          clientSecret: clientSecret
          discoveryUrl: discoveryUrl
        updatedAt: updatedAt
      properties:
        identifier:
          description: Provider ID
          type: string
        id:
          description: Provider ID for backward compatibility with frontend
          nullable: true
          type: string
        providerType:
          description: Provider Type
          type: string
        provider:
          description: Provider Type for backward compatibility with frontend
          nullable: true
          type: string
        label:
          description: Login Button Text
          type: string
        name:
          description: Title Text for the Frontend's Provider Configuration Form
          nullable: true
          type: string
        authorizationUrl:
          description: Coordinator endpoint for Authorizing with this provider
          nullable: true
          type: string
        default:
          description: "True: Configured in coordinator.json, False: Custom Domain\
            \ Provider"
          type: boolean
        enabled:
          description: Enabled/Disabled
          type: boolean
        config:
          $ref: '#/components/schemas/OpenIDConfig'
        createdBy:
          description: Optional User ID of creator
          nullable: true
          type: string
        createdAt:
          description: Created Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
          type: string
        updatedAt:
          description: Updated Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
          type: string
      required:
      - createdAt
      - default
      - enabled
      - identifier
      - label
      - providerType
      - updatedAt
      type: object
    Extension:
      description: ""
      properties:
        identifier:
          description: Identifier
          nullable: true
          type: string
        enabled:
          description: "If true, instances requiring this extension can be created\
            \ or started"
          nullable: true
          type: boolean
        createdAt:
          description: Created Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
          nullable: true
          type: string
        updatedAt:
          description: Updated Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
          nullable: true
          type: string
        imageId:
          description: Image Id
          format: uuid
          nullable: true
          type: string
        state:
          description: State
          nullable: true
          type: string
        flavors:
          description: Array of Flavor definitions
          items:
            type: object
          nullable: true
          type: array
      type: object
    UpdateExtension:
      description: ""
      properties:
        enabled:
          description: "If true, instances requiring this extension can be created\
            \ or started"
          nullable: true
          type: boolean
      type: object
    V1LoadExtensionParameters:
      description: ""
      properties:
        imageId:
          description: The uuid of the image to load
          format: uuid
          type: string
      required:
      - imageId
      type: object
    Hook:
      description: ""
      example:
        patch: patch
        identifier: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdAt: createdAt
        address: address
        instanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        patchType: csmfcc
        label: label
        enabled: true
        updatedAt: updatedAt
      properties:
        identifier:
          description: Identifier
          format: uuid
          nullable: true
          type: string
        label:
          description: Label
          nullable: true
          type: string
        address:
          description: Address
          nullable: true
          type: string
        patch:
          description: Patch
          nullable: true
          type: string
        patchType:
          description: Patch Type
          enum:
          - csmfcc
          - csmfvm
          nullable: true
          type: string
        enabled:
          description: "If true, instances can call required hooks"
          nullable: true
          type: boolean
        createdAt:
          description: Created Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
          nullable: true
          type: string
        updatedAt:
          description: Updated Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
          nullable: true
          type: string
        instanceId:
          description: Instance Id
          format: uuid
          nullable: true
          type: string
      type: object
    V1CreateHookParameters:
      description: ""
      example:
        patch: patch
        address: address
        patchType: csmfcc
        label: label
      properties:
        label:
          description: Label
          type: string
        address:
          description: Address
          type: string
        patch:
          description: Patch
          type: string
        patchType:
          description: Patch Type
          enum:
          - csmfcc
          - csmfvm
          type: string
      required:
      - address
      - label
      - patch
      - patchType
      type: object
    Image:
      description: ""
      example:
        filename: filename
        size: 0.8008281904610115
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        project: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: fwbinary
        uniqueid: uniqueid
        status: status
      properties:
        status:
          description: ""
          type: string
        id:
          description: Image ID
          format: uuid
          nullable: true
          type: string
        name:
          description: ""
          nullable: true
          type: string
        type:
          description: Type of image
          enum:
          - fwbinary
          - kernel
          - devicetree
          - ramdisk
          - loaderfile
          - sepfw
          - seprom
          - bootrom
          - llb
          - iboot
          - ibootdata
          - fwpackage
          - partition
          - backup
          nullable: true
          type: string
        filename:
          description: ""
          nullable: true
          type: string
        uniqueid:
          description: ""
          nullable: true
          type: string
        size:
          description: ""
          nullable: true
          type: number
        project:
          description: project ID
          format: uuid
          nullable: true
          type: string
        created_at:
          description: When Image was created
          format: date-time
          nullable: true
          type: string
        updated_at:
          description: When Image was last updated
          format: date-time
          nullable: true
          type: string
      required:
      - status
      type: object
    ImageCreationOptions:
      description: ""
      properties:
        type:
          description: Image type
          type: string
        encoding:
          description: How the file is stored
          enum:
          - plain
          type: string
        encapsulated:
          description: set to false if the uploaded file is not encapsulated inside
            an outer zipfile
          nullable: true
          type: boolean
        name:
          description: Image name
          nullable: true
          type: string
        project:
          description: Project ID
          format: uuid
          nullable: true
          type: string
        instance:
          description: Instance ID
          format: uuid
          nullable: true
          type: string
        file:
          description: Optionally the actual file
          format: binary
          nullable: true
          type: string
      required:
      - encoding
      - type
      type: object
    UserError:
      description: ""
      properties:
        error:
          description: Error text
          type: string
        errorID:
          description: Error ID
          enum:
          - UserError
          type: string
        field:
          description: Field associated with error
          nullable: true
          type: string
      required:
      - error
      - errorID
      type: object
    ValidationError:
      description: ""
      properties:
        error:
          description: Error text
          type: string
        errorID:
          description: Error ID
          enum:
          - ValidationError
          type: string
        field:
          description: Field associated with error
          nullable: true
          type: string
      required:
      - error
      - errorID
      type: object
    ApiInternalConsistencyError:
      description: ""
      properties:
        error:
          description: Error text
          type: string
        errorID:
          description: Error ID
          type: string
        originalError:
          description: Upstream error description
          nullable: true
          type: string
      required:
      - error
      - errorID
      type: object
    ApiError:
      description: ""
      properties:
        error:
          description: Error text
          type: string
        errorID:
          description: Error ID
          type: string
        originalError:
          description: Upstream error description
          nullable: true
          type: string
      required:
      - error
      - errorID
      type: object
    ApiConflictError:
      description: ""
      properties:
        error:
          description: Error text
          type: string
        errorID:
          description: Error ID
          enum:
          - Conflict
          type: string
        object:
          description: Object that is conflicted with
          nullable: true
          type: object
      required:
      - error
      - errorID
      type: object
    ApiNotFoundError:
      description: ""
      properties:
        error:
          description: Error text
          type: string
        errorID:
          description: Error ID
          type: string
        name:
          description: Name of the object requested
          nullable: true
          type: string
        params:
          description: params provided by user
          nullable: true
          type: object
      required:
      - error
      - errorID
      type: object
    File:
      description: A File
      format: binary
      type: string
    PasswordChangeBody:
      description: ""
      example:
        old-password: old-password
        new-password: new-password
        user: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        user:
          description: userId
          format: uuid
          type: string
        old-password:
          description: old password
          type: string
        new-password:
          description: new password
          type: string
      required:
      - new-password
      - old-password
      - user
      type: object
    InstanceBootOptionsAdditionalTag:
      description: |-
        ### Instance Boot Option
        * kalloc: Enable kalloc/kfree trace access via GDB (Enterprise only)
        * gpu: Enable cloud GPU acceleration (Extra costs incurred, cloud only)
        * no-keyboard: Enable keyboard passthrough from web interface
        * nodevmode: Disable developer mode on iOS16 and greater
        * sep-cons-ext: Patch SEPOS to print debug messages to console
        * iboot-jailbreak: Patch iBoot to disable signature checks
        * llb-jailbreak: Patch LLB to disable signature checks
        * rom-jailbreak: Patch BootROM to disable signature checks
      enum:
      - kalloc
      - gpu
      - no-keyboard
      - nodevmode
      - sep-cons-ext
      - iboot-jailbreak
      - llb-jailbreak
      - rom-jailbreak
      type: string
    InstanceBootOptions:
      description: ""
      example:
        randomSeed: randomSeed
        aprr: true
        additionalTags:
        - null
        - null
        pac: true
        restoreBootArgs: restoreBootArgs
        ecid: ecid
        udid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bootArgs: bootArgs
      properties:
        bootArgs:
          description: ""
          nullable: true
          type: string
        restoreBootArgs:
          description: ""
          nullable: true
          type: string
        udid:
          description: Boot udid
          format: uuid
          nullable: true
          type: string
        ecid:
          description: Assigned ECID
          format: hex
          nullable: true
          type: string
        randomSeed:
          description: Random seed to provide to boot if any
          nullable: true
          type: string
        pac:
          description: Enable PAC
          nullable: true
          type: boolean
        aprr:
          description: Enable APRR
          nullable: true
          type: boolean
        additionalTags:
          description: ""
          items:
            $ref: '#/components/schemas/InstanceBootOptionsAdditionalTag'
          nullable: true
          type: array
      type: object
    InstanceState:
      description: Current Instance State
      enum:
      - "on"
      - "off"
      - booting
      - deleting
      - creating
      - restoring
      - paused
      - rebooting
      - error
      type: string
    VpnDefinition:
      description: ""
      example:
        proxy:
        - "{}"
        - "{}"
        listeners:
        - "{}"
        - "{}"
      properties:
        proxy:
          description: ""
          items:
            type: object
          nullable: true
          type: array
        listeners:
          description: ""
          items:
            type: object
          nullable: true
          type: array
      type: object
    InstanceServices:
      description: ""
      example:
        vpn:
          proxy:
          - "{}"
          - "{}"
          listeners:
          - "{}"
          - "{}"
      properties:
        vpn:
          $ref: '#/components/schemas/VpnDefinition'
      type: object
    InstanceAgentState:
      description: ""
      example:
        hash: hash
        info: info
      nullable: true
      properties:
        hash:
          description: ""
          nullable: true
          type: string
        info:
          description: ""
          nullable: true
          type: string
      type: object
    InstanceNetmonState:
      description: ""
      example:
        hash: hash
        enabled: true
        info: info
      properties:
        hash:
          description: ""
          nullable: true
          type: string
        info:
          description: ""
          nullable: true
          type: string
        enabled:
          description: ""
          nullable: true
          type: boolean
      type: object
    InstanceNetdumpState:
      description: ""
      example:
        hash: hash
        enabled: true
        info: info
      properties:
        hash:
          description: ""
          nullable: true
          type: string
        info:
          description: ""
          nullable: true
          type: string
        enabled:
          description: ""
          nullable: true
          type: boolean
      type: object
    Instance:
      description: ""
      example:
        fwpackage: http://example.com/aeiou
        agent:
          hash: hash
          info: info
        project: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startedAt: startedAt
        netdump:
          hash: hash
          enabled: true
          info: info
        type: type
        error: error
        serviceIp: serviceIp
        taskState: taskState
        bootOptions:
          randomSeed: randomSeed
          aprr: true
          additionalTags:
          - null
          - null
          pac: true
          restoreBootArgs: restoreBootArgs
          ecid: ecid
          udid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bootArgs: bootArgs
        wifiIp: wifiIp
        secondaryIp: secondaryIp
        panicked: true
        model: model
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: null
        key: key
        os: os
        created: 2000-01-23T04:56:07.000+00:00
        patches:
        - patches
        - patches
        fault: true
        services:
          vpn:
            proxy:
            - "{}"
            - "{}"
            listeners:
            - "{}"
            - "{}"
        userTask: userTask
        flavor: flavor
        exposePort: exposePort
        netmon:
          hash: hash
          enabled: true
          info: info
        createdBy:
          deleted: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          username: username
        name: name
        stateChanged: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Instance Identifier
          format: uuid
          nullable: true
          type: string
        name:
          description: Instance Name
          nullable: true
          type: string
        key:
          description: Key used to encrypt the Instance
          format: hex
          nullable: true
          type: string
        flavor:
          description: The type of virtual machine this is
          nullable: true
          type: string
        type:
          description: ""
          nullable: true
          type: string
        project:
          description: The projectId of the project this instance belongs to
          format: uuid
          nullable: true
          type: string
        state:
          $ref: '#/components/schemas/InstanceState'
        stateChanged:
          description: Time the state of the instance last changed
          format: date-time
          nullable: true
          type: string
        startedAt:
          description: Time the instance was started
          format: "date-time, NULL if currently SHUTOFF"
          nullable: true
          type: string
        userTask:
          description: Currently executing User Task
          nullable: true
          type: string
        taskState:
          description: Current task state if any
          nullable: true
          type: string
        error:
          description: Current error state if any
          nullable: true
          type: string
        bootOptions:
          $ref: '#/components/schemas/InstanceBootOptions'
        serviceIp:
          description: Services IP Address
          format: ipv4
          nullable: true
          type: string
        wifiIp:
          description: LAN IP Address
          format: ipv4
          nullable: true
          type: string
        secondaryIp:
          description: Secondary Inteface LAN IP Address (if supported)
          format: ipv4
          nullable: true
          type: string
        services:
          $ref: '#/components/schemas/InstanceServices'
        panicked:
          description: ""
          nullable: true
          type: boolean
        created:
          description: Time instance was created
          format: date-time
          nullable: true
          type: string
        model:
          description: Model of virtual machine device
          nullable: true
          type: string
        fwpackage:
          description: URL that package used to create this instance is available
            at
          format: url
          nullable: true
          type: string
        os:
          description: ""
          nullable: true
          type: string
        agent:
          $ref: '#/components/schemas/InstanceAgentState'
        netmon:
          $ref: '#/components/schemas/InstanceNetmonState'
        netdump:
          $ref: '#/components/schemas/InstanceNetdumpState'
        exposePort:
          description: ""
          nullable: true
          type: string
        fault:
          description: ""
          nullable: true
          type: boolean
        patches:
          description: ""
          items:
            type: string
          nullable: true
          type: array
        createdBy:
          $ref: '#/components/schemas/createdBy'
      type: object
    createdBy:
      description: ""
      example:
        deleted: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        label: label
        username: username
      properties:
        id:
          description: User Identifier
          format: uuid
          nullable: true
          type: string
        username:
          description: Username
          nullable: true
          type: string
        label:
          description: User Label
          nullable: true
          type: string
        deleted:
          description: Indicates if user was deleted
          nullable: true
          type: boolean
      type: object
    VolumeOptions:
      description: ""
      example:
        partitions:
        - "{}"
        - "{}"
        allocate: 0.8008281904610115
        computeNode: computeNode
      properties:
        allocate:
          description: GB
          nullable: true
          type: number
        partitions:
          description: ""
          items:
            type: object
          nullable: true
          type: array
        computeNode:
          description: ""
          nullable: true
          type: string
      type: object
    InstanceCreateOptions:
      description: ""
      example:
        fwpackage: fwpackage
        overrideWifiMAC: overrideWifiMAC
        os: os
        osbuild: osbuild
        patches:
        - patches
        - patches
        project: project
        origFwPackageUrl: http://example.com/aeiou
        flavor: flavor
        volume:
          partitions:
          - "{}"
          - "{}"
          allocate: 0.8008281904610115
          computeNode: computeNode
        bootOptions:
          randomSeed: randomSeed
          aprr: true
          additionalTags:
          - null
          - null
          pac: true
          restoreBootArgs: restoreBootArgs
          ecid: ecid
          udid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bootArgs: bootArgs
        encrypt: true
        name: name
        device:
          flavor: flavor
          bdid: 1.4658129805029452
          boardConfig: boardConfig
          peripherals: true
          cpid: 6.027456183070403
          name: name
          description: description
          model: model
          type: type
          platform: platform
        key: key
        snapshot: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          description: the name of the device
          nullable: true
          type: string
        key:
          description: Key used to encrypt the Instance
          format: hex
          nullable: true
          type: string
        flavor:
          description: the flavor id
          type: string
        project:
          description: project UUID
          type: string
        os:
          description: OS Version
          type: string
        osbuild:
          description: OS Build
          nullable: true
          type: string
        patches:
          description: list of patches to apply
          items:
            type: string
          nullable: true
          type: array
        fwpackage:
          description: URL or image id
          nullable: true
          type: string
        origFwPackageUrl:
          description: URL that firmware package used to create this instance is available
            at
          format: url
          nullable: true
          type: string
        encrypt:
          description: ""
          nullable: true
          type: boolean
        overrideWifiMAC:
          description: ""
          nullable: true
          type: string
        volume:
          $ref: '#/components/schemas/VolumeOptions'
        snapshot:
          description: Snapshot ID for this instance to be cloned from if defined
          format: uuid
          nullable: true
          type: string
        bootOptions:
          $ref: '#/components/schemas/InstanceBootOptions'
        device:
          $ref: '#/components/schemas/Model'
      required:
      - flavor
      - os
      - project
      type: object
    InstanceReturn:
      description: ""
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: null
      properties:
        id:
          description: Instance ID
          format: uuid
          type: string
        state:
          $ref: '#/components/schemas/InstanceState'
      required:
      - id
      - state
      type: object
    PatchInstanceOptions:
      description: ""
      example:
        proxy:
        - firstAvailable: true
          routerPort: 6.027456183070403
          devicePort: 0.8008281904610115
          expose: true
        - firstAvailable: true
          routerPort: 6.027456183070403
          devicePort: 0.8008281904610115
          expose: true
        bootOptions:
          randomSeed: randomSeed
          aprr: true
          additionalTags:
          - null
          - null
          pac: true
          restoreBootArgs: restoreBootArgs
          ecid: ecid
          udid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bootArgs: bootArgs
        name: name
        state: "on"
      properties:
        name:
          description: the name of the device
          nullable: true
          type: string
        state:
          description: the desired state of the device
          enum:
          - "on"
          - "off"
          - paused
          - deleting
          nullable: true
          type: string
        bootOptions:
          $ref: '#/components/schemas/InstanceBootOptions'
        proxy:
          description: ""
          items:
            $ref: '#/components/schemas/ProxyConfig'
          nullable: true
          type: array
      type: object
    ProxyConfig:
      description: Represents a Proxy configuration object.
      example:
        firstAvailable: true
        routerPort: 6.027456183070403
        devicePort: 0.8008281904610115
        expose: true
      properties:
        devicePort:
          description: The device port to use for proxying.
          nullable: true
          type: number
        firstAvailable:
          description: "If `true`, the first available port will be used if `devicePort`\
            \ is not available."
          nullable: true
          type: boolean
        expose:
          description: "If `true`, the proxy will be exposed to the external interface."
          nullable: true
          type: boolean
        routerPort:
          description: The router port to use for proxying.
          nullable: true
          type: number
      type: object
    AgentError:
      description: ""
      properties:
        error:
          description: The error encountered by the agent
          type: string
        errorID:
          description: AgentError
          enum:
          - AgentError
          type: string
        originalError:
          description: The full error encountered by the agent
          nullable: true
          type: object
      required:
      - error
      - errorID
      type: object
    AgentAppReadyResponse:
      description: ""
      example:
        ready: true
      properties:
        ready:
          description: ""
          type: boolean
      required:
      - ready
      type: object
    AgentInstallBody:
      description: ""
      example:
        path: path
      properties:
        path:
          description: path to app to install
          nullable: true
          type: string
      type: object
    AgentApp:
      description: ""
      example:
        running: true
        applicationType: applicationType
        name: name
        bundleID: bundleID
        diskUsage: 0
        Date: 6
        tags:
        - tags
        - tags
      properties:
        tags:
          description: ""
          items:
            type: string
          nullable: true
          type: array
        running:
          description: ""
          nullable: true
          type: boolean
        diskUsage:
          description: ""
          nullable: true
          type: integer
        Date:
          description: ""
          nullable: true
          type: integer
        applicationType:
          description: ""
          nullable: true
          type: string
        name:
          description: ""
          nullable: true
          type: string
        bundleID:
          description: ""
          nullable: true
          type: string
      type: object
    AgentAppsList:
      description: ""
      example:
        frontmost: frontmost
        apps:
        - running: true
          applicationType: applicationType
          name: name
          bundleID: bundleID
          diskUsage: 0
          Date: 6
          tags:
          - tags
          - tags
        - running: true
          applicationType: applicationType
          name: name
          bundleID: bundleID
          diskUsage: 0
          Date: 6
          tags:
          - tags
          - tags
      properties:
        apps:
          description: ""
          items:
            $ref: '#/components/schemas/AgentApp'
          nullable: true
          type: array
        frontmost:
          description: bundleID of frontmost app or empty string if none are frontmost
          nullable: true
          type: string
      type: object
    AgentAppStatus:
      description: ""
      properties:
        running:
          description: ""
          nullable: true
          type: boolean
        bundleID:
          description: ""
          nullable: true
          type: string
      type: object
    AgentAppsStatusList:
      description: ""
      properties:
        apps:
          description: ""
          items:
            $ref: '#/components/schemas/AgentAppStatus'
          nullable: true
          type: array
        frontmost:
          description: bundleID of frontmost app or empty string if none are frontmost
          nullable: true
          type: string
      type: object
    AgentIcons:
      description: ""
      example:
        icon: icon
      properties:
        icon:
          description: The data for an icon
          format: byte
          nullable: true
          type: string
      type: object
    FileChanges:
      description: ""
      example:
        mode: 0.8008281904610115
        path: path
        uid: 6.027456183070403
        gid: 1.4658129805029452
      properties:
        path:
          description: Optional New path
          nullable: true
          type: string
        mode:
          description: Optional New Mode
          nullable: true
          type: number
        uid:
          description: Optional New Owner UID
          nullable: true
          type: number
        gid:
          description: Optional New Group GID
          nullable: true
          type: number
      type: object
    AgentProfilesReturn:
      description: ""
      example:
        profiles:
        - profiles
        - profiles
      properties:
        profiles:
          description: ""
          items:
            type: string
          type: array
      required:
      - profiles
      type: object
    AgentValueReturn:
      description: ""
      example:
        value: value
      properties:
        value:
          description: The requested value
          nullable: true
          type: string
      type: object
    AgentSystemGetPropBody:
      description: ""
      example:
        property: property
      properties:
        property:
          description: ""
          type: string
      required:
      - property
      type: object
    AgentSystemAdbAuth:
      description: ""
      example:
        enabled: true
      properties:
        enabled:
          description: ""
          nullable: true
          type: boolean
      type: object
    InstanceConsoleEndpoint:
      description: ""
      example:
        url: http://example.com/aeiou
      properties:
        url:
          description: Console Websocket URL
          format: url
          nullable: true
          type: string
      type: object
    InstanceStartOptions:
      description: ""
      example:
        paused: true
        sockcap: true
      properties:
        paused:
          description: Start device paused
          nullable: true
          type: boolean
        sockcap:
          description: Start device with Process Network Monitoring enabled
          nullable: true
          type: boolean
      type: object
    InstanceStopOptions:
      description: ""
      example:
        soft: true
      properties:
        soft:
          description: Request VM OS power down
          nullable: true
          type: boolean
      type: object
    V1SetStateBody:
      description: ""
      example:
        state: null
      properties:
        state:
          $ref: '#/components/schemas/InstanceState'
      required:
      - state
      type: object
    RateInfo:
      description: ""
      example:
        onRateMicrocents: 0
        offRateMicrocents: 6
      properties:
        onRateMicrocents:
          description: "The amount per second, in microcents (USD), that this instance\
            \ charges to be running."
          nullable: true
          type: integer
        offRateMicrocents:
          description: "The amount per second, in microcents (USD), that this instance\
            \ charges to be stored."
          nullable: true
          type: integer
      type: object
    Bit:
      description: Bit value
      enum:
      - 0
      - 1
      type: number
    GpioStateDefinition:
      description: ""
      example:
        banks:
        - - null
          - null
        - - null
          - null
        bitCount: 0.8008281904610115
      properties:
        bitCount:
          description: count of bits in members of this bank
          type: number
        banks:
          description: bits for each bank of this name as an array of arrays
          items:
            items:
              $ref: '#/components/schemas/Bit'
            type: array
          type: array
      required:
      - banks
      - bitCount
      type: object
    GpiosState:
      description: Current state of GPIOs
      example:
        button:
          banks:
          - - null
            - null
          - - null
            - null
          bitCount: 0.8008281904610115
        led:
          banks:
          - - null
            - null
          - - null
            - null
          bitCount: 0.8008281904610115
        switch:
          banks:
          - - null
            - null
          - - null
            - null
          bitCount: 0.8008281904610115
      properties:
        led:
          $ref: '#/components/schemas/GpioStateDefinition'
        button:
          $ref: '#/components/schemas/GpioStateDefinition'
        switch:
          $ref: '#/components/schemas/GpioStateDefinition'
      type: object
    PeripheralsData:
      description: ""
      example:
        acceleration:
        - 0.8008281904610115
        - 0.8008281904610115
        orientation:
        - 5.962133916683182
        - 5.962133916683182
        proximity: 2.3021358869347655
        light: 7.061401241503109
        temperature: 5.637376656633329
        magnetic:
        - 1.4658129805029452
        - 1.4658129805029452
        humidity: 3.616076749251911
        pressure: 9.301444243932576
        gyroscope:
        - 6.027456183070403
        - 6.027456183070403
      properties:
        acceleration:
          description: ""
          items:
            type: number
          nullable: true
          type: array
        gyroscope:
          description: ""
          items:
            type: number
          nullable: true
          type: array
        magnetic:
          description: ""
          items:
            type: number
          nullable: true
          type: array
        orientation:
          description: ""
          items:
            type: number
          nullable: true
          type: array
        temperature:
          description: ""
          nullable: true
          type: number
        proximity:
          description: ""
          nullable: true
          type: number
        light:
          description: ""
          nullable: true
          type: number
        pressure:
          description: ""
          nullable: true
          type: number
        humidity:
          description: ""
          nullable: true
          type: number
      type: object
    RestoreBackupData:
      description: ""
      properties: {}
      type: object
    Screenshot:
      description: Screenshot Data
      format: binary
      type: string
    RotateBody:
      description: ""
      example:
        orientation: 0.8008281904610115
      properties:
        orientation:
          description: Desired orientation
          enum:
          - 1
          - 2
          - 3
          - 4
          type: number
      required:
      - orientation
      type: object
    Button:
      description: Button definition
      enum:
      - finger
      - homeButton
      - holdButton
      - volumeUp
      - volumeDown
      - ringerSwitch
      - backButton
      - overviewButton
      type: string
    TouchInput:
      description: ""
      properties:
        position:
          description: Finger Positions
          format: up to 10
          properties: {}
          type: object
      type: object
    TouchCurveInput:
      description: ""
      properties:
        start:
          description: Finger Positions
          format: up to 10
          properties: {}
          type: object
        end:
          description: Finger Positions
          format: up to 10
          properties: {}
          type: object
      type: object
    TextInput:
      description: ""
      properties:
        text:
          description: text to type
          nullable: true
          type: string
      type: object
    InstanceInput:
      description: ""
      example: {}
      oneOf:
      - $ref: '#/components/schemas/TouchInput'
      - $ref: '#/components/schemas/TouchCurveInput'
      - $ref: '#/components/schemas/TextInput'
      properties: {}
      type: object
    MediaPlayBody:
      description: ""
      example:
        imageId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        url: url
      properties:
        imageId:
          description: Image ID
          format: uuid
          nullable: true
          type: string
        url:
          description: URL to a media file
          format: string
          nullable: true
          type: string
      type: object
    KernelThread:
      description: ""
      example:
        kernelId: kernelId
        stack:
        - stack
        - stack
        tid: 6
      properties:
        kernelId:
          description: Kernel Thread ID
          format: uint64_t
          nullable: true
          type: string
        tid:
          description: Task ID
          nullable: true
          type: integer
        stack:
          description: Array of stack addresses
          items:
            type: string
          nullable: true
          type: array
      type: object
    KernelTask:
      description: ""
      example:
        kernelId: kernelId
        name: name
        threads:
        - kernelId: kernelId
          stack:
          - stack
          - stack
          tid: 6
        - kernelId: kernelId
          stack:
          - stack
          - stack
          tid: 6
        pid: 0
      properties:
        kernelId:
          description: Kernel Task ID
          format: uint64_t
          nullable: true
          type: string
        name:
          description: Thread name
          nullable: true
          type: string
        pid:
          description: Process ID of task
          nullable: true
          type: integer
        threads:
          description: ""
          items:
            $ref: '#/components/schemas/KernelThread'
          nullable: true
          type: array
      type: object
    Kcrange:
      description: ""
      example:
        kext: kext
        range:
        - range
        - range
      properties:
        kext:
          description: Kernel Extension
          nullable: true
          type: string
        range:
          description: Range
          items:
            type: string
          nullable: true
          type: array
      type: object
    BtraceEnableOptions:
      description: ""
      example:
        ranges:
        - - ranges
          - ranges
        - - ranges
          - ranges
      properties:
        ranges:
          description: ""
          items:
            items:
              type: string
            type: array
          nullable: true
          type: array
      type: object
    NetdumpFilter:
      description: ""
      example:
        dstPorts:
        - dstPorts
        - dstPorts
        processes:
        - processes
        - processes
        srcPorts:
        - srcPorts
        - srcPorts
        portRanges:
        - portRanges
        - portRanges
        ports:
        - ports
        - ports
        protocols:
        - protocols
        - protocols
      properties:
        portRanges:
          description: ""
          items:
            type: string
          nullable: true
          type: array
        srcPorts:
          description: ""
          items:
            type: string
          nullable: true
          type: array
        dstPorts:
          description: ""
          items:
            type: string
          nullable: true
          type: array
        ports:
          description: ""
          items:
            type: string
          nullable: true
          type: array
        protocols:
          description: ""
          items:
            type: string
          nullable: true
          type: array
        processes:
          description: ""
          items:
            type: string
          nullable: true
          type: array
      type: object
    InstanceUpgradeBody:
      description: ""
      example:
        os: os
        osbuild: osbuild
      properties:
        os:
          description: iOS version
          type: string
        osbuild:
          description: (optional) iOS build ID
          nullable: true
          type: string
      required:
      - os
      type: object
    Invitation:
      description: ""
      properties:
        identifier:
          description: Invite ID
          format: uuid
          nullable: true
          type: string
        email:
          description: Invited email
          nullable: true
          type: string
        settings:
          description: ""
          nullable: true
          type: object
      type: object
    InviteRevokeParams:
      description: ""
      properties:
        ids:
          $ref: '#/components/schemas/InviteRevokeParams_ids'
      type: object
    Model:
      description: ""
      example:
        flavor: flavor
        bdid: 1.4658129805029452
        boardConfig: boardConfig
        peripherals: true
        cpid: 6.027456183070403
        name: name
        description: description
        model: model
        type: type
        platform: platform
      properties:
        type:
          description: ""
          type: string
        name:
          description: ""
          type: string
        flavor:
          description: ""
          type: string
        description:
          description: ""
          nullable: true
          type: string
        model:
          description: ""
          type: string
        boardConfig:
          description: ""
          nullable: true
          type: string
        platform:
          description: ""
          nullable: true
          type: string
        cpid:
          description: ""
          nullable: true
          type: number
        bdid:
          description: ""
          nullable: true
          type: number
        peripherals:
          description: ""
          nullable: true
          type: boolean
      required:
      - flavor
      - model
      - name
      - type
      type: object
    Firmware:
      description: ""
      example:
        AndroidFlavor: AndroidFlavor
        metadata: "{}"
        uploaddate: 2000-01-23T04:56:07.000+00:00
        sha256sum: sha256sum
        buildid: buildid
        releasedate: 2000-01-23T04:56:07.000+00:00
        version: version
        url: http://example.com/aeiou
        filename: filename
        size: 0
        APIVersion: APIVersion
        sha1sum: sha1sum
        md5sum: md5sum
        uniqueId: uniqueId
        orig_url: http://example.com/aeiou
      properties:
        version:
          description: ""
          nullable: true
          type: string
        buildid:
          description: ""
          nullable: true
          type: string
        AndroidFlavor:
          description: Android only flavor
          nullable: true
          type: string
        APIVersion:
          description: Android only API version
          nullable: true
          type: string
        sha256sum:
          description: ""
          nullable: true
          type: string
        sha1sum:
          description: ""
          nullable: true
          type: string
        md5sum:
          description: ""
          nullable: true
          type: string
        size:
          description: ""
          nullable: true
          type: integer
        uniqueId:
          description: ""
          nullable: true
          type: string
        metadata:
          description: Firmware metadata
          nullable: true
          type: object
        releasedate:
          description: Release Date
          format: date-time
          nullable: true
          type: string
        uploaddate:
          description: Date uploaded
          format: date-time
          nullable: true
          type: string
        url:
          description: URL firmware is available at
          format: url
          nullable: true
          type: string
        orig_url:
          description: URL firmware is available at from vendor
          format: url
          nullable: true
          type: string
        filename:
          description: ""
          nullable: true
          type: string
      type: object
    ModelSoftware:
      description: ""
      properties:
        name:
          description: ""
          nullable: true
          type: string
        boardConfig:
          description: ""
          nullable: true
          type: string
        platform:
          description: ""
          nullable: true
          type: string
        cpid:
          description: ""
          nullable: true
          type: number
        bdid:
          description: ""
          nullable: true
          type: number
        firmwares:
          description: ""
          items:
            $ref: '#/components/schemas/Firmware'
          nullable: true
          type: array
      type: object
    ProjectSettings:
      description: ""
      example:
        internet-access: true
        dhcp: true
      properties:
        internet-access:
          description: ""
          nullable: true
          type: boolean
        dhcp:
          description: ""
          nullable: true
          type: boolean
      type: object
    ProjectQuota:
      description: ""
      example:
        cores: 0.8008281904610115
        instances: 6.027456183070403
        ram: 1.4658129805029452
      properties:
        cores:
          description: ""
          nullable: true
          type: number
        instances:
          description: ""
          nullable: true
          type: number
        ram:
          description: ""
          nullable: true
          type: number
      type: object
    ProjectUsage:
      description: ""
      example:
        cores: 5.962133916683182
        instances: 5.637376656633329
        gpu: 7.061401241503109
        ram: 2.3021358869347655
      properties:
        cores:
          description: ""
          nullable: true
          type: number
        instances:
          description: ""
          nullable: true
          type: number
        ram:
          description: ""
          nullable: true
          type: number
        gpu:
          description: ""
          nullable: true
          type: number
      type: object
    Project:
      description: ""
      example:
        settings:
          internet-access: true
          dhcp: true
        quotasUsed:
          cores: 5.962133916683182
          instances: 5.637376656633329
          gpu: 7.061401241503109
          ram: 2.3021358869347655
        quotas:
          cores: 0.8008281904610115
          instances: 6.027456183070403
          ram: 1.4658129805029452
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: Project Identifier
          format: uuid
          type: string
        name:
          description: Project Name
          nullable: true
          type: string
        settings:
          $ref: '#/components/schemas/ProjectSettings'
        quotas:
          $ref: '#/components/schemas/ProjectQuota'
        quotasUsed:
          $ref: '#/components/schemas/ProjectUsage'
      required:
      - id
      type: object
    ProjectKey:
      description: ""
      example:
        identifier: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdAt: 2000-01-23T04:56:07.000+00:00
        kind: ssh
        fingerprint: fingerprint
        project: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        key: key
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        identifier:
          description: keyId
          format: uuid
          nullable: true
          type: string
        kind:
          description: kind of key
          enum:
          - ssh
          - adb
          type: string
        project:
          description: projectId
          format: uuid
          nullable: true
          type: string
        key:
          description: The public key
          type: string
        fingerprint:
          description: Key fingerprint
          nullable: true
          type: string
        updatedAt:
          description: Time of last update
          format: date-time
          nullable: true
          type: string
        createdAt:
          description: Time of creation
          format: date-time
          nullable: true
          type: string
      required:
      - key
      - kind
      type: object
    Role:
      description: ""
      example:
        role: admin
        project: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        role:
          description: ""
          enum:
          - admin
          - _member_
          type: string
        project:
          description: Project ID
          format: uuid
          type: string
        user:
          description: User ID
          format: uuid
          type: string
      required:
      - project
      - role
      - user
      type: object
    SnapshotStatus:
      description: ""
      example:
        task: task
        created: true
      properties:
        task:
          description: ""
          nullable: true
          type: string
        created:
          description: ""
          nullable: true
          type: boolean
      type: object
    Snapshot:
      description: ""
      example:
        date: 0.8008281904610115
        instance: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fresh: true
        live: true
        local: true
        status:
          task: task
          created: true
      properties:
        id:
          description: Snapshot ID
          format: uuid
          nullable: true
          type: string
        name:
          description: Snapshot name
          nullable: true
          type: string
        instance:
          description: Instance that this snapshot is of
          format: uuid
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/SnapshotStatus'
        date:
          description: UNIX Date that the snapshot was created
          nullable: true
          type: number
        fresh:
          description: ""
          nullable: true
          type: boolean
        live:
          description: Live snapshot (included state and memory)
          nullable: true
          type: boolean
        local:
          description: ""
          nullable: true
          type: boolean
      type: object
    SnapshotCreationOptions:
      description: ""
      example:
        name: name
      properties:
        name:
          description: Snapshot name
          type: string
      required:
      - name
      type: object
    Team:
      description: ""
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        label: label
        users:
        - administrator: true
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          email: email
        - administrator: true
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          label: label
          email: email
      properties:
        id:
          description: Team ID
          format: uuid
          type: string
        label:
          description: Team Label
          type: string
        users:
          description: Users
          items:
            $ref: '#/components/schemas/User'
          nullable: true
          type: array
      required:
      - id
      - label
      type: object
    User:
      description: /**
      example:
        administrator: true
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        label: label
        email: email
      properties:
        id:
          description: User ID
          format: uuid
          type: string
        label:
          description: User Label
          type: string
        name:
          description: User Name
          type: string
        email:
          description: User Email
          type: string
        administrator:
          description: the flag that specifies whether user is Administrator or not
          nullable: true
          type: boolean
      required:
      - email
      - id
      - label
      - name
      type: object
    CreateTeam:
      description: ""
      example:
        name: name
      properties:
        name:
          description: Team name
          type: string
      required:
      - name
      type: object
    TeamCreate:
      description: ""
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: ID of newly created team
          format: uuid
          nullable: true
          type: string
      type: object
    AgreedAck:
      description: ""
      example:
        agreedToTerms: 2000-01-23T04:56:07.000+00:00
      properties:
        agreedToTerms:
          description: Date agreed
          format: date-time
          nullable: true
          type: string
      type: object
    PasswordResetBody:
      description: ""
      example:
        totpToken: totpToken
        new-password: new-password
        token: token
      properties:
        token:
          description: Password reset token
          type: string
        totpToken:
          description: Password reset totpToken
          type: string
        new-password:
          description: new password
          type: string
      required:
      - new-password
      - token
      - totpToken
      type: object
    ResetLinkBody:
      description: ""
      example:
        email: email
      properties:
        email:
          description: Email address to request password reset link for
          type: string
      required:
      - email
      type: object
    TouchPoint:
      description: "Touch point defined as x,y"
      properties: {}
      type: object
    FingerPositions:
      description: Finger Positions
      format: up to 10
      properties: {}
      type: object
    Features:
      description: ""
      properties:
        apps:
          description: ""
          nullable: true
          type: boolean
        connect:
          description: ""
          nullable: true
          type: boolean
        console:
          description: ""
          nullable: true
          type: boolean
        coretrace:
          description: ""
          nullable: true
          type: boolean
        deviceControl:
          description: ""
          nullable: true
          type: boolean
        deviceDelete:
          description: ""
          nullable: true
          type: boolean
        files:
          description: ""
          nullable: true
          type: boolean
        frida:
          description: ""
          nullable: true
          type: boolean
        images:
          description: ""
          nullable: true
          type: boolean
        messaging:
          description: ""
          nullable: true
          type: boolean
        netmon:
          description: ""
          nullable: true
          type: boolean
        network:
          description: ""
          nullable: true
          type: boolean
        portForwarding:
          description: ""
          nullable: true
          type: boolean
        powerManagement:
          description: ""
          nullable: true
          type: boolean
        profile:
          description: ""
          nullable: true
          type: boolean
        sensors:
          description: ""
          nullable: true
          type: boolean
        settings:
          description: ""
          nullable: true
          type: boolean
        snapshots:
          description: ""
          nullable: true
          type: boolean
        strace:
          description: ""
          nullable: true
          type: boolean
        system:
          description: ""
          nullable: true
          type: boolean
      type: object
    WebPlayerCreateSessionRequest:
      description: ""
      properties:
        projectId:
          description: Project Identifier
          type: string
        instanceId:
          description: VM Instance Identifier
          type: string
        expiresIn:
          description: Number of seconds token remains valid
          type: number
        features:
          $ref: '#/components/schemas/Features'
        clientId:
          description: Optional string value supplied by client for tracking purposes
          nullable: true
          type: string
      required:
      - expiresIn
      - features
      - instanceId
      - projectId
      type: object
    WebPlayerSession:
      description: ""
      properties:
        identifier:
          description: New Session Identifier
          type: string
        token:
          description: Session Token
          type: string
        expiration:
          description: Expiration in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
          type: number
      required:
      - expiration
      - identifier
      - token
      type: object
    ConfigResponse_maintenance:
      description: Denotes whether the server is undergoing maintenance
      nullable: true
      oneOf:
      - type: boolean
      - $ref: '#/components/schemas/Maintenance'
    InviteRevokeParams_ids:
      description: id or array of ids to revoke
      nullable: true
      oneOf:
      - type: string
      - items:
          type: string
        type: array
  securitySchemes:
    BearerAuth:
      bearerFormat: ApiToken or JWT
      description: Token to authorize API access
      scheme: bearer
      type: http

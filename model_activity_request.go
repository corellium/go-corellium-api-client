/*
Corellium API

REST API to manage your virtual devices.

API version: 7.3.0-27831
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the ActivityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityRequest{}

// ActivityRequest 
type ActivityRequest struct {
	// Resource filter
	Resource NullableString `json:"resource,omitempty"`
	// Number of entries to return, defaults to 10
	Limit NullableFloat32 `json:"limit,omitempty"`
	// Sorting order ('-createdAt' or 'createdAt')
	OrderBy NullableString `json:"orderBy,omitempty"`
	// Paginated results. Must be a positive integer. If not provided, defaults to the first page.
	Page NullableFloat32 `json:"page,omitempty"`
	// Instance identifier used to filter instance resources
	Instance NullableString `json:"instance,omitempty"`
	// Instance identifier used to filter instance resources
	Project NullableString `json:"project,omitempty"`
	// Actor identifier used to filter actor resources
	Actor NullableString `json:"actor,omitempty"`
	// Last filter applied and is a fuzzy match on results
	Search NullableString `json:"search,omitempty"`
	// Date to filter to, keyed off of createdAt
	To NullableString `json:"to,omitempty"`
	// Date to filter from, keyed off of createdAt
	From NullableString `json:"from,omitempty"`
}

// NewActivityRequest instantiates a new ActivityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityRequest() *ActivityRequest {
	this := ActivityRequest{}
	return &this
}

// NewActivityRequestWithDefaults instantiates a new ActivityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityRequestWithDefaults() *ActivityRequest {
	this := ActivityRequest{}
	return &this
}

// GetResource returns the Resource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetResource() string {
	if o == nil || IsNil(o.Resource.Get()) {
		var ret string
		return ret
	}
	return *o.Resource.Get()
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resource.Get(), o.Resource.IsSet()
}

// HasResource returns a boolean if a field has been set.
func (o *ActivityRequest) HasResource() bool {
	if o != nil && o.Resource.IsSet() {
		return true
	}

	return false
}

// SetResource gets a reference to the given NullableString and assigns it to the Resource field.
func (o *ActivityRequest) SetResource(v string) {
	o.Resource.Set(&v)
}
// SetResourceNil sets the value for Resource to be an explicit nil
func (o *ActivityRequest) SetResourceNil() {
	o.Resource.Set(nil)
}

// UnsetResource ensures that no value is present for Resource, not even an explicit nil
func (o *ActivityRequest) UnsetResource() {
	o.Resource.Unset()
}

// GetLimit returns the Limit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetLimit() float32 {
	if o == nil || IsNil(o.Limit.Get()) {
		var ret float32
		return ret
	}
	return *o.Limit.Get()
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetLimitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limit.Get(), o.Limit.IsSet()
}

// HasLimit returns a boolean if a field has been set.
func (o *ActivityRequest) HasLimit() bool {
	if o != nil && o.Limit.IsSet() {
		return true
	}

	return false
}

// SetLimit gets a reference to the given NullableFloat32 and assigns it to the Limit field.
func (o *ActivityRequest) SetLimit(v float32) {
	o.Limit.Set(&v)
}
// SetLimitNil sets the value for Limit to be an explicit nil
func (o *ActivityRequest) SetLimitNil() {
	o.Limit.Set(nil)
}

// UnsetLimit ensures that no value is present for Limit, not even an explicit nil
func (o *ActivityRequest) UnsetLimit() {
	o.Limit.Unset()
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetOrderBy() string {
	if o == nil || IsNil(o.OrderBy.Get()) {
		var ret string
		return ret
	}
	return *o.OrderBy.Get()
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetOrderByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderBy.Get(), o.OrderBy.IsSet()
}

// HasOrderBy returns a boolean if a field has been set.
func (o *ActivityRequest) HasOrderBy() bool {
	if o != nil && o.OrderBy.IsSet() {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given NullableString and assigns it to the OrderBy field.
func (o *ActivityRequest) SetOrderBy(v string) {
	o.OrderBy.Set(&v)
}
// SetOrderByNil sets the value for OrderBy to be an explicit nil
func (o *ActivityRequest) SetOrderByNil() {
	o.OrderBy.Set(nil)
}

// UnsetOrderBy ensures that no value is present for OrderBy, not even an explicit nil
func (o *ActivityRequest) UnsetOrderBy() {
	o.OrderBy.Unset()
}

// GetPage returns the Page field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetPage() float32 {
	if o == nil || IsNil(o.Page.Get()) {
		var ret float32
		return ret
	}
	return *o.Page.Get()
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Page.Get(), o.Page.IsSet()
}

// HasPage returns a boolean if a field has been set.
func (o *ActivityRequest) HasPage() bool {
	if o != nil && o.Page.IsSet() {
		return true
	}

	return false
}

// SetPage gets a reference to the given NullableFloat32 and assigns it to the Page field.
func (o *ActivityRequest) SetPage(v float32) {
	o.Page.Set(&v)
}
// SetPageNil sets the value for Page to be an explicit nil
func (o *ActivityRequest) SetPageNil() {
	o.Page.Set(nil)
}

// UnsetPage ensures that no value is present for Page, not even an explicit nil
func (o *ActivityRequest) UnsetPage() {
	o.Page.Unset()
}

// GetInstance returns the Instance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetInstance() string {
	if o == nil || IsNil(o.Instance.Get()) {
		var ret string
		return ret
	}
	return *o.Instance.Get()
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetInstanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Instance.Get(), o.Instance.IsSet()
}

// HasInstance returns a boolean if a field has been set.
func (o *ActivityRequest) HasInstance() bool {
	if o != nil && o.Instance.IsSet() {
		return true
	}

	return false
}

// SetInstance gets a reference to the given NullableString and assigns it to the Instance field.
func (o *ActivityRequest) SetInstance(v string) {
	o.Instance.Set(&v)
}
// SetInstanceNil sets the value for Instance to be an explicit nil
func (o *ActivityRequest) SetInstanceNil() {
	o.Instance.Set(nil)
}

// UnsetInstance ensures that no value is present for Instance, not even an explicit nil
func (o *ActivityRequest) UnsetInstance() {
	o.Instance.Unset()
}

// GetProject returns the Project field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetProject() string {
	if o == nil || IsNil(o.Project.Get()) {
		var ret string
		return ret
	}
	return *o.Project.Get()
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Project.Get(), o.Project.IsSet()
}

// HasProject returns a boolean if a field has been set.
func (o *ActivityRequest) HasProject() bool {
	if o != nil && o.Project.IsSet() {
		return true
	}

	return false
}

// SetProject gets a reference to the given NullableString and assigns it to the Project field.
func (o *ActivityRequest) SetProject(v string) {
	o.Project.Set(&v)
}
// SetProjectNil sets the value for Project to be an explicit nil
func (o *ActivityRequest) SetProjectNil() {
	o.Project.Set(nil)
}

// UnsetProject ensures that no value is present for Project, not even an explicit nil
func (o *ActivityRequest) UnsetProject() {
	o.Project.Unset()
}

// GetActor returns the Actor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetActor() string {
	if o == nil || IsNil(o.Actor.Get()) {
		var ret string
		return ret
	}
	return *o.Actor.Get()
}

// GetActorOk returns a tuple with the Actor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetActorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Actor.Get(), o.Actor.IsSet()
}

// HasActor returns a boolean if a field has been set.
func (o *ActivityRequest) HasActor() bool {
	if o != nil && o.Actor.IsSet() {
		return true
	}

	return false
}

// SetActor gets a reference to the given NullableString and assigns it to the Actor field.
func (o *ActivityRequest) SetActor(v string) {
	o.Actor.Set(&v)
}
// SetActorNil sets the value for Actor to be an explicit nil
func (o *ActivityRequest) SetActorNil() {
	o.Actor.Set(nil)
}

// UnsetActor ensures that no value is present for Actor, not even an explicit nil
func (o *ActivityRequest) UnsetActor() {
	o.Actor.Unset()
}

// GetSearch returns the Search field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetSearch() string {
	if o == nil || IsNil(o.Search.Get()) {
		var ret string
		return ret
	}
	return *o.Search.Get()
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetSearchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Search.Get(), o.Search.IsSet()
}

// HasSearch returns a boolean if a field has been set.
func (o *ActivityRequest) HasSearch() bool {
	if o != nil && o.Search.IsSet() {
		return true
	}

	return false
}

// SetSearch gets a reference to the given NullableString and assigns it to the Search field.
func (o *ActivityRequest) SetSearch(v string) {
	o.Search.Set(&v)
}
// SetSearchNil sets the value for Search to be an explicit nil
func (o *ActivityRequest) SetSearchNil() {
	o.Search.Set(nil)
}

// UnsetSearch ensures that no value is present for Search, not even an explicit nil
func (o *ActivityRequest) UnsetSearch() {
	o.Search.Unset()
}

// GetTo returns the To field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetTo() string {
	if o == nil || IsNil(o.To.Get()) {
		var ret string
		return ret
	}
	return *o.To.Get()
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.To.Get(), o.To.IsSet()
}

// HasTo returns a boolean if a field has been set.
func (o *ActivityRequest) HasTo() bool {
	if o != nil && o.To.IsSet() {
		return true
	}

	return false
}

// SetTo gets a reference to the given NullableString and assigns it to the To field.
func (o *ActivityRequest) SetTo(v string) {
	o.To.Set(&v)
}
// SetToNil sets the value for To to be an explicit nil
func (o *ActivityRequest) SetToNil() {
	o.To.Set(nil)
}

// UnsetTo ensures that no value is present for To, not even an explicit nil
func (o *ActivityRequest) UnsetTo() {
	o.To.Unset()
}

// GetFrom returns the From field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityRequest) GetFrom() string {
	if o == nil || IsNil(o.From.Get()) {
		var ret string
		return ret
	}
	return *o.From.Get()
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityRequest) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.From.Get(), o.From.IsSet()
}

// HasFrom returns a boolean if a field has been set.
func (o *ActivityRequest) HasFrom() bool {
	if o != nil && o.From.IsSet() {
		return true
	}

	return false
}

// SetFrom gets a reference to the given NullableString and assigns it to the From field.
func (o *ActivityRequest) SetFrom(v string) {
	o.From.Set(&v)
}
// SetFromNil sets the value for From to be an explicit nil
func (o *ActivityRequest) SetFromNil() {
	o.From.Set(nil)
}

// UnsetFrom ensures that no value is present for From, not even an explicit nil
func (o *ActivityRequest) UnsetFrom() {
	o.From.Unset()
}

func (o ActivityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Resource.IsSet() {
		toSerialize["resource"] = o.Resource.Get()
	}
	if o.Limit.IsSet() {
		toSerialize["limit"] = o.Limit.Get()
	}
	if o.OrderBy.IsSet() {
		toSerialize["orderBy"] = o.OrderBy.Get()
	}
	if o.Page.IsSet() {
		toSerialize["page"] = o.Page.Get()
	}
	if o.Instance.IsSet() {
		toSerialize["instance"] = o.Instance.Get()
	}
	if o.Project.IsSet() {
		toSerialize["project"] = o.Project.Get()
	}
	if o.Actor.IsSet() {
		toSerialize["actor"] = o.Actor.Get()
	}
	if o.Search.IsSet() {
		toSerialize["search"] = o.Search.Get()
	}
	if o.To.IsSet() {
		toSerialize["to"] = o.To.Get()
	}
	if o.From.IsSet() {
		toSerialize["from"] = o.From.Get()
	}
	return toSerialize, nil
}

type NullableActivityRequest struct {
	value *ActivityRequest
	isSet bool
}

func (v NullableActivityRequest) Get() *ActivityRequest {
	return v.value
}

func (v *NullableActivityRequest) Set(val *ActivityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityRequest(val *ActivityRequest) *NullableActivityRequest {
	return &NullableActivityRequest{value: val, isSet: true}
}

func (v NullableActivityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



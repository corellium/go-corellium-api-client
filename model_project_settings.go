/*
Corellium API

REST API to manage your virtual devices.

API version: 6.5.0-23522
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the ProjectSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectSettings{}

// ProjectSettings 
type ProjectSettings struct {
	// 
	InternetAccess bool `json:"internet-access"`
	// UUIDv4 network connection identifier or null for no vpn connection
	Connection NullableString `json:"connection,omitempty"`
	// 
	Dhcp bool `json:"dhcp"`
}

// NewProjectSettings instantiates a new ProjectSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectSettings(internetAccess bool, dhcp bool) *ProjectSettings {
	this := ProjectSettings{}
	this.InternetAccess = internetAccess
	this.Dhcp = dhcp
	return &this
}

// NewProjectSettingsWithDefaults instantiates a new ProjectSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectSettingsWithDefaults() *ProjectSettings {
	this := ProjectSettings{}
	return &this
}

// GetInternetAccess returns the InternetAccess field value
func (o *ProjectSettings) GetInternetAccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.InternetAccess
}

// GetInternetAccessOk returns a tuple with the InternetAccess field value
// and a boolean to check if the value has been set.
func (o *ProjectSettings) GetInternetAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InternetAccess, true
}

// SetInternetAccess sets field value
func (o *ProjectSettings) SetInternetAccess(v bool) {
	o.InternetAccess = v
}

// GetConnection returns the Connection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectSettings) GetConnection() string {
	if o == nil || IsNil(o.Connection.Get()) {
		var ret string
		return ret
	}
	return *o.Connection.Get()
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectSettings) GetConnectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Connection.Get(), o.Connection.IsSet()
}

// HasConnection returns a boolean if a field has been set.
func (o *ProjectSettings) HasConnection() bool {
	if o != nil && o.Connection.IsSet() {
		return true
	}

	return false
}

// SetConnection gets a reference to the given NullableString and assigns it to the Connection field.
func (o *ProjectSettings) SetConnection(v string) {
	o.Connection.Set(&v)
}
// SetConnectionNil sets the value for Connection to be an explicit nil
func (o *ProjectSettings) SetConnectionNil() {
	o.Connection.Set(nil)
}

// UnsetConnection ensures that no value is present for Connection, not even an explicit nil
func (o *ProjectSettings) UnsetConnection() {
	o.Connection.Unset()
}

// GetDhcp returns the Dhcp field value
func (o *ProjectSettings) GetDhcp() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Dhcp
}

// GetDhcpOk returns a tuple with the Dhcp field value
// and a boolean to check if the value has been set.
func (o *ProjectSettings) GetDhcpOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dhcp, true
}

// SetDhcp sets field value
func (o *ProjectSettings) SetDhcp(v bool) {
	o.Dhcp = v
}

func (o ProjectSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["internet-access"] = o.InternetAccess
	if o.Connection.IsSet() {
		toSerialize["connection"] = o.Connection.Get()
	}
	toSerialize["dhcp"] = o.Dhcp
	return toSerialize, nil
}

type NullableProjectSettings struct {
	value *ProjectSettings
	isSet bool
}

func (v NullableProjectSettings) Get() *ProjectSettings {
	return v.value
}

func (v *NullableProjectSettings) Set(val *ProjectSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectSettings(val *ProjectSettings) *NullableProjectSettings {
	return &NullableProjectSettings{value: val, isSet: true}
}

func (v NullableProjectSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Corellium API

REST API to manage your virtual devices.

API version: 5.5.0-18750
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the PasswordChangeBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PasswordChangeBody{}

// PasswordChangeBody 
type PasswordChangeBody struct {
	// userId
	User string `json:"user"`
	// old password
	OldPassword string `json:"old-password"`
	// new password
	NewPassword string `json:"new-password"`
}

// NewPasswordChangeBody instantiates a new PasswordChangeBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPasswordChangeBody(user string, oldPassword string, newPassword string) *PasswordChangeBody {
	this := PasswordChangeBody{}
	this.User = user
	this.OldPassword = oldPassword
	this.NewPassword = newPassword
	return &this
}

// NewPasswordChangeBodyWithDefaults instantiates a new PasswordChangeBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPasswordChangeBodyWithDefaults() *PasswordChangeBody {
	this := PasswordChangeBody{}
	return &this
}

// GetUser returns the User field value
func (o *PasswordChangeBody) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *PasswordChangeBody) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *PasswordChangeBody) SetUser(v string) {
	o.User = v
}

// GetOldPassword returns the OldPassword field value
func (o *PasswordChangeBody) GetOldPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OldPassword
}

// GetOldPasswordOk returns a tuple with the OldPassword field value
// and a boolean to check if the value has been set.
func (o *PasswordChangeBody) GetOldPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OldPassword, true
}

// SetOldPassword sets field value
func (o *PasswordChangeBody) SetOldPassword(v string) {
	o.OldPassword = v
}

// GetNewPassword returns the NewPassword field value
func (o *PasswordChangeBody) GetNewPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value
// and a boolean to check if the value has been set.
func (o *PasswordChangeBody) GetNewPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPassword, true
}

// SetNewPassword sets field value
func (o *PasswordChangeBody) SetNewPassword(v string) {
	o.NewPassword = v
}

func (o PasswordChangeBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PasswordChangeBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User
	toSerialize["old-password"] = o.OldPassword
	toSerialize["new-password"] = o.NewPassword
	return toSerialize, nil
}

type NullablePasswordChangeBody struct {
	value *PasswordChangeBody
	isSet bool
}

func (v NullablePasswordChangeBody) Get() *PasswordChangeBody {
	return v.value
}

func (v *NullablePasswordChangeBody) Set(val *PasswordChangeBody) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordChangeBody) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordChangeBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordChangeBody(val *PasswordChangeBody) *NullablePasswordChangeBody {
	return &NullablePasswordChangeBody{value: val, isSet: true}
}

func (v NullablePasswordChangeBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordChangeBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



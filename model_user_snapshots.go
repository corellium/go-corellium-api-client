/*
Corellium API

REST API to manage your virtual devices.

API version: 6.5.0-24034
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the UserSnapshots type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSnapshots{}

// UserSnapshots 
type UserSnapshots struct {
	SharedWithUser SharedSnapshotsInfo `json:"sharedWithUser"`
	SharedByUser SharedSnapshotsInfo `json:"sharedByUser"`
}

// NewUserSnapshots instantiates a new UserSnapshots object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSnapshots(sharedWithUser SharedSnapshotsInfo, sharedByUser SharedSnapshotsInfo) *UserSnapshots {
	this := UserSnapshots{}
	this.SharedWithUser = sharedWithUser
	this.SharedByUser = sharedByUser
	return &this
}

// NewUserSnapshotsWithDefaults instantiates a new UserSnapshots object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSnapshotsWithDefaults() *UserSnapshots {
	this := UserSnapshots{}
	return &this
}

// GetSharedWithUser returns the SharedWithUser field value
func (o *UserSnapshots) GetSharedWithUser() SharedSnapshotsInfo {
	if o == nil {
		var ret SharedSnapshotsInfo
		return ret
	}

	return o.SharedWithUser
}

// GetSharedWithUserOk returns a tuple with the SharedWithUser field value
// and a boolean to check if the value has been set.
func (o *UserSnapshots) GetSharedWithUserOk() (*SharedSnapshotsInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharedWithUser, true
}

// SetSharedWithUser sets field value
func (o *UserSnapshots) SetSharedWithUser(v SharedSnapshotsInfo) {
	o.SharedWithUser = v
}

// GetSharedByUser returns the SharedByUser field value
func (o *UserSnapshots) GetSharedByUser() SharedSnapshotsInfo {
	if o == nil {
		var ret SharedSnapshotsInfo
		return ret
	}

	return o.SharedByUser
}

// GetSharedByUserOk returns a tuple with the SharedByUser field value
// and a boolean to check if the value has been set.
func (o *UserSnapshots) GetSharedByUserOk() (*SharedSnapshotsInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharedByUser, true
}

// SetSharedByUser sets field value
func (o *UserSnapshots) SetSharedByUser(v SharedSnapshotsInfo) {
	o.SharedByUser = v
}

func (o UserSnapshots) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSnapshots) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sharedWithUser"] = o.SharedWithUser
	toSerialize["sharedByUser"] = o.SharedByUser
	return toSerialize, nil
}

type NullableUserSnapshots struct {
	value *UserSnapshots
	isSet bool
}

func (v NullableUserSnapshots) Get() *UserSnapshots {
	return v.value
}

func (v *NullableUserSnapshots) Set(val *UserSnapshots) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSnapshots) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSnapshots) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSnapshots(val *UserSnapshots) *NullableUserSnapshots {
	return &NullableUserSnapshots{value: val, isSet: true}
}

func (v NullableUserSnapshots) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSnapshots) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



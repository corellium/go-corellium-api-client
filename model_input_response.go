/*
Corellium API

REST API to manage your virtual devices.

API version: 6.5.0-23522
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the InputResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InputResponse{}

// InputResponse 
type InputResponse struct {
	// Expected time to complete
	Eta NullableFloat32 `json:"eta,omitempty"`
}

// NewInputResponse instantiates a new InputResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputResponse() *InputResponse {
	this := InputResponse{}
	return &this
}

// NewInputResponseWithDefaults instantiates a new InputResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputResponseWithDefaults() *InputResponse {
	this := InputResponse{}
	return &this
}

// GetEta returns the Eta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InputResponse) GetEta() float32 {
	if o == nil || IsNil(o.Eta.Get()) {
		var ret float32
		return ret
	}
	return *o.Eta.Get()
}

// GetEtaOk returns a tuple with the Eta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InputResponse) GetEtaOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Eta.Get(), o.Eta.IsSet()
}

// HasEta returns a boolean if a field has been set.
func (o *InputResponse) HasEta() bool {
	if o != nil && o.Eta.IsSet() {
		return true
	}

	return false
}

// SetEta gets a reference to the given NullableFloat32 and assigns it to the Eta field.
func (o *InputResponse) SetEta(v float32) {
	o.Eta.Set(&v)
}
// SetEtaNil sets the value for Eta to be an explicit nil
func (o *InputResponse) SetEtaNil() {
	o.Eta.Set(nil)
}

// UnsetEta ensures that no value is present for Eta, not even an explicit nil
func (o *InputResponse) UnsetEta() {
	o.Eta.Unset()
}

func (o InputResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InputResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Eta.IsSet() {
		toSerialize["eta"] = o.Eta.Get()
	}
	return toSerialize, nil
}

type NullableInputResponse struct {
	value *InputResponse
	isSet bool
}

func (v NullableInputResponse) Get() *InputResponse {
	return v.value
}

func (v *NullableInputResponse) Set(val *InputResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInputResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInputResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputResponse(val *InputResponse) *NullableInputResponse {
	return &NullableInputResponse{value: val, isSet: true}
}

func (v NullableInputResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



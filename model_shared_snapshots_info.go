/*
Corellium API

REST API to manage your virtual devices.

API version: 6.5.0-23522
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the SharedSnapshotsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharedSnapshotsInfo{}

// SharedSnapshotsInfo 
type SharedSnapshotsInfo struct {
	// UUID of the snapshot
	Id string `json:"id"`
	// Snapshot name
	Name string `json:"name"`
	// Device model
	Model string `json:"model"`
	// UNIX Date of when the snapshot was first shared with member
	SharedOn float32 `json:"sharedOn"`
	// The member who the snapshot was shared with. Only present in sharedWithUser
	SharedWithMember NullableString `json:"sharedWithMember,omitempty"`
	SharedBy *SnapshotOwner `json:"sharedBy,omitempty"`
}

// NewSharedSnapshotsInfo instantiates a new SharedSnapshotsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedSnapshotsInfo(id string, name string, model string, sharedOn float32) *SharedSnapshotsInfo {
	this := SharedSnapshotsInfo{}
	this.Id = id
	this.Name = name
	this.Model = model
	this.SharedOn = sharedOn
	return &this
}

// NewSharedSnapshotsInfoWithDefaults instantiates a new SharedSnapshotsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedSnapshotsInfoWithDefaults() *SharedSnapshotsInfo {
	this := SharedSnapshotsInfo{}
	return &this
}

// GetId returns the Id field value
func (o *SharedSnapshotsInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SharedSnapshotsInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SharedSnapshotsInfo) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SharedSnapshotsInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SharedSnapshotsInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SharedSnapshotsInfo) SetName(v string) {
	o.Name = v
}

// GetModel returns the Model field value
func (o *SharedSnapshotsInfo) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *SharedSnapshotsInfo) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *SharedSnapshotsInfo) SetModel(v string) {
	o.Model = v
}

// GetSharedOn returns the SharedOn field value
func (o *SharedSnapshotsInfo) GetSharedOn() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SharedOn
}

// GetSharedOnOk returns a tuple with the SharedOn field value
// and a boolean to check if the value has been set.
func (o *SharedSnapshotsInfo) GetSharedOnOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharedOn, true
}

// SetSharedOn sets field value
func (o *SharedSnapshotsInfo) SetSharedOn(v float32) {
	o.SharedOn = v
}

// GetSharedWithMember returns the SharedWithMember field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedSnapshotsInfo) GetSharedWithMember() string {
	if o == nil || IsNil(o.SharedWithMember.Get()) {
		var ret string
		return ret
	}
	return *o.SharedWithMember.Get()
}

// GetSharedWithMemberOk returns a tuple with the SharedWithMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedSnapshotsInfo) GetSharedWithMemberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SharedWithMember.Get(), o.SharedWithMember.IsSet()
}

// HasSharedWithMember returns a boolean if a field has been set.
func (o *SharedSnapshotsInfo) HasSharedWithMember() bool {
	if o != nil && o.SharedWithMember.IsSet() {
		return true
	}

	return false
}

// SetSharedWithMember gets a reference to the given NullableString and assigns it to the SharedWithMember field.
func (o *SharedSnapshotsInfo) SetSharedWithMember(v string) {
	o.SharedWithMember.Set(&v)
}
// SetSharedWithMemberNil sets the value for SharedWithMember to be an explicit nil
func (o *SharedSnapshotsInfo) SetSharedWithMemberNil() {
	o.SharedWithMember.Set(nil)
}

// UnsetSharedWithMember ensures that no value is present for SharedWithMember, not even an explicit nil
func (o *SharedSnapshotsInfo) UnsetSharedWithMember() {
	o.SharedWithMember.Unset()
}

// GetSharedBy returns the SharedBy field value if set, zero value otherwise.
func (o *SharedSnapshotsInfo) GetSharedBy() SnapshotOwner {
	if o == nil || IsNil(o.SharedBy) {
		var ret SnapshotOwner
		return ret
	}
	return *o.SharedBy
}

// GetSharedByOk returns a tuple with the SharedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedSnapshotsInfo) GetSharedByOk() (*SnapshotOwner, bool) {
	if o == nil || IsNil(o.SharedBy) {
		return nil, false
	}
	return o.SharedBy, true
}

// HasSharedBy returns a boolean if a field has been set.
func (o *SharedSnapshotsInfo) HasSharedBy() bool {
	if o != nil && !IsNil(o.SharedBy) {
		return true
	}

	return false
}

// SetSharedBy gets a reference to the given SnapshotOwner and assigns it to the SharedBy field.
func (o *SharedSnapshotsInfo) SetSharedBy(v SnapshotOwner) {
	o.SharedBy = &v
}

func (o SharedSnapshotsInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharedSnapshotsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["model"] = o.Model
	toSerialize["sharedOn"] = o.SharedOn
	if o.SharedWithMember.IsSet() {
		toSerialize["sharedWithMember"] = o.SharedWithMember.Get()
	}
	if !IsNil(o.SharedBy) {
		toSerialize["sharedBy"] = o.SharedBy
	}
	return toSerialize, nil
}

type NullableSharedSnapshotsInfo struct {
	value *SharedSnapshotsInfo
	isSet bool
}

func (v NullableSharedSnapshotsInfo) Get() *SharedSnapshotsInfo {
	return v.value
}

func (v *NullableSharedSnapshotsInfo) Set(val *SharedSnapshotsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedSnapshotsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedSnapshotsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedSnapshotsInfo(val *SharedSnapshotsInfo) *NullableSharedSnapshotsInfo {
	return &NullableSharedSnapshotsInfo{value: val, isSet: true}
}

func (v NullableSharedSnapshotsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedSnapshotsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



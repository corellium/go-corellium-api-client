/*
Corellium API

REST API to manage your virtual devices.

API version: 6.5.0-23522
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
	"time"
)

// checks if the Assessment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Assessment{}

// Assessment struct for Assessment
type Assessment struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	ReportId *string `json:"reportId,omitempty"`
	Bundle *map[string]interface{} `json:"bundle,omitempty"`
	Results *map[string]interface{} `json:"results,omitempty"`
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	InstanceId string `json:"instanceId"`
	BundleId string `json:"bundleId"`
	WordlistId *string `json:"wordlistId,omitempty"`
	Status string `json:"status"`
}

// NewAssessment instantiates a new Assessment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssessment(instanceId string, bundleId string, status string) *Assessment {
	this := Assessment{}
	this.InstanceId = instanceId
	this.BundleId = bundleId
	this.Status = status
	return &this
}

// NewAssessmentWithDefaults instantiates a new Assessment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssessmentWithDefaults() *Assessment {
	this := Assessment{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Assessment) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assessment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Assessment) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Assessment) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Assessment) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assessment) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Assessment) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Assessment) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Assessment) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assessment) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Assessment) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Assessment) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetReportId returns the ReportId field value if set, zero value otherwise.
func (o *Assessment) GetReportId() string {
	if o == nil || IsNil(o.ReportId) {
		var ret string
		return ret
	}
	return *o.ReportId
}

// GetReportIdOk returns a tuple with the ReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assessment) GetReportIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReportId) {
		return nil, false
	}
	return o.ReportId, true
}

// HasReportId returns a boolean if a field has been set.
func (o *Assessment) HasReportId() bool {
	if o != nil && !IsNil(o.ReportId) {
		return true
	}

	return false
}

// SetReportId gets a reference to the given string and assigns it to the ReportId field.
func (o *Assessment) SetReportId(v string) {
	o.ReportId = &v
}

// GetBundle returns the Bundle field value if set, zero value otherwise.
func (o *Assessment) GetBundle() map[string]interface{} {
	if o == nil || IsNil(o.Bundle) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Bundle
}

// GetBundleOk returns a tuple with the Bundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assessment) GetBundleOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Bundle) {
		return nil, false
	}
	return o.Bundle, true
}

// HasBundle returns a boolean if a field has been set.
func (o *Assessment) HasBundle() bool {
	if o != nil && !IsNil(o.Bundle) {
		return true
	}

	return false
}

// SetBundle gets a reference to the given map[string]interface{} and assigns it to the Bundle field.
func (o *Assessment) SetBundle(v map[string]interface{}) {
	o.Bundle = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *Assessment) GetResults() map[string]interface{} {
	if o == nil || IsNil(o.Results) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assessment) GetResultsOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *Assessment) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given map[string]interface{} and assigns it to the Results field.
func (o *Assessment) SetResults(v map[string]interface{}) {
	o.Results = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *Assessment) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assessment) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Assessment) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *Assessment) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

// GetInstanceId returns the InstanceId field value
func (o *Assessment) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *Assessment) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *Assessment) SetInstanceId(v string) {
	o.InstanceId = v
}

// GetBundleId returns the BundleId field value
func (o *Assessment) GetBundleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value
// and a boolean to check if the value has been set.
func (o *Assessment) GetBundleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BundleId, true
}

// SetBundleId sets field value
func (o *Assessment) SetBundleId(v string) {
	o.BundleId = v
}

// GetWordlistId returns the WordlistId field value if set, zero value otherwise.
func (o *Assessment) GetWordlistId() string {
	if o == nil || IsNil(o.WordlistId) {
		var ret string
		return ret
	}
	return *o.WordlistId
}

// GetWordlistIdOk returns a tuple with the WordlistId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assessment) GetWordlistIdOk() (*string, bool) {
	if o == nil || IsNil(o.WordlistId) {
		return nil, false
	}
	return o.WordlistId, true
}

// HasWordlistId returns a boolean if a field has been set.
func (o *Assessment) HasWordlistId() bool {
	if o != nil && !IsNil(o.WordlistId) {
		return true
	}

	return false
}

// SetWordlistId gets a reference to the given string and assigns it to the WordlistId field.
func (o *Assessment) SetWordlistId(v string) {
	o.WordlistId = &v
}

// GetStatus returns the Status field value
func (o *Assessment) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Assessment) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Assessment) SetStatus(v string) {
	o.Status = v
}

func (o Assessment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Assessment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.ReportId) {
		toSerialize["reportId"] = o.ReportId
	}
	if !IsNil(o.Bundle) {
		toSerialize["bundle"] = o.Bundle
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["instanceId"] = o.InstanceId
	toSerialize["bundleId"] = o.BundleId
	if !IsNil(o.WordlistId) {
		toSerialize["wordlistId"] = o.WordlistId
	}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableAssessment struct {
	value *Assessment
	isSet bool
}

func (v NullableAssessment) Get() *Assessment {
	return v.value
}

func (v *NullableAssessment) Set(val *Assessment) {
	v.value = val
	v.isSet = true
}

func (v NullableAssessment) IsSet() bool {
	return v.isSet
}

func (v *NullableAssessment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssessment(val *Assessment) *NullableAssessment {
	return &NullableAssessment{value: val, isSet: true}
}

func (v NullableAssessment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssessment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



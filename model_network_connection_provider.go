/*
Corellium API

REST API to manage your virtual devices.

API version: 7.1.0-26108
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the NetworkConnectionProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkConnectionProvider{}

// NetworkConnectionProvider 
type NetworkConnectionProvider struct {
	// Human friendly name for Network Connection Provider.
	Name string `json:"name"`
	// Internal identifier for Network Connection Provider.
	Type string `json:"type"`
}

// NewNetworkConnectionProvider instantiates a new NetworkConnectionProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkConnectionProvider(name string, type_ string) *NetworkConnectionProvider {
	this := NetworkConnectionProvider{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewNetworkConnectionProviderWithDefaults instantiates a new NetworkConnectionProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkConnectionProviderWithDefaults() *NetworkConnectionProvider {
	this := NetworkConnectionProvider{}
	return &this
}

// GetName returns the Name field value
func (o *NetworkConnectionProvider) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionProvider) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NetworkConnectionProvider) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *NetworkConnectionProvider) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionProvider) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NetworkConnectionProvider) SetType(v string) {
	o.Type = v
}

func (o NetworkConnectionProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkConnectionProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableNetworkConnectionProvider struct {
	value *NetworkConnectionProvider
	isSet bool
}

func (v NullableNetworkConnectionProvider) Get() *NetworkConnectionProvider {
	return v.value
}

func (v *NullableNetworkConnectionProvider) Set(val *NetworkConnectionProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkConnectionProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkConnectionProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkConnectionProvider(val *NetworkConnectionProvider) *NullableNetworkConnectionProvider {
	return &NullableNetworkConnectionProvider{value: val, isSet: true}
}

func (v NullableNetworkConnectionProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkConnectionProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Corellium API

Testing RolesApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package corellium

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/corellium/go-corellium-api-client"
)

func Test_corellium_RolesApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RolesApiService V1AddTeamRoleToProject", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string
		var teamId string
		var roleId string

		httpRes, err := apiClient.RolesApi.V1AddTeamRoleToProject(context.Background(), projectId, teamId, roleId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RolesApiService V1AddUserRoleToProject", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string
		var userId string
		var roleId string

		httpRes, err := apiClient.RolesApi.V1AddUserRoleToProject(context.Background(), projectId, userId, roleId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RolesApiService V1RemoveTeamRoleFromProject", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string
		var teamId string
		var roleId string

		httpRes, err := apiClient.RolesApi.V1RemoveTeamRoleFromProject(context.Background(), projectId, teamId, roleId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RolesApiService V1RemoveUserRoleFromProject", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string
		var userId string
		var roleId string

		httpRes, err := apiClient.RolesApi.V1RemoveUserRoleFromProject(context.Background(), projectId, userId, roleId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RolesApiService V1Roles", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.RolesApi.V1Roles(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}

/*
Corellium API

REST API to manage your virtual devices.

API version: 5.5.0-18750
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the OpenIDConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenIDConfig{}

// OpenIDConfig 
type OpenIDConfig struct {
	// Service Discovery URL
	DiscoveryUrl NullableString `json:"discoveryUrl,omitempty"`
	// Service Client ID
	ClientId NullableString `json:"clientId,omitempty"`
	// Service Client Secret
	ClientSecret NullableString `json:"clientSecret,omitempty"`
	// Only accept individuals with invitations
	InvitedOnly NullableBool `json:"invitedOnly,omitempty"`
}

// NewOpenIDConfig instantiates a new OpenIDConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenIDConfig() *OpenIDConfig {
	this := OpenIDConfig{}
	return &this
}

// NewOpenIDConfigWithDefaults instantiates a new OpenIDConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenIDConfigWithDefaults() *OpenIDConfig {
	this := OpenIDConfig{}
	return &this
}

// GetDiscoveryUrl returns the DiscoveryUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenIDConfig) GetDiscoveryUrl() string {
	if o == nil || IsNil(o.DiscoveryUrl.Get()) {
		var ret string
		return ret
	}
	return *o.DiscoveryUrl.Get()
}

// GetDiscoveryUrlOk returns a tuple with the DiscoveryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenIDConfig) GetDiscoveryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscoveryUrl.Get(), o.DiscoveryUrl.IsSet()
}

// HasDiscoveryUrl returns a boolean if a field has been set.
func (o *OpenIDConfig) HasDiscoveryUrl() bool {
	if o != nil && o.DiscoveryUrl.IsSet() {
		return true
	}

	return false
}

// SetDiscoveryUrl gets a reference to the given NullableString and assigns it to the DiscoveryUrl field.
func (o *OpenIDConfig) SetDiscoveryUrl(v string) {
	o.DiscoveryUrl.Set(&v)
}
// SetDiscoveryUrlNil sets the value for DiscoveryUrl to be an explicit nil
func (o *OpenIDConfig) SetDiscoveryUrlNil() {
	o.DiscoveryUrl.Set(nil)
}

// UnsetDiscoveryUrl ensures that no value is present for DiscoveryUrl, not even an explicit nil
func (o *OpenIDConfig) UnsetDiscoveryUrl() {
	o.DiscoveryUrl.Unset()
}

// GetClientId returns the ClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenIDConfig) GetClientId() string {
	if o == nil || IsNil(o.ClientId.Get()) {
		var ret string
		return ret
	}
	return *o.ClientId.Get()
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenIDConfig) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientId.Get(), o.ClientId.IsSet()
}

// HasClientId returns a boolean if a field has been set.
func (o *OpenIDConfig) HasClientId() bool {
	if o != nil && o.ClientId.IsSet() {
		return true
	}

	return false
}

// SetClientId gets a reference to the given NullableString and assigns it to the ClientId field.
func (o *OpenIDConfig) SetClientId(v string) {
	o.ClientId.Set(&v)
}
// SetClientIdNil sets the value for ClientId to be an explicit nil
func (o *OpenIDConfig) SetClientIdNil() {
	o.ClientId.Set(nil)
}

// UnsetClientId ensures that no value is present for ClientId, not even an explicit nil
func (o *OpenIDConfig) UnsetClientId() {
	o.ClientId.Unset()
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenIDConfig) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret.Get()) {
		var ret string
		return ret
	}
	return *o.ClientSecret.Get()
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenIDConfig) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientSecret.Get(), o.ClientSecret.IsSet()
}

// HasClientSecret returns a boolean if a field has been set.
func (o *OpenIDConfig) HasClientSecret() bool {
	if o != nil && o.ClientSecret.IsSet() {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given NullableString and assigns it to the ClientSecret field.
func (o *OpenIDConfig) SetClientSecret(v string) {
	o.ClientSecret.Set(&v)
}
// SetClientSecretNil sets the value for ClientSecret to be an explicit nil
func (o *OpenIDConfig) SetClientSecretNil() {
	o.ClientSecret.Set(nil)
}

// UnsetClientSecret ensures that no value is present for ClientSecret, not even an explicit nil
func (o *OpenIDConfig) UnsetClientSecret() {
	o.ClientSecret.Unset()
}

// GetInvitedOnly returns the InvitedOnly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenIDConfig) GetInvitedOnly() bool {
	if o == nil || IsNil(o.InvitedOnly.Get()) {
		var ret bool
		return ret
	}
	return *o.InvitedOnly.Get()
}

// GetInvitedOnlyOk returns a tuple with the InvitedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenIDConfig) GetInvitedOnlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvitedOnly.Get(), o.InvitedOnly.IsSet()
}

// HasInvitedOnly returns a boolean if a field has been set.
func (o *OpenIDConfig) HasInvitedOnly() bool {
	if o != nil && o.InvitedOnly.IsSet() {
		return true
	}

	return false
}

// SetInvitedOnly gets a reference to the given NullableBool and assigns it to the InvitedOnly field.
func (o *OpenIDConfig) SetInvitedOnly(v bool) {
	o.InvitedOnly.Set(&v)
}
// SetInvitedOnlyNil sets the value for InvitedOnly to be an explicit nil
func (o *OpenIDConfig) SetInvitedOnlyNil() {
	o.InvitedOnly.Set(nil)
}

// UnsetInvitedOnly ensures that no value is present for InvitedOnly, not even an explicit nil
func (o *OpenIDConfig) UnsetInvitedOnly() {
	o.InvitedOnly.Unset()
}

func (o OpenIDConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenIDConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DiscoveryUrl.IsSet() {
		toSerialize["discoveryUrl"] = o.DiscoveryUrl.Get()
	}
	if o.ClientId.IsSet() {
		toSerialize["clientId"] = o.ClientId.Get()
	}
	if o.ClientSecret.IsSet() {
		toSerialize["clientSecret"] = o.ClientSecret.Get()
	}
	if o.InvitedOnly.IsSet() {
		toSerialize["invitedOnly"] = o.InvitedOnly.Get()
	}
	return toSerialize, nil
}

type NullableOpenIDConfig struct {
	value *OpenIDConfig
	isSet bool
}

func (v NullableOpenIDConfig) Get() *OpenIDConfig {
	return v.value
}

func (v *NullableOpenIDConfig) Set(val *OpenIDConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenIDConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenIDConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenIDConfig(val *OpenIDConfig) *NullableOpenIDConfig {
	return &NullableOpenIDConfig{value: val, isSet: true}
}

func (v NullableOpenIDConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenIDConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Corellium API

REST API to manage your virtual devices.

API version: 6.1.0-20784
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the SnapshotUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotUser{}

// SnapshotUser 
type SnapshotUser struct {
	// The email of the user.
	Email string `json:"email"`
	// The date when the invite was sent.
	InviteSentAt float32 `json:"inviteSentAt"`
	// The timestamp.
	Timestamp float32 `json:"timestamp"`
	// The user ID.
	UserId string `json:"userId"`
	// The label.
	Label string `json:"label"`
}

// NewSnapshotUser instantiates a new SnapshotUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotUser(email string, inviteSentAt float32, timestamp float32, userId string, label string) *SnapshotUser {
	this := SnapshotUser{}
	this.Email = email
	this.InviteSentAt = inviteSentAt
	this.Timestamp = timestamp
	this.UserId = userId
	this.Label = label
	return &this
}

// NewSnapshotUserWithDefaults instantiates a new SnapshotUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotUserWithDefaults() *SnapshotUser {
	this := SnapshotUser{}
	return &this
}

// GetEmail returns the Email field value
func (o *SnapshotUser) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SnapshotUser) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SnapshotUser) SetEmail(v string) {
	o.Email = v
}

// GetInviteSentAt returns the InviteSentAt field value
func (o *SnapshotUser) GetInviteSentAt() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InviteSentAt
}

// GetInviteSentAtOk returns a tuple with the InviteSentAt field value
// and a boolean to check if the value has been set.
func (o *SnapshotUser) GetInviteSentAtOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InviteSentAt, true
}

// SetInviteSentAt sets field value
func (o *SnapshotUser) SetInviteSentAt(v float32) {
	o.InviteSentAt = v
}

// GetTimestamp returns the Timestamp field value
func (o *SnapshotUser) GetTimestamp() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *SnapshotUser) GetTimestampOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *SnapshotUser) SetTimestamp(v float32) {
	o.Timestamp = v
}

// GetUserId returns the UserId field value
func (o *SnapshotUser) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *SnapshotUser) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *SnapshotUser) SetUserId(v string) {
	o.UserId = v
}

// GetLabel returns the Label field value
func (o *SnapshotUser) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *SnapshotUser) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *SnapshotUser) SetLabel(v string) {
	o.Label = v
}

func (o SnapshotUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["inviteSentAt"] = o.InviteSentAt
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["userId"] = o.UserId
	toSerialize["label"] = o.Label
	return toSerialize, nil
}

type NullableSnapshotUser struct {
	value *SnapshotUser
	isSet bool
}

func (v NullableSnapshotUser) Get() *SnapshotUser {
	return v.value
}

func (v *NullableSnapshotUser) Set(val *SnapshotUser) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotUser) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotUser(val *SnapshotUser) *NullableSnapshotUser {
	return &NullableSnapshotUser{value: val, isSet: true}
}

func (v NullableSnapshotUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



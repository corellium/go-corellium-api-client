/*
Corellium API

REST API to manage your virtual devices.

API version: 6.6.0-24071
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the TestAssessmentDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestAssessmentDto{}

// TestAssessmentDto struct for TestAssessmentDto
type TestAssessmentDto struct {
	Invert *bool `json:"invert,omitempty"`
	Grep *string `json:"grep,omitempty"`
}

// NewTestAssessmentDto instantiates a new TestAssessmentDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestAssessmentDto() *TestAssessmentDto {
	this := TestAssessmentDto{}
	return &this
}

// NewTestAssessmentDtoWithDefaults instantiates a new TestAssessmentDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestAssessmentDtoWithDefaults() *TestAssessmentDto {
	this := TestAssessmentDto{}
	return &this
}

// GetInvert returns the Invert field value if set, zero value otherwise.
func (o *TestAssessmentDto) GetInvert() bool {
	if o == nil || IsNil(o.Invert) {
		var ret bool
		return ret
	}
	return *o.Invert
}

// GetInvertOk returns a tuple with the Invert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestAssessmentDto) GetInvertOk() (*bool, bool) {
	if o == nil || IsNil(o.Invert) {
		return nil, false
	}
	return o.Invert, true
}

// HasInvert returns a boolean if a field has been set.
func (o *TestAssessmentDto) HasInvert() bool {
	if o != nil && !IsNil(o.Invert) {
		return true
	}

	return false
}

// SetInvert gets a reference to the given bool and assigns it to the Invert field.
func (o *TestAssessmentDto) SetInvert(v bool) {
	o.Invert = &v
}

// GetGrep returns the Grep field value if set, zero value otherwise.
func (o *TestAssessmentDto) GetGrep() string {
	if o == nil || IsNil(o.Grep) {
		var ret string
		return ret
	}
	return *o.Grep
}

// GetGrepOk returns a tuple with the Grep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestAssessmentDto) GetGrepOk() (*string, bool) {
	if o == nil || IsNil(o.Grep) {
		return nil, false
	}
	return o.Grep, true
}

// HasGrep returns a boolean if a field has been set.
func (o *TestAssessmentDto) HasGrep() bool {
	if o != nil && !IsNil(o.Grep) {
		return true
	}

	return false
}

// SetGrep gets a reference to the given string and assigns it to the Grep field.
func (o *TestAssessmentDto) SetGrep(v string) {
	o.Grep = &v
}

func (o TestAssessmentDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestAssessmentDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Invert) {
		toSerialize["invert"] = o.Invert
	}
	if !IsNil(o.Grep) {
		toSerialize["grep"] = o.Grep
	}
	return toSerialize, nil
}

type NullableTestAssessmentDto struct {
	value *TestAssessmentDto
	isSet bool
}

func (v NullableTestAssessmentDto) Get() *TestAssessmentDto {
	return v.value
}

func (v *NullableTestAssessmentDto) Set(val *TestAssessmentDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTestAssessmentDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTestAssessmentDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestAssessmentDto(val *TestAssessmentDto) *NullableTestAssessmentDto {
	return &NullableTestAssessmentDto{value: val, isSet: true}
}

func (v NullableTestAssessmentDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestAssessmentDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



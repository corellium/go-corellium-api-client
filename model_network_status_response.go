/*
Corellium API

REST API to manage your virtual devices.

API version: 7.3.0-27831
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the NetworkStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkStatusResponse{}

// NetworkStatusResponse 
type NetworkStatusResponse struct {
	// Network Provider
	Type string `json:"type"`
	// User defined name
	Name string `json:"name"`
	// Current state of the network connection
	State string `json:"state"`
	// Additional state information
	Params map[string]interface{} `json:"params"`
}

// NewNetworkStatusResponse instantiates a new NetworkStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkStatusResponse(type_ string, name string, state string, params map[string]interface{}) *NetworkStatusResponse {
	this := NetworkStatusResponse{}
	this.Type = type_
	this.Name = name
	this.State = state
	this.Params = params
	return &this
}

// NewNetworkStatusResponseWithDefaults instantiates a new NetworkStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkStatusResponseWithDefaults() *NetworkStatusResponse {
	this := NetworkStatusResponse{}
	return &this
}

// GetType returns the Type field value
func (o *NetworkStatusResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NetworkStatusResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NetworkStatusResponse) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value
func (o *NetworkStatusResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NetworkStatusResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NetworkStatusResponse) SetName(v string) {
	o.Name = v
}

// GetState returns the State field value
func (o *NetworkStatusResponse) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *NetworkStatusResponse) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *NetworkStatusResponse) SetState(v string) {
	o.State = v
}

// GetParams returns the Params field value
func (o *NetworkStatusResponse) GetParams() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *NetworkStatusResponse) GetParamsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Params, true
}

// SetParams sets field value
func (o *NetworkStatusResponse) SetParams(v map[string]interface{}) {
	o.Params = v
}

func (o NetworkStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	toSerialize["state"] = o.State
	toSerialize["params"] = o.Params
	return toSerialize, nil
}

type NullableNetworkStatusResponse struct {
	value *NetworkStatusResponse
	isSet bool
}

func (v NullableNetworkStatusResponse) Get() *NetworkStatusResponse {
	return v.value
}

func (v *NullableNetworkStatusResponse) Set(val *NetworkStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkStatusResponse(val *NetworkStatusResponse) *NullableNetworkStatusResponse {
	return &NullableNetworkStatusResponse{value: val, isSet: true}
}

func (v NullableNetworkStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



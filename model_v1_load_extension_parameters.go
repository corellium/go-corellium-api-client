/*
Corellium API

REST API to manage your virtual devices.

API version: 5.5.0-18750
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the V1LoadExtensionParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1LoadExtensionParameters{}

// V1LoadExtensionParameters 
type V1LoadExtensionParameters struct {
	// The uuid of the image to load
	ImageId string `json:"imageId"`
}

// NewV1LoadExtensionParameters instantiates a new V1LoadExtensionParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1LoadExtensionParameters(imageId string) *V1LoadExtensionParameters {
	this := V1LoadExtensionParameters{}
	this.ImageId = imageId
	return &this
}

// NewV1LoadExtensionParametersWithDefaults instantiates a new V1LoadExtensionParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1LoadExtensionParametersWithDefaults() *V1LoadExtensionParameters {
	this := V1LoadExtensionParameters{}
	return &this
}

// GetImageId returns the ImageId field value
func (o *V1LoadExtensionParameters) GetImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *V1LoadExtensionParameters) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *V1LoadExtensionParameters) SetImageId(v string) {
	o.ImageId = v
}

func (o V1LoadExtensionParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1LoadExtensionParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["imageId"] = o.ImageId
	return toSerialize, nil
}

type NullableV1LoadExtensionParameters struct {
	value *V1LoadExtensionParameters
	isSet bool
}

func (v NullableV1LoadExtensionParameters) Get() *V1LoadExtensionParameters {
	return v.value
}

func (v *NullableV1LoadExtensionParameters) Set(val *V1LoadExtensionParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableV1LoadExtensionParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableV1LoadExtensionParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1LoadExtensionParameters(val *V1LoadExtensionParameters) *NullableV1LoadExtensionParameters {
	return &NullableV1LoadExtensionParameters{value: val, isSet: true}
}

func (v NullableV1LoadExtensionParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1LoadExtensionParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



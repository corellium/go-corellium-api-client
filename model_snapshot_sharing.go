/*
Corellium API

REST API to manage your virtual devices.

API version: 6.1.0-20784
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the SnapshotSharing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotSharing{}

// SnapshotSharing 
type SnapshotSharing struct {
	// The URL of the snapshot.
	Url string `json:"url"`
	// The users who have access to the snapshot.
	Users []SnapshotUser `json:"users"`
}

// NewSnapshotSharing instantiates a new SnapshotSharing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotSharing(url string, users []SnapshotUser) *SnapshotSharing {
	this := SnapshotSharing{}
	this.Url = url
	this.Users = users
	return &this
}

// NewSnapshotSharingWithDefaults instantiates a new SnapshotSharing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotSharingWithDefaults() *SnapshotSharing {
	this := SnapshotSharing{}
	return &this
}

// GetUrl returns the Url field value
func (o *SnapshotSharing) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SnapshotSharing) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SnapshotSharing) SetUrl(v string) {
	o.Url = v
}

// GetUsers returns the Users field value
func (o *SnapshotSharing) GetUsers() []SnapshotUser {
	if o == nil {
		var ret []SnapshotUser
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *SnapshotSharing) GetUsersOk() ([]SnapshotUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *SnapshotSharing) SetUsers(v []SnapshotUser) {
	o.Users = v
}

func (o SnapshotSharing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotSharing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["users"] = o.Users
	return toSerialize, nil
}

type NullableSnapshotSharing struct {
	value *SnapshotSharing
	isSet bool
}

func (v NullableSnapshotSharing) Get() *SnapshotSharing {
	return v.value
}

func (v *NullableSnapshotSharing) Set(val *SnapshotSharing) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotSharing) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotSharing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotSharing(val *SnapshotSharing) *NullableSnapshotSharing {
	return &NullableSnapshotSharing{value: val, isSet: true}
}

func (v NullableSnapshotSharing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotSharing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



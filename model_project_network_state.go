/*
Corellium API

REST API to manage your virtual devices.

API version: 7.3.0-27831
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the ProjectNetworkState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectNetworkState{}

// ProjectNetworkState ProjectNetworkState
type ProjectNetworkState struct {
	// State of the project network connection. One of: disconnected, disconnecting, connecting, connected, error
	State string `json:"state"`
	// Additional parameters for the network state.
	Details map[string]interface{} `json:"details,omitempty"`
}

// NewProjectNetworkState instantiates a new ProjectNetworkState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectNetworkState(state string) *ProjectNetworkState {
	this := ProjectNetworkState{}
	this.State = state
	return &this
}

// NewProjectNetworkStateWithDefaults instantiates a new ProjectNetworkState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectNetworkStateWithDefaults() *ProjectNetworkState {
	this := ProjectNetworkState{}
	return &this
}

// GetState returns the State field value
func (o *ProjectNetworkState) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ProjectNetworkState) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ProjectNetworkState) SetState(v string) {
	o.State = v
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectNetworkState) GetDetails() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectNetworkState) GetDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Details) {
		return map[string]interface{}{}, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ProjectNetworkState) HasDetails() bool {
	if o != nil && IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]interface{} and assigns it to the Details field.
func (o *ProjectNetworkState) SetDetails(v map[string]interface{}) {
	o.Details = v
}

func (o ProjectNetworkState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectNetworkState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["state"] = o.State
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return toSerialize, nil
}

type NullableProjectNetworkState struct {
	value *ProjectNetworkState
	isSet bool
}

func (v NullableProjectNetworkState) Get() *ProjectNetworkState {
	return v.value
}

func (v *NullableProjectNetworkState) Set(val *ProjectNetworkState) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectNetworkState) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectNetworkState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectNetworkState(val *ProjectNetworkState) *NullableProjectNetworkState {
	return &NullableProjectNetworkState{value: val, isSet: true}
}

func (v NullableProjectNetworkState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectNetworkState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



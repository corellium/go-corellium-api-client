/*
Corellium API

REST API to manage your virtual devices.

API version: 5.5.0-18750
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the V1SetStateBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SetStateBody{}

// V1SetStateBody 
type V1SetStateBody struct {
	State InstanceState `json:"state"`
}

// NewV1SetStateBody instantiates a new V1SetStateBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SetStateBody(state InstanceState) *V1SetStateBody {
	this := V1SetStateBody{}
	this.State = state
	return &this
}

// NewV1SetStateBodyWithDefaults instantiates a new V1SetStateBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SetStateBodyWithDefaults() *V1SetStateBody {
	this := V1SetStateBody{}
	return &this
}

// GetState returns the State field value
func (o *V1SetStateBody) GetState() InstanceState {
	if o == nil {
		var ret InstanceState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *V1SetStateBody) GetStateOk() (*InstanceState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *V1SetStateBody) SetState(v InstanceState) {
	o.State = v
}

func (o V1SetStateBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SetStateBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["state"] = o.State
	return toSerialize, nil
}

type NullableV1SetStateBody struct {
	value *V1SetStateBody
	isSet bool
}

func (v NullableV1SetStateBody) Get() *V1SetStateBody {
	return v.value
}

func (v *NullableV1SetStateBody) Set(val *V1SetStateBody) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SetStateBody) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SetStateBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SetStateBody(val *V1SetStateBody) *NullableV1SetStateBody {
	return &NullableV1SetStateBody{value: val, isSet: true}
}

func (v NullableV1SetStateBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SetStateBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



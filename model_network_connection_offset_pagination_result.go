/*
Corellium API

REST API to manage your virtual devices.

API version: 7.1.0-26108
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the NetworkConnectionOffsetPaginationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkConnectionOffsetPaginationResult{}

// NetworkConnectionOffsetPaginationResult Network Connection Offset Pagination Result
type NetworkConnectionOffsetPaginationResult struct {
	// Total number of items.
	Total float32 `json:"total"`
	// The number of items returned in this result.
	Count float32 `json:"count"`
	// The maximum number of items that could be returned for this result.
	Limit float32 `json:"limit"`
	// That starting item 0-indexed.
	Offset float32 `json:"offset"`
	// Array of network connections associated with this domain.
	Results []NetworkConnection `json:"results"`
}

// NewNetworkConnectionOffsetPaginationResult instantiates a new NetworkConnectionOffsetPaginationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkConnectionOffsetPaginationResult(total float32, count float32, limit float32, offset float32, results []NetworkConnection) *NetworkConnectionOffsetPaginationResult {
	this := NetworkConnectionOffsetPaginationResult{}
	this.Total = total
	this.Count = count
	this.Limit = limit
	this.Offset = offset
	this.Results = results
	return &this
}

// NewNetworkConnectionOffsetPaginationResultWithDefaults instantiates a new NetworkConnectionOffsetPaginationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkConnectionOffsetPaginationResultWithDefaults() *NetworkConnectionOffsetPaginationResult {
	this := NetworkConnectionOffsetPaginationResult{}
	return &this
}

// GetTotal returns the Total field value
func (o *NetworkConnectionOffsetPaginationResult) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionOffsetPaginationResult) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *NetworkConnectionOffsetPaginationResult) SetTotal(v float32) {
	o.Total = v
}

// GetCount returns the Count field value
func (o *NetworkConnectionOffsetPaginationResult) GetCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionOffsetPaginationResult) GetCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *NetworkConnectionOffsetPaginationResult) SetCount(v float32) {
	o.Count = v
}

// GetLimit returns the Limit field value
func (o *NetworkConnectionOffsetPaginationResult) GetLimit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionOffsetPaginationResult) GetLimitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *NetworkConnectionOffsetPaginationResult) SetLimit(v float32) {
	o.Limit = v
}

// GetOffset returns the Offset field value
func (o *NetworkConnectionOffsetPaginationResult) GetOffset() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionOffsetPaginationResult) GetOffsetOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *NetworkConnectionOffsetPaginationResult) SetOffset(v float32) {
	o.Offset = v
}

// GetResults returns the Results field value
func (o *NetworkConnectionOffsetPaginationResult) GetResults() []NetworkConnection {
	if o == nil {
		var ret []NetworkConnection
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionOffsetPaginationResult) GetResultsOk() ([]NetworkConnection, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *NetworkConnectionOffsetPaginationResult) SetResults(v []NetworkConnection) {
	o.Results = v
}

func (o NetworkConnectionOffsetPaginationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkConnectionOffsetPaginationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total"] = o.Total
	toSerialize["count"] = o.Count
	toSerialize["limit"] = o.Limit
	toSerialize["offset"] = o.Offset
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

type NullableNetworkConnectionOffsetPaginationResult struct {
	value *NetworkConnectionOffsetPaginationResult
	isSet bool
}

func (v NullableNetworkConnectionOffsetPaginationResult) Get() *NetworkConnectionOffsetPaginationResult {
	return v.value
}

func (v *NullableNetworkConnectionOffsetPaginationResult) Set(val *NetworkConnectionOffsetPaginationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkConnectionOffsetPaginationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkConnectionOffsetPaginationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkConnectionOffsetPaginationResult(val *NetworkConnectionOffsetPaginationResult) *NullableNetworkConnectionOffsetPaginationResult {
	return &NullableNetworkConnectionOffsetPaginationResult{value: val, isSet: true}
}

func (v NullableNetworkConnectionOffsetPaginationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkConnectionOffsetPaginationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



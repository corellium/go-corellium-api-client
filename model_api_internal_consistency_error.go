/*
Corellium API

REST API to manage your virtual devices.

API version: 5.5.0-18750
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the ApiInternalConsistencyError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiInternalConsistencyError{}

// ApiInternalConsistencyError 
type ApiInternalConsistencyError struct {
	// Error text
	Error string `json:"error"`
	// Error ID
	ErrorID string `json:"errorID"`
	// Upstream error description
	OriginalError NullableString `json:"originalError,omitempty"`
}

// NewApiInternalConsistencyError instantiates a new ApiInternalConsistencyError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiInternalConsistencyError(error_ string, errorID string) *ApiInternalConsistencyError {
	this := ApiInternalConsistencyError{}
	this.Error = error_
	this.ErrorID = errorID
	return &this
}

// NewApiInternalConsistencyErrorWithDefaults instantiates a new ApiInternalConsistencyError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiInternalConsistencyErrorWithDefaults() *ApiInternalConsistencyError {
	this := ApiInternalConsistencyError{}
	return &this
}

// GetError returns the Error field value
func (o *ApiInternalConsistencyError) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *ApiInternalConsistencyError) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *ApiInternalConsistencyError) SetError(v string) {
	o.Error = v
}

// GetErrorID returns the ErrorID field value
func (o *ApiInternalConsistencyError) GetErrorID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorID
}

// GetErrorIDOk returns a tuple with the ErrorID field value
// and a boolean to check if the value has been set.
func (o *ApiInternalConsistencyError) GetErrorIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorID, true
}

// SetErrorID sets field value
func (o *ApiInternalConsistencyError) SetErrorID(v string) {
	o.ErrorID = v
}

// GetOriginalError returns the OriginalError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiInternalConsistencyError) GetOriginalError() string {
	if o == nil || IsNil(o.OriginalError.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalError.Get()
}

// GetOriginalErrorOk returns a tuple with the OriginalError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiInternalConsistencyError) GetOriginalErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalError.Get(), o.OriginalError.IsSet()
}

// HasOriginalError returns a boolean if a field has been set.
func (o *ApiInternalConsistencyError) HasOriginalError() bool {
	if o != nil && o.OriginalError.IsSet() {
		return true
	}

	return false
}

// SetOriginalError gets a reference to the given NullableString and assigns it to the OriginalError field.
func (o *ApiInternalConsistencyError) SetOriginalError(v string) {
	o.OriginalError.Set(&v)
}
// SetOriginalErrorNil sets the value for OriginalError to be an explicit nil
func (o *ApiInternalConsistencyError) SetOriginalErrorNil() {
	o.OriginalError.Set(nil)
}

// UnsetOriginalError ensures that no value is present for OriginalError, not even an explicit nil
func (o *ApiInternalConsistencyError) UnsetOriginalError() {
	o.OriginalError.Unset()
}

func (o ApiInternalConsistencyError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiInternalConsistencyError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["error"] = o.Error
	toSerialize["errorID"] = o.ErrorID
	if o.OriginalError.IsSet() {
		toSerialize["originalError"] = o.OriginalError.Get()
	}
	return toSerialize, nil
}

type NullableApiInternalConsistencyError struct {
	value *ApiInternalConsistencyError
	isSet bool
}

func (v NullableApiInternalConsistencyError) Get() *ApiInternalConsistencyError {
	return v.value
}

func (v *NullableApiInternalConsistencyError) Set(val *ApiInternalConsistencyError) {
	v.value = val
	v.isSet = true
}

func (v NullableApiInternalConsistencyError) IsSet() bool {
	return v.isSet
}

func (v *NullableApiInternalConsistencyError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiInternalConsistencyError(val *ApiInternalConsistencyError) *NullableApiInternalConsistencyError {
	return &NullableApiInternalConsistencyError{value: val, isSet: true}
}

func (v NullableApiInternalConsistencyError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiInternalConsistencyError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



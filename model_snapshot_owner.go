/*
Corellium API

REST API to manage your virtual devices.

API version: 7.3.0-27831
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the SnapshotOwner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotOwner{}

// SnapshotOwner 
type SnapshotOwner struct {
	// The name of the owner.
	Name string `json:"name"`
	// The email of the member.
	Email string `json:"email"`
}

// NewSnapshotOwner instantiates a new SnapshotOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotOwner(name string, email string) *SnapshotOwner {
	this := SnapshotOwner{}
	this.Name = name
	this.Email = email
	return &this
}

// NewSnapshotOwnerWithDefaults instantiates a new SnapshotOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotOwnerWithDefaults() *SnapshotOwner {
	this := SnapshotOwner{}
	return &this
}

// GetName returns the Name field value
func (o *SnapshotOwner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SnapshotOwner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SnapshotOwner) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value
func (o *SnapshotOwner) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SnapshotOwner) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SnapshotOwner) SetEmail(v string) {
	o.Email = v
}

func (o SnapshotOwner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotOwner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["email"] = o.Email
	return toSerialize, nil
}

type NullableSnapshotOwner struct {
	value *SnapshotOwner
	isSet bool
}

func (v NullableSnapshotOwner) Get() *SnapshotOwner {
	return v.value
}

func (v *NullableSnapshotOwner) Set(val *SnapshotOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotOwner(val *SnapshotOwner) *NullableSnapshotOwner {
	return &NullableSnapshotOwner{value: val, isSet: true}
}

func (v NullableSnapshotOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Corellium API

REST API to manage your virtual devices.

API version: 6.5.0-23522
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the CheckSubdomainResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckSubdomainResponse{}

// CheckSubdomainResponse 
type CheckSubdomainResponse struct {
	// Indicates whether the subdomain is available or not
	Available bool `json:"available"`
}

// NewCheckSubdomainResponse instantiates a new CheckSubdomainResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckSubdomainResponse(available bool) *CheckSubdomainResponse {
	this := CheckSubdomainResponse{}
	this.Available = available
	return &this
}

// NewCheckSubdomainResponseWithDefaults instantiates a new CheckSubdomainResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckSubdomainResponseWithDefaults() *CheckSubdomainResponse {
	this := CheckSubdomainResponse{}
	return &this
}

// GetAvailable returns the Available field value
func (o *CheckSubdomainResponse) GetAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Available
}

// GetAvailableOk returns a tuple with the Available field value
// and a boolean to check if the value has been set.
func (o *CheckSubdomainResponse) GetAvailableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Available, true
}

// SetAvailable sets field value
func (o *CheckSubdomainResponse) SetAvailable(v bool) {
	o.Available = v
}

func (o CheckSubdomainResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckSubdomainResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["available"] = o.Available
	return toSerialize, nil
}

type NullableCheckSubdomainResponse struct {
	value *CheckSubdomainResponse
	isSet bool
}

func (v NullableCheckSubdomainResponse) Get() *CheckSubdomainResponse {
	return v.value
}

func (v *NullableCheckSubdomainResponse) Set(val *CheckSubdomainResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckSubdomainResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckSubdomainResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckSubdomainResponse(val *CheckSubdomainResponse) *NullableCheckSubdomainResponse {
	return &NullableCheckSubdomainResponse{value: val, isSet: true}
}

func (v NullableCheckSubdomainResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckSubdomainResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



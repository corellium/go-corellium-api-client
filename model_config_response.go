/*
Corellium API

REST API to manage your virtual devices.

API version: 5.5.0-18750
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the ConfigResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigResponse{}

// ConfigResponse 
type ConfigResponse struct {
	// Denotes whether it's an on-site install
	OnSite NullableBool `json:"onSite,omitempty"`
	// Denotes whether to show domain settings
	ShowDomainSettings NullableBool `json:"showDomainSettings,omitempty"`
	// Denotes the version
	Version NullableString `json:"version,omitempty"`
	// Denotes whether the build is invalid
	InvalidBuild NullableBool `json:"invalidBuild,omitempty"`
	// Denotes whether sepSim is enabled
	SepSim NullableBool `json:"sepSim,omitempty"`
	// Denotes whether installer is available
	InstallerAvailable NullableBool `json:"installerAvailable,omitempty"`
	// API publishable key to use for Invoiced
	InvoicedPublishableKey NullableString `json:"invoicedPublishableKey,omitempty"`
	// Stripe public key
	StripePublicKey NullableString `json:"stripePublicKey,omitempty"`
	// Intercom app ID, also known as workspace ID
	IntercomId NullableString `json:"intercomId,omitempty"`
	// Webhook URL for aux
	AuxWebhook NullableString `json:"auxWebhook,omitempty"`
	// Google Tag Manager
	GtmId NullableString `json:"gtmId,omitempty"`
	// Webhook URL to send feedback into Productboard automatically
	ZapierFeedbackWebhook NullableString `json:"zapierFeedbackWebhook,omitempty"`
	// Webhook URL to send frontend errors to Jira automatically
	ZapierBugsWebhook NullableString `json:"zapierBugsWebhook,omitempty"`
	// Default backend billing api name for new subscriptions (e.g. \"stripe\")
	BillingBackend NullableString `json:"billingBackend,omitempty"`
	Maintenance NullableConfigResponseMaintenance `json:"maintenance,omitempty"`
	Logging *Logging `json:"logging,omitempty"`
	// URL for cloud admin login
	CloudAdmin NullableString `json:"cloudAdmin,omitempty"`
	// URL for files admin login
	FilesAdmin NullableString `json:"filesAdmin,omitempty"`
	// Cloud domain name (usually corellium.com or staging.corellium.com)
	CloudDomain NullableString `json:"cloudDomain,omitempty"`
	// Billing domain name
	BillingDomain NullableString `json:"billingDomain,omitempty"`
	// App domain name (usually app.corellium.com or app.staging.corellium.com)
	AppDomain NullableString `json:"appDomain,omitempty"`
	// Maximum network monitor file size
	MaxNetworkMonitorFileSize NullableString `json:"maxNetworkMonitorFileSize,omitempty"`
	// Denotes whether users can upload firmware images
	EnableFirmwareImageUpload NullableBool `json:"enableFirmwareImageUpload,omitempty"`
	// Auth providers
	AuthProviders []AuthProvider `json:"authProviders,omitempty"`
	// Maximum number of snapshots to allow
	SnapshotLimit NullableFloat32 `json:"snapshotLimit,omitempty"`
	// The maximum size, in bytes, (default: 100 MB) that an uploaded kernel should be
	MaxKernelSize NullableFloat32 `json:"maxKernelSize,omitempty"`
	// The maximum size, in bytes, (default: 500 MB) that an uploaded ramdisk should be
	MaxRamdiskSize NullableFloat32 `json:"maxRamdiskSize,omitempty"`
	// Denotes whether charmSDK is enabled
	CharmSDK NullableString `json:"charmSDK,omitempty"`
	Trial *Trial `json:"trial,omitempty"`
	// Sentry URL
	SentryUrl NullableString `json:"sentryUrl,omitempty"`
	// If enabled, adds the default providers in their current configuration
	DomainAuthenticationProviders NullableBool `json:"domainAuthenticationProviders,omitempty"`
}

// NewConfigResponse instantiates a new ConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigResponse() *ConfigResponse {
	this := ConfigResponse{}
	return &this
}

// NewConfigResponseWithDefaults instantiates a new ConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigResponseWithDefaults() *ConfigResponse {
	this := ConfigResponse{}
	return &this
}

// GetOnSite returns the OnSite field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetOnSite() bool {
	if o == nil || IsNil(o.OnSite.Get()) {
		var ret bool
		return ret
	}
	return *o.OnSite.Get()
}

// GetOnSiteOk returns a tuple with the OnSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetOnSiteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnSite.Get(), o.OnSite.IsSet()
}

// HasOnSite returns a boolean if a field has been set.
func (o *ConfigResponse) HasOnSite() bool {
	if o != nil && o.OnSite.IsSet() {
		return true
	}

	return false
}

// SetOnSite gets a reference to the given NullableBool and assigns it to the OnSite field.
func (o *ConfigResponse) SetOnSite(v bool) {
	o.OnSite.Set(&v)
}
// SetOnSiteNil sets the value for OnSite to be an explicit nil
func (o *ConfigResponse) SetOnSiteNil() {
	o.OnSite.Set(nil)
}

// UnsetOnSite ensures that no value is present for OnSite, not even an explicit nil
func (o *ConfigResponse) UnsetOnSite() {
	o.OnSite.Unset()
}

// GetShowDomainSettings returns the ShowDomainSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetShowDomainSettings() bool {
	if o == nil || IsNil(o.ShowDomainSettings.Get()) {
		var ret bool
		return ret
	}
	return *o.ShowDomainSettings.Get()
}

// GetShowDomainSettingsOk returns a tuple with the ShowDomainSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetShowDomainSettingsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowDomainSettings.Get(), o.ShowDomainSettings.IsSet()
}

// HasShowDomainSettings returns a boolean if a field has been set.
func (o *ConfigResponse) HasShowDomainSettings() bool {
	if o != nil && o.ShowDomainSettings.IsSet() {
		return true
	}

	return false
}

// SetShowDomainSettings gets a reference to the given NullableBool and assigns it to the ShowDomainSettings field.
func (o *ConfigResponse) SetShowDomainSettings(v bool) {
	o.ShowDomainSettings.Set(&v)
}
// SetShowDomainSettingsNil sets the value for ShowDomainSettings to be an explicit nil
func (o *ConfigResponse) SetShowDomainSettingsNil() {
	o.ShowDomainSettings.Set(nil)
}

// UnsetShowDomainSettings ensures that no value is present for ShowDomainSettings, not even an explicit nil
func (o *ConfigResponse) UnsetShowDomainSettings() {
	o.ShowDomainSettings.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetVersion() string {
	if o == nil || IsNil(o.Version.Get()) {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *ConfigResponse) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *ConfigResponse) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *ConfigResponse) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *ConfigResponse) UnsetVersion() {
	o.Version.Unset()
}

// GetInvalidBuild returns the InvalidBuild field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetInvalidBuild() bool {
	if o == nil || IsNil(o.InvalidBuild.Get()) {
		var ret bool
		return ret
	}
	return *o.InvalidBuild.Get()
}

// GetInvalidBuildOk returns a tuple with the InvalidBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetInvalidBuildOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvalidBuild.Get(), o.InvalidBuild.IsSet()
}

// HasInvalidBuild returns a boolean if a field has been set.
func (o *ConfigResponse) HasInvalidBuild() bool {
	if o != nil && o.InvalidBuild.IsSet() {
		return true
	}

	return false
}

// SetInvalidBuild gets a reference to the given NullableBool and assigns it to the InvalidBuild field.
func (o *ConfigResponse) SetInvalidBuild(v bool) {
	o.InvalidBuild.Set(&v)
}
// SetInvalidBuildNil sets the value for InvalidBuild to be an explicit nil
func (o *ConfigResponse) SetInvalidBuildNil() {
	o.InvalidBuild.Set(nil)
}

// UnsetInvalidBuild ensures that no value is present for InvalidBuild, not even an explicit nil
func (o *ConfigResponse) UnsetInvalidBuild() {
	o.InvalidBuild.Unset()
}

// GetSepSim returns the SepSim field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetSepSim() bool {
	if o == nil || IsNil(o.SepSim.Get()) {
		var ret bool
		return ret
	}
	return *o.SepSim.Get()
}

// GetSepSimOk returns a tuple with the SepSim field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetSepSimOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SepSim.Get(), o.SepSim.IsSet()
}

// HasSepSim returns a boolean if a field has been set.
func (o *ConfigResponse) HasSepSim() bool {
	if o != nil && o.SepSim.IsSet() {
		return true
	}

	return false
}

// SetSepSim gets a reference to the given NullableBool and assigns it to the SepSim field.
func (o *ConfigResponse) SetSepSim(v bool) {
	o.SepSim.Set(&v)
}
// SetSepSimNil sets the value for SepSim to be an explicit nil
func (o *ConfigResponse) SetSepSimNil() {
	o.SepSim.Set(nil)
}

// UnsetSepSim ensures that no value is present for SepSim, not even an explicit nil
func (o *ConfigResponse) UnsetSepSim() {
	o.SepSim.Unset()
}

// GetInstallerAvailable returns the InstallerAvailable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetInstallerAvailable() bool {
	if o == nil || IsNil(o.InstallerAvailable.Get()) {
		var ret bool
		return ret
	}
	return *o.InstallerAvailable.Get()
}

// GetInstallerAvailableOk returns a tuple with the InstallerAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetInstallerAvailableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstallerAvailable.Get(), o.InstallerAvailable.IsSet()
}

// HasInstallerAvailable returns a boolean if a field has been set.
func (o *ConfigResponse) HasInstallerAvailable() bool {
	if o != nil && o.InstallerAvailable.IsSet() {
		return true
	}

	return false
}

// SetInstallerAvailable gets a reference to the given NullableBool and assigns it to the InstallerAvailable field.
func (o *ConfigResponse) SetInstallerAvailable(v bool) {
	o.InstallerAvailable.Set(&v)
}
// SetInstallerAvailableNil sets the value for InstallerAvailable to be an explicit nil
func (o *ConfigResponse) SetInstallerAvailableNil() {
	o.InstallerAvailable.Set(nil)
}

// UnsetInstallerAvailable ensures that no value is present for InstallerAvailable, not even an explicit nil
func (o *ConfigResponse) UnsetInstallerAvailable() {
	o.InstallerAvailable.Unset()
}

// GetInvoicedPublishableKey returns the InvoicedPublishableKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetInvoicedPublishableKey() string {
	if o == nil || IsNil(o.InvoicedPublishableKey.Get()) {
		var ret string
		return ret
	}
	return *o.InvoicedPublishableKey.Get()
}

// GetInvoicedPublishableKeyOk returns a tuple with the InvoicedPublishableKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetInvoicedPublishableKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoicedPublishableKey.Get(), o.InvoicedPublishableKey.IsSet()
}

// HasInvoicedPublishableKey returns a boolean if a field has been set.
func (o *ConfigResponse) HasInvoicedPublishableKey() bool {
	if o != nil && o.InvoicedPublishableKey.IsSet() {
		return true
	}

	return false
}

// SetInvoicedPublishableKey gets a reference to the given NullableString and assigns it to the InvoicedPublishableKey field.
func (o *ConfigResponse) SetInvoicedPublishableKey(v string) {
	o.InvoicedPublishableKey.Set(&v)
}
// SetInvoicedPublishableKeyNil sets the value for InvoicedPublishableKey to be an explicit nil
func (o *ConfigResponse) SetInvoicedPublishableKeyNil() {
	o.InvoicedPublishableKey.Set(nil)
}

// UnsetInvoicedPublishableKey ensures that no value is present for InvoicedPublishableKey, not even an explicit nil
func (o *ConfigResponse) UnsetInvoicedPublishableKey() {
	o.InvoicedPublishableKey.Unset()
}

// GetStripePublicKey returns the StripePublicKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetStripePublicKey() string {
	if o == nil || IsNil(o.StripePublicKey.Get()) {
		var ret string
		return ret
	}
	return *o.StripePublicKey.Get()
}

// GetStripePublicKeyOk returns a tuple with the StripePublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetStripePublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StripePublicKey.Get(), o.StripePublicKey.IsSet()
}

// HasStripePublicKey returns a boolean if a field has been set.
func (o *ConfigResponse) HasStripePublicKey() bool {
	if o != nil && o.StripePublicKey.IsSet() {
		return true
	}

	return false
}

// SetStripePublicKey gets a reference to the given NullableString and assigns it to the StripePublicKey field.
func (o *ConfigResponse) SetStripePublicKey(v string) {
	o.StripePublicKey.Set(&v)
}
// SetStripePublicKeyNil sets the value for StripePublicKey to be an explicit nil
func (o *ConfigResponse) SetStripePublicKeyNil() {
	o.StripePublicKey.Set(nil)
}

// UnsetStripePublicKey ensures that no value is present for StripePublicKey, not even an explicit nil
func (o *ConfigResponse) UnsetStripePublicKey() {
	o.StripePublicKey.Unset()
}

// GetIntercomId returns the IntercomId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetIntercomId() string {
	if o == nil || IsNil(o.IntercomId.Get()) {
		var ret string
		return ret
	}
	return *o.IntercomId.Get()
}

// GetIntercomIdOk returns a tuple with the IntercomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetIntercomIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntercomId.Get(), o.IntercomId.IsSet()
}

// HasIntercomId returns a boolean if a field has been set.
func (o *ConfigResponse) HasIntercomId() bool {
	if o != nil && o.IntercomId.IsSet() {
		return true
	}

	return false
}

// SetIntercomId gets a reference to the given NullableString and assigns it to the IntercomId field.
func (o *ConfigResponse) SetIntercomId(v string) {
	o.IntercomId.Set(&v)
}
// SetIntercomIdNil sets the value for IntercomId to be an explicit nil
func (o *ConfigResponse) SetIntercomIdNil() {
	o.IntercomId.Set(nil)
}

// UnsetIntercomId ensures that no value is present for IntercomId, not even an explicit nil
func (o *ConfigResponse) UnsetIntercomId() {
	o.IntercomId.Unset()
}

// GetAuxWebhook returns the AuxWebhook field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetAuxWebhook() string {
	if o == nil || IsNil(o.AuxWebhook.Get()) {
		var ret string
		return ret
	}
	return *o.AuxWebhook.Get()
}

// GetAuxWebhookOk returns a tuple with the AuxWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetAuxWebhookOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuxWebhook.Get(), o.AuxWebhook.IsSet()
}

// HasAuxWebhook returns a boolean if a field has been set.
func (o *ConfigResponse) HasAuxWebhook() bool {
	if o != nil && o.AuxWebhook.IsSet() {
		return true
	}

	return false
}

// SetAuxWebhook gets a reference to the given NullableString and assigns it to the AuxWebhook field.
func (o *ConfigResponse) SetAuxWebhook(v string) {
	o.AuxWebhook.Set(&v)
}
// SetAuxWebhookNil sets the value for AuxWebhook to be an explicit nil
func (o *ConfigResponse) SetAuxWebhookNil() {
	o.AuxWebhook.Set(nil)
}

// UnsetAuxWebhook ensures that no value is present for AuxWebhook, not even an explicit nil
func (o *ConfigResponse) UnsetAuxWebhook() {
	o.AuxWebhook.Unset()
}

// GetGtmId returns the GtmId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetGtmId() string {
	if o == nil || IsNil(o.GtmId.Get()) {
		var ret string
		return ret
	}
	return *o.GtmId.Get()
}

// GetGtmIdOk returns a tuple with the GtmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetGtmIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GtmId.Get(), o.GtmId.IsSet()
}

// HasGtmId returns a boolean if a field has been set.
func (o *ConfigResponse) HasGtmId() bool {
	if o != nil && o.GtmId.IsSet() {
		return true
	}

	return false
}

// SetGtmId gets a reference to the given NullableString and assigns it to the GtmId field.
func (o *ConfigResponse) SetGtmId(v string) {
	o.GtmId.Set(&v)
}
// SetGtmIdNil sets the value for GtmId to be an explicit nil
func (o *ConfigResponse) SetGtmIdNil() {
	o.GtmId.Set(nil)
}

// UnsetGtmId ensures that no value is present for GtmId, not even an explicit nil
func (o *ConfigResponse) UnsetGtmId() {
	o.GtmId.Unset()
}

// GetZapierFeedbackWebhook returns the ZapierFeedbackWebhook field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetZapierFeedbackWebhook() string {
	if o == nil || IsNil(o.ZapierFeedbackWebhook.Get()) {
		var ret string
		return ret
	}
	return *o.ZapierFeedbackWebhook.Get()
}

// GetZapierFeedbackWebhookOk returns a tuple with the ZapierFeedbackWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetZapierFeedbackWebhookOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZapierFeedbackWebhook.Get(), o.ZapierFeedbackWebhook.IsSet()
}

// HasZapierFeedbackWebhook returns a boolean if a field has been set.
func (o *ConfigResponse) HasZapierFeedbackWebhook() bool {
	if o != nil && o.ZapierFeedbackWebhook.IsSet() {
		return true
	}

	return false
}

// SetZapierFeedbackWebhook gets a reference to the given NullableString and assigns it to the ZapierFeedbackWebhook field.
func (o *ConfigResponse) SetZapierFeedbackWebhook(v string) {
	o.ZapierFeedbackWebhook.Set(&v)
}
// SetZapierFeedbackWebhookNil sets the value for ZapierFeedbackWebhook to be an explicit nil
func (o *ConfigResponse) SetZapierFeedbackWebhookNil() {
	o.ZapierFeedbackWebhook.Set(nil)
}

// UnsetZapierFeedbackWebhook ensures that no value is present for ZapierFeedbackWebhook, not even an explicit nil
func (o *ConfigResponse) UnsetZapierFeedbackWebhook() {
	o.ZapierFeedbackWebhook.Unset()
}

// GetZapierBugsWebhook returns the ZapierBugsWebhook field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetZapierBugsWebhook() string {
	if o == nil || IsNil(o.ZapierBugsWebhook.Get()) {
		var ret string
		return ret
	}
	return *o.ZapierBugsWebhook.Get()
}

// GetZapierBugsWebhookOk returns a tuple with the ZapierBugsWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetZapierBugsWebhookOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZapierBugsWebhook.Get(), o.ZapierBugsWebhook.IsSet()
}

// HasZapierBugsWebhook returns a boolean if a field has been set.
func (o *ConfigResponse) HasZapierBugsWebhook() bool {
	if o != nil && o.ZapierBugsWebhook.IsSet() {
		return true
	}

	return false
}

// SetZapierBugsWebhook gets a reference to the given NullableString and assigns it to the ZapierBugsWebhook field.
func (o *ConfigResponse) SetZapierBugsWebhook(v string) {
	o.ZapierBugsWebhook.Set(&v)
}
// SetZapierBugsWebhookNil sets the value for ZapierBugsWebhook to be an explicit nil
func (o *ConfigResponse) SetZapierBugsWebhookNil() {
	o.ZapierBugsWebhook.Set(nil)
}

// UnsetZapierBugsWebhook ensures that no value is present for ZapierBugsWebhook, not even an explicit nil
func (o *ConfigResponse) UnsetZapierBugsWebhook() {
	o.ZapierBugsWebhook.Unset()
}

// GetBillingBackend returns the BillingBackend field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetBillingBackend() string {
	if o == nil || IsNil(o.BillingBackend.Get()) {
		var ret string
		return ret
	}
	return *o.BillingBackend.Get()
}

// GetBillingBackendOk returns a tuple with the BillingBackend field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetBillingBackendOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingBackend.Get(), o.BillingBackend.IsSet()
}

// HasBillingBackend returns a boolean if a field has been set.
func (o *ConfigResponse) HasBillingBackend() bool {
	if o != nil && o.BillingBackend.IsSet() {
		return true
	}

	return false
}

// SetBillingBackend gets a reference to the given NullableString and assigns it to the BillingBackend field.
func (o *ConfigResponse) SetBillingBackend(v string) {
	o.BillingBackend.Set(&v)
}
// SetBillingBackendNil sets the value for BillingBackend to be an explicit nil
func (o *ConfigResponse) SetBillingBackendNil() {
	o.BillingBackend.Set(nil)
}

// UnsetBillingBackend ensures that no value is present for BillingBackend, not even an explicit nil
func (o *ConfigResponse) UnsetBillingBackend() {
	o.BillingBackend.Unset()
}

// GetMaintenance returns the Maintenance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetMaintenance() ConfigResponseMaintenance {
	if o == nil || IsNil(o.Maintenance.Get()) {
		var ret ConfigResponseMaintenance
		return ret
	}
	return *o.Maintenance.Get()
}

// GetMaintenanceOk returns a tuple with the Maintenance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetMaintenanceOk() (*ConfigResponseMaintenance, bool) {
	if o == nil {
		return nil, false
	}
	return o.Maintenance.Get(), o.Maintenance.IsSet()
}

// HasMaintenance returns a boolean if a field has been set.
func (o *ConfigResponse) HasMaintenance() bool {
	if o != nil && o.Maintenance.IsSet() {
		return true
	}

	return false
}

// SetMaintenance gets a reference to the given NullableConfigResponseMaintenance and assigns it to the Maintenance field.
func (o *ConfigResponse) SetMaintenance(v ConfigResponseMaintenance) {
	o.Maintenance.Set(&v)
}
// SetMaintenanceNil sets the value for Maintenance to be an explicit nil
func (o *ConfigResponse) SetMaintenanceNil() {
	o.Maintenance.Set(nil)
}

// UnsetMaintenance ensures that no value is present for Maintenance, not even an explicit nil
func (o *ConfigResponse) UnsetMaintenance() {
	o.Maintenance.Unset()
}

// GetLogging returns the Logging field value if set, zero value otherwise.
func (o *ConfigResponse) GetLogging() Logging {
	if o == nil || IsNil(o.Logging) {
		var ret Logging
		return ret
	}
	return *o.Logging
}

// GetLoggingOk returns a tuple with the Logging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigResponse) GetLoggingOk() (*Logging, bool) {
	if o == nil || IsNil(o.Logging) {
		return nil, false
	}
	return o.Logging, true
}

// HasLogging returns a boolean if a field has been set.
func (o *ConfigResponse) HasLogging() bool {
	if o != nil && !IsNil(o.Logging) {
		return true
	}

	return false
}

// SetLogging gets a reference to the given Logging and assigns it to the Logging field.
func (o *ConfigResponse) SetLogging(v Logging) {
	o.Logging = &v
}

// GetCloudAdmin returns the CloudAdmin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetCloudAdmin() string {
	if o == nil || IsNil(o.CloudAdmin.Get()) {
		var ret string
		return ret
	}
	return *o.CloudAdmin.Get()
}

// GetCloudAdminOk returns a tuple with the CloudAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetCloudAdminOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudAdmin.Get(), o.CloudAdmin.IsSet()
}

// HasCloudAdmin returns a boolean if a field has been set.
func (o *ConfigResponse) HasCloudAdmin() bool {
	if o != nil && o.CloudAdmin.IsSet() {
		return true
	}

	return false
}

// SetCloudAdmin gets a reference to the given NullableString and assigns it to the CloudAdmin field.
func (o *ConfigResponse) SetCloudAdmin(v string) {
	o.CloudAdmin.Set(&v)
}
// SetCloudAdminNil sets the value for CloudAdmin to be an explicit nil
func (o *ConfigResponse) SetCloudAdminNil() {
	o.CloudAdmin.Set(nil)
}

// UnsetCloudAdmin ensures that no value is present for CloudAdmin, not even an explicit nil
func (o *ConfigResponse) UnsetCloudAdmin() {
	o.CloudAdmin.Unset()
}

// GetFilesAdmin returns the FilesAdmin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetFilesAdmin() string {
	if o == nil || IsNil(o.FilesAdmin.Get()) {
		var ret string
		return ret
	}
	return *o.FilesAdmin.Get()
}

// GetFilesAdminOk returns a tuple with the FilesAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetFilesAdminOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilesAdmin.Get(), o.FilesAdmin.IsSet()
}

// HasFilesAdmin returns a boolean if a field has been set.
func (o *ConfigResponse) HasFilesAdmin() bool {
	if o != nil && o.FilesAdmin.IsSet() {
		return true
	}

	return false
}

// SetFilesAdmin gets a reference to the given NullableString and assigns it to the FilesAdmin field.
func (o *ConfigResponse) SetFilesAdmin(v string) {
	o.FilesAdmin.Set(&v)
}
// SetFilesAdminNil sets the value for FilesAdmin to be an explicit nil
func (o *ConfigResponse) SetFilesAdminNil() {
	o.FilesAdmin.Set(nil)
}

// UnsetFilesAdmin ensures that no value is present for FilesAdmin, not even an explicit nil
func (o *ConfigResponse) UnsetFilesAdmin() {
	o.FilesAdmin.Unset()
}

// GetCloudDomain returns the CloudDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetCloudDomain() string {
	if o == nil || IsNil(o.CloudDomain.Get()) {
		var ret string
		return ret
	}
	return *o.CloudDomain.Get()
}

// GetCloudDomainOk returns a tuple with the CloudDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetCloudDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudDomain.Get(), o.CloudDomain.IsSet()
}

// HasCloudDomain returns a boolean if a field has been set.
func (o *ConfigResponse) HasCloudDomain() bool {
	if o != nil && o.CloudDomain.IsSet() {
		return true
	}

	return false
}

// SetCloudDomain gets a reference to the given NullableString and assigns it to the CloudDomain field.
func (o *ConfigResponse) SetCloudDomain(v string) {
	o.CloudDomain.Set(&v)
}
// SetCloudDomainNil sets the value for CloudDomain to be an explicit nil
func (o *ConfigResponse) SetCloudDomainNil() {
	o.CloudDomain.Set(nil)
}

// UnsetCloudDomain ensures that no value is present for CloudDomain, not even an explicit nil
func (o *ConfigResponse) UnsetCloudDomain() {
	o.CloudDomain.Unset()
}

// GetBillingDomain returns the BillingDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetBillingDomain() string {
	if o == nil || IsNil(o.BillingDomain.Get()) {
		var ret string
		return ret
	}
	return *o.BillingDomain.Get()
}

// GetBillingDomainOk returns a tuple with the BillingDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetBillingDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingDomain.Get(), o.BillingDomain.IsSet()
}

// HasBillingDomain returns a boolean if a field has been set.
func (o *ConfigResponse) HasBillingDomain() bool {
	if o != nil && o.BillingDomain.IsSet() {
		return true
	}

	return false
}

// SetBillingDomain gets a reference to the given NullableString and assigns it to the BillingDomain field.
func (o *ConfigResponse) SetBillingDomain(v string) {
	o.BillingDomain.Set(&v)
}
// SetBillingDomainNil sets the value for BillingDomain to be an explicit nil
func (o *ConfigResponse) SetBillingDomainNil() {
	o.BillingDomain.Set(nil)
}

// UnsetBillingDomain ensures that no value is present for BillingDomain, not even an explicit nil
func (o *ConfigResponse) UnsetBillingDomain() {
	o.BillingDomain.Unset()
}

// GetAppDomain returns the AppDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetAppDomain() string {
	if o == nil || IsNil(o.AppDomain.Get()) {
		var ret string
		return ret
	}
	return *o.AppDomain.Get()
}

// GetAppDomainOk returns a tuple with the AppDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetAppDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppDomain.Get(), o.AppDomain.IsSet()
}

// HasAppDomain returns a boolean if a field has been set.
func (o *ConfigResponse) HasAppDomain() bool {
	if o != nil && o.AppDomain.IsSet() {
		return true
	}

	return false
}

// SetAppDomain gets a reference to the given NullableString and assigns it to the AppDomain field.
func (o *ConfigResponse) SetAppDomain(v string) {
	o.AppDomain.Set(&v)
}
// SetAppDomainNil sets the value for AppDomain to be an explicit nil
func (o *ConfigResponse) SetAppDomainNil() {
	o.AppDomain.Set(nil)
}

// UnsetAppDomain ensures that no value is present for AppDomain, not even an explicit nil
func (o *ConfigResponse) UnsetAppDomain() {
	o.AppDomain.Unset()
}

// GetMaxNetworkMonitorFileSize returns the MaxNetworkMonitorFileSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetMaxNetworkMonitorFileSize() string {
	if o == nil || IsNil(o.MaxNetworkMonitorFileSize.Get()) {
		var ret string
		return ret
	}
	return *o.MaxNetworkMonitorFileSize.Get()
}

// GetMaxNetworkMonitorFileSizeOk returns a tuple with the MaxNetworkMonitorFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetMaxNetworkMonitorFileSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxNetworkMonitorFileSize.Get(), o.MaxNetworkMonitorFileSize.IsSet()
}

// HasMaxNetworkMonitorFileSize returns a boolean if a field has been set.
func (o *ConfigResponse) HasMaxNetworkMonitorFileSize() bool {
	if o != nil && o.MaxNetworkMonitorFileSize.IsSet() {
		return true
	}

	return false
}

// SetMaxNetworkMonitorFileSize gets a reference to the given NullableString and assigns it to the MaxNetworkMonitorFileSize field.
func (o *ConfigResponse) SetMaxNetworkMonitorFileSize(v string) {
	o.MaxNetworkMonitorFileSize.Set(&v)
}
// SetMaxNetworkMonitorFileSizeNil sets the value for MaxNetworkMonitorFileSize to be an explicit nil
func (o *ConfigResponse) SetMaxNetworkMonitorFileSizeNil() {
	o.MaxNetworkMonitorFileSize.Set(nil)
}

// UnsetMaxNetworkMonitorFileSize ensures that no value is present for MaxNetworkMonitorFileSize, not even an explicit nil
func (o *ConfigResponse) UnsetMaxNetworkMonitorFileSize() {
	o.MaxNetworkMonitorFileSize.Unset()
}

// GetEnableFirmwareImageUpload returns the EnableFirmwareImageUpload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetEnableFirmwareImageUpload() bool {
	if o == nil || IsNil(o.EnableFirmwareImageUpload.Get()) {
		var ret bool
		return ret
	}
	return *o.EnableFirmwareImageUpload.Get()
}

// GetEnableFirmwareImageUploadOk returns a tuple with the EnableFirmwareImageUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetEnableFirmwareImageUploadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnableFirmwareImageUpload.Get(), o.EnableFirmwareImageUpload.IsSet()
}

// HasEnableFirmwareImageUpload returns a boolean if a field has been set.
func (o *ConfigResponse) HasEnableFirmwareImageUpload() bool {
	if o != nil && o.EnableFirmwareImageUpload.IsSet() {
		return true
	}

	return false
}

// SetEnableFirmwareImageUpload gets a reference to the given NullableBool and assigns it to the EnableFirmwareImageUpload field.
func (o *ConfigResponse) SetEnableFirmwareImageUpload(v bool) {
	o.EnableFirmwareImageUpload.Set(&v)
}
// SetEnableFirmwareImageUploadNil sets the value for EnableFirmwareImageUpload to be an explicit nil
func (o *ConfigResponse) SetEnableFirmwareImageUploadNil() {
	o.EnableFirmwareImageUpload.Set(nil)
}

// UnsetEnableFirmwareImageUpload ensures that no value is present for EnableFirmwareImageUpload, not even an explicit nil
func (o *ConfigResponse) UnsetEnableFirmwareImageUpload() {
	o.EnableFirmwareImageUpload.Unset()
}

// GetAuthProviders returns the AuthProviders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetAuthProviders() []AuthProvider {
	if o == nil {
		var ret []AuthProvider
		return ret
	}
	return o.AuthProviders
}

// GetAuthProvidersOk returns a tuple with the AuthProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetAuthProvidersOk() ([]AuthProvider, bool) {
	if o == nil || IsNil(o.AuthProviders) {
		return nil, false
	}
	return o.AuthProviders, true
}

// HasAuthProviders returns a boolean if a field has been set.
func (o *ConfigResponse) HasAuthProviders() bool {
	if o != nil && IsNil(o.AuthProviders) {
		return true
	}

	return false
}

// SetAuthProviders gets a reference to the given []AuthProvider and assigns it to the AuthProviders field.
func (o *ConfigResponse) SetAuthProviders(v []AuthProvider) {
	o.AuthProviders = v
}

// GetSnapshotLimit returns the SnapshotLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetSnapshotLimit() float32 {
	if o == nil || IsNil(o.SnapshotLimit.Get()) {
		var ret float32
		return ret
	}
	return *o.SnapshotLimit.Get()
}

// GetSnapshotLimitOk returns a tuple with the SnapshotLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetSnapshotLimitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotLimit.Get(), o.SnapshotLimit.IsSet()
}

// HasSnapshotLimit returns a boolean if a field has been set.
func (o *ConfigResponse) HasSnapshotLimit() bool {
	if o != nil && o.SnapshotLimit.IsSet() {
		return true
	}

	return false
}

// SetSnapshotLimit gets a reference to the given NullableFloat32 and assigns it to the SnapshotLimit field.
func (o *ConfigResponse) SetSnapshotLimit(v float32) {
	o.SnapshotLimit.Set(&v)
}
// SetSnapshotLimitNil sets the value for SnapshotLimit to be an explicit nil
func (o *ConfigResponse) SetSnapshotLimitNil() {
	o.SnapshotLimit.Set(nil)
}

// UnsetSnapshotLimit ensures that no value is present for SnapshotLimit, not even an explicit nil
func (o *ConfigResponse) UnsetSnapshotLimit() {
	o.SnapshotLimit.Unset()
}

// GetMaxKernelSize returns the MaxKernelSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetMaxKernelSize() float32 {
	if o == nil || IsNil(o.MaxKernelSize.Get()) {
		var ret float32
		return ret
	}
	return *o.MaxKernelSize.Get()
}

// GetMaxKernelSizeOk returns a tuple with the MaxKernelSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetMaxKernelSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxKernelSize.Get(), o.MaxKernelSize.IsSet()
}

// HasMaxKernelSize returns a boolean if a field has been set.
func (o *ConfigResponse) HasMaxKernelSize() bool {
	if o != nil && o.MaxKernelSize.IsSet() {
		return true
	}

	return false
}

// SetMaxKernelSize gets a reference to the given NullableFloat32 and assigns it to the MaxKernelSize field.
func (o *ConfigResponse) SetMaxKernelSize(v float32) {
	o.MaxKernelSize.Set(&v)
}
// SetMaxKernelSizeNil sets the value for MaxKernelSize to be an explicit nil
func (o *ConfigResponse) SetMaxKernelSizeNil() {
	o.MaxKernelSize.Set(nil)
}

// UnsetMaxKernelSize ensures that no value is present for MaxKernelSize, not even an explicit nil
func (o *ConfigResponse) UnsetMaxKernelSize() {
	o.MaxKernelSize.Unset()
}

// GetMaxRamdiskSize returns the MaxRamdiskSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetMaxRamdiskSize() float32 {
	if o == nil || IsNil(o.MaxRamdiskSize.Get()) {
		var ret float32
		return ret
	}
	return *o.MaxRamdiskSize.Get()
}

// GetMaxRamdiskSizeOk returns a tuple with the MaxRamdiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetMaxRamdiskSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxRamdiskSize.Get(), o.MaxRamdiskSize.IsSet()
}

// HasMaxRamdiskSize returns a boolean if a field has been set.
func (o *ConfigResponse) HasMaxRamdiskSize() bool {
	if o != nil && o.MaxRamdiskSize.IsSet() {
		return true
	}

	return false
}

// SetMaxRamdiskSize gets a reference to the given NullableFloat32 and assigns it to the MaxRamdiskSize field.
func (o *ConfigResponse) SetMaxRamdiskSize(v float32) {
	o.MaxRamdiskSize.Set(&v)
}
// SetMaxRamdiskSizeNil sets the value for MaxRamdiskSize to be an explicit nil
func (o *ConfigResponse) SetMaxRamdiskSizeNil() {
	o.MaxRamdiskSize.Set(nil)
}

// UnsetMaxRamdiskSize ensures that no value is present for MaxRamdiskSize, not even an explicit nil
func (o *ConfigResponse) UnsetMaxRamdiskSize() {
	o.MaxRamdiskSize.Unset()
}

// GetCharmSDK returns the CharmSDK field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetCharmSDK() string {
	if o == nil || IsNil(o.CharmSDK.Get()) {
		var ret string
		return ret
	}
	return *o.CharmSDK.Get()
}

// GetCharmSDKOk returns a tuple with the CharmSDK field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetCharmSDKOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CharmSDK.Get(), o.CharmSDK.IsSet()
}

// HasCharmSDK returns a boolean if a field has been set.
func (o *ConfigResponse) HasCharmSDK() bool {
	if o != nil && o.CharmSDK.IsSet() {
		return true
	}

	return false
}

// SetCharmSDK gets a reference to the given NullableString and assigns it to the CharmSDK field.
func (o *ConfigResponse) SetCharmSDK(v string) {
	o.CharmSDK.Set(&v)
}
// SetCharmSDKNil sets the value for CharmSDK to be an explicit nil
func (o *ConfigResponse) SetCharmSDKNil() {
	o.CharmSDK.Set(nil)
}

// UnsetCharmSDK ensures that no value is present for CharmSDK, not even an explicit nil
func (o *ConfigResponse) UnsetCharmSDK() {
	o.CharmSDK.Unset()
}

// GetTrial returns the Trial field value if set, zero value otherwise.
func (o *ConfigResponse) GetTrial() Trial {
	if o == nil || IsNil(o.Trial) {
		var ret Trial
		return ret
	}
	return *o.Trial
}

// GetTrialOk returns a tuple with the Trial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigResponse) GetTrialOk() (*Trial, bool) {
	if o == nil || IsNil(o.Trial) {
		return nil, false
	}
	return o.Trial, true
}

// HasTrial returns a boolean if a field has been set.
func (o *ConfigResponse) HasTrial() bool {
	if o != nil && !IsNil(o.Trial) {
		return true
	}

	return false
}

// SetTrial gets a reference to the given Trial and assigns it to the Trial field.
func (o *ConfigResponse) SetTrial(v Trial) {
	o.Trial = &v
}

// GetSentryUrl returns the SentryUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetSentryUrl() string {
	if o == nil || IsNil(o.SentryUrl.Get()) {
		var ret string
		return ret
	}
	return *o.SentryUrl.Get()
}

// GetSentryUrlOk returns a tuple with the SentryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetSentryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SentryUrl.Get(), o.SentryUrl.IsSet()
}

// HasSentryUrl returns a boolean if a field has been set.
func (o *ConfigResponse) HasSentryUrl() bool {
	if o != nil && o.SentryUrl.IsSet() {
		return true
	}

	return false
}

// SetSentryUrl gets a reference to the given NullableString and assigns it to the SentryUrl field.
func (o *ConfigResponse) SetSentryUrl(v string) {
	o.SentryUrl.Set(&v)
}
// SetSentryUrlNil sets the value for SentryUrl to be an explicit nil
func (o *ConfigResponse) SetSentryUrlNil() {
	o.SentryUrl.Set(nil)
}

// UnsetSentryUrl ensures that no value is present for SentryUrl, not even an explicit nil
func (o *ConfigResponse) UnsetSentryUrl() {
	o.SentryUrl.Unset()
}

// GetDomainAuthenticationProviders returns the DomainAuthenticationProviders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigResponse) GetDomainAuthenticationProviders() bool {
	if o == nil || IsNil(o.DomainAuthenticationProviders.Get()) {
		var ret bool
		return ret
	}
	return *o.DomainAuthenticationProviders.Get()
}

// GetDomainAuthenticationProvidersOk returns a tuple with the DomainAuthenticationProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigResponse) GetDomainAuthenticationProvidersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomainAuthenticationProviders.Get(), o.DomainAuthenticationProviders.IsSet()
}

// HasDomainAuthenticationProviders returns a boolean if a field has been set.
func (o *ConfigResponse) HasDomainAuthenticationProviders() bool {
	if o != nil && o.DomainAuthenticationProviders.IsSet() {
		return true
	}

	return false
}

// SetDomainAuthenticationProviders gets a reference to the given NullableBool and assigns it to the DomainAuthenticationProviders field.
func (o *ConfigResponse) SetDomainAuthenticationProviders(v bool) {
	o.DomainAuthenticationProviders.Set(&v)
}
// SetDomainAuthenticationProvidersNil sets the value for DomainAuthenticationProviders to be an explicit nil
func (o *ConfigResponse) SetDomainAuthenticationProvidersNil() {
	o.DomainAuthenticationProviders.Set(nil)
}

// UnsetDomainAuthenticationProviders ensures that no value is present for DomainAuthenticationProviders, not even an explicit nil
func (o *ConfigResponse) UnsetDomainAuthenticationProviders() {
	o.DomainAuthenticationProviders.Unset()
}

func (o ConfigResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OnSite.IsSet() {
		toSerialize["onSite"] = o.OnSite.Get()
	}
	if o.ShowDomainSettings.IsSet() {
		toSerialize["showDomainSettings"] = o.ShowDomainSettings.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	if o.InvalidBuild.IsSet() {
		toSerialize["invalidBuild"] = o.InvalidBuild.Get()
	}
	if o.SepSim.IsSet() {
		toSerialize["sepSim"] = o.SepSim.Get()
	}
	if o.InstallerAvailable.IsSet() {
		toSerialize["installerAvailable"] = o.InstallerAvailable.Get()
	}
	if o.InvoicedPublishableKey.IsSet() {
		toSerialize["invoicedPublishableKey"] = o.InvoicedPublishableKey.Get()
	}
	if o.StripePublicKey.IsSet() {
		toSerialize["stripePublicKey"] = o.StripePublicKey.Get()
	}
	if o.IntercomId.IsSet() {
		toSerialize["intercomId"] = o.IntercomId.Get()
	}
	if o.AuxWebhook.IsSet() {
		toSerialize["auxWebhook"] = o.AuxWebhook.Get()
	}
	if o.GtmId.IsSet() {
		toSerialize["gtmId"] = o.GtmId.Get()
	}
	if o.ZapierFeedbackWebhook.IsSet() {
		toSerialize["zapierFeedbackWebhook"] = o.ZapierFeedbackWebhook.Get()
	}
	if o.ZapierBugsWebhook.IsSet() {
		toSerialize["zapierBugsWebhook"] = o.ZapierBugsWebhook.Get()
	}
	if o.BillingBackend.IsSet() {
		toSerialize["billingBackend"] = o.BillingBackend.Get()
	}
	if o.Maintenance.IsSet() {
		toSerialize["maintenance"] = o.Maintenance.Get()
	}
	if !IsNil(o.Logging) {
		toSerialize["logging"] = o.Logging
	}
	if o.CloudAdmin.IsSet() {
		toSerialize["cloudAdmin"] = o.CloudAdmin.Get()
	}
	if o.FilesAdmin.IsSet() {
		toSerialize["filesAdmin"] = o.FilesAdmin.Get()
	}
	if o.CloudDomain.IsSet() {
		toSerialize["cloudDomain"] = o.CloudDomain.Get()
	}
	if o.BillingDomain.IsSet() {
		toSerialize["billingDomain"] = o.BillingDomain.Get()
	}
	if o.AppDomain.IsSet() {
		toSerialize["appDomain"] = o.AppDomain.Get()
	}
	if o.MaxNetworkMonitorFileSize.IsSet() {
		toSerialize["maxNetworkMonitorFileSize"] = o.MaxNetworkMonitorFileSize.Get()
	}
	if o.EnableFirmwareImageUpload.IsSet() {
		toSerialize["enableFirmwareImageUpload"] = o.EnableFirmwareImageUpload.Get()
	}
	if o.AuthProviders != nil {
		toSerialize["authProviders"] = o.AuthProviders
	}
	if o.SnapshotLimit.IsSet() {
		toSerialize["snapshotLimit"] = o.SnapshotLimit.Get()
	}
	if o.MaxKernelSize.IsSet() {
		toSerialize["maxKernelSize"] = o.MaxKernelSize.Get()
	}
	if o.MaxRamdiskSize.IsSet() {
		toSerialize["maxRamdiskSize"] = o.MaxRamdiskSize.Get()
	}
	if o.CharmSDK.IsSet() {
		toSerialize["charmSDK"] = o.CharmSDK.Get()
	}
	if !IsNil(o.Trial) {
		toSerialize["trial"] = o.Trial
	}
	if o.SentryUrl.IsSet() {
		toSerialize["sentryUrl"] = o.SentryUrl.Get()
	}
	if o.DomainAuthenticationProviders.IsSet() {
		toSerialize["domainAuthenticationProviders"] = o.DomainAuthenticationProviders.Get()
	}
	return toSerialize, nil
}

type NullableConfigResponse struct {
	value *ConfigResponse
	isSet bool
}

func (v NullableConfigResponse) Get() *ConfigResponse {
	return v.value
}

func (v *NullableConfigResponse) Set(val *ConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigResponse(val *ConfigResponse) *NullableConfigResponse {
	return &NullableConfigResponse{value: val, isSet: true}
}

func (v NullableConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



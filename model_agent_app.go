/*
Corellium API

REST API to manage your virtual devices.

API version: 5.5.0-18750
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the AgentApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentApp{}

// AgentApp 
type AgentApp struct {
	// 
	Tags []string `json:"tags,omitempty"`
	// 
	Running NullableBool `json:"running,omitempty"`
	// 
	DiskUsage NullableInt32 `json:"diskUsage,omitempty"`
	// 
	Date NullableInt32 `json:"Date,omitempty"`
	// 
	ApplicationType NullableString `json:"applicationType,omitempty"`
	// 
	Name NullableString `json:"name,omitempty"`
	// 
	BundleID NullableString `json:"bundleID,omitempty"`
}

// NewAgentApp instantiates a new AgentApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentApp() *AgentApp {
	this := AgentApp{}
	return &this
}

// NewAgentAppWithDefaults instantiates a new AgentApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentAppWithDefaults() *AgentApp {
	this := AgentApp{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentApp) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentApp) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AgentApp) HasTags() bool {
	if o != nil && IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *AgentApp) SetTags(v []string) {
	o.Tags = v
}

// GetRunning returns the Running field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentApp) GetRunning() bool {
	if o == nil || IsNil(o.Running.Get()) {
		var ret bool
		return ret
	}
	return *o.Running.Get()
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentApp) GetRunningOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Running.Get(), o.Running.IsSet()
}

// HasRunning returns a boolean if a field has been set.
func (o *AgentApp) HasRunning() bool {
	if o != nil && o.Running.IsSet() {
		return true
	}

	return false
}

// SetRunning gets a reference to the given NullableBool and assigns it to the Running field.
func (o *AgentApp) SetRunning(v bool) {
	o.Running.Set(&v)
}
// SetRunningNil sets the value for Running to be an explicit nil
func (o *AgentApp) SetRunningNil() {
	o.Running.Set(nil)
}

// UnsetRunning ensures that no value is present for Running, not even an explicit nil
func (o *AgentApp) UnsetRunning() {
	o.Running.Unset()
}

// GetDiskUsage returns the DiskUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentApp) GetDiskUsage() int32 {
	if o == nil || IsNil(o.DiskUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.DiskUsage.Get()
}

// GetDiskUsageOk returns a tuple with the DiskUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentApp) GetDiskUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskUsage.Get(), o.DiskUsage.IsSet()
}

// HasDiskUsage returns a boolean if a field has been set.
func (o *AgentApp) HasDiskUsage() bool {
	if o != nil && o.DiskUsage.IsSet() {
		return true
	}

	return false
}

// SetDiskUsage gets a reference to the given NullableInt32 and assigns it to the DiskUsage field.
func (o *AgentApp) SetDiskUsage(v int32) {
	o.DiskUsage.Set(&v)
}
// SetDiskUsageNil sets the value for DiskUsage to be an explicit nil
func (o *AgentApp) SetDiskUsageNil() {
	o.DiskUsage.Set(nil)
}

// UnsetDiskUsage ensures that no value is present for DiskUsage, not even an explicit nil
func (o *AgentApp) UnsetDiskUsage() {
	o.DiskUsage.Unset()
}

// GetDate returns the Date field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentApp) GetDate() int32 {
	if o == nil || IsNil(o.Date.Get()) {
		var ret int32
		return ret
	}
	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentApp) GetDateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// HasDate returns a boolean if a field has been set.
func (o *AgentApp) HasDate() bool {
	if o != nil && o.Date.IsSet() {
		return true
	}

	return false
}

// SetDate gets a reference to the given NullableInt32 and assigns it to the Date field.
func (o *AgentApp) SetDate(v int32) {
	o.Date.Set(&v)
}
// SetDateNil sets the value for Date to be an explicit nil
func (o *AgentApp) SetDateNil() {
	o.Date.Set(nil)
}

// UnsetDate ensures that no value is present for Date, not even an explicit nil
func (o *AgentApp) UnsetDate() {
	o.Date.Unset()
}

// GetApplicationType returns the ApplicationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentApp) GetApplicationType() string {
	if o == nil || IsNil(o.ApplicationType.Get()) {
		var ret string
		return ret
	}
	return *o.ApplicationType.Get()
}

// GetApplicationTypeOk returns a tuple with the ApplicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentApp) GetApplicationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationType.Get(), o.ApplicationType.IsSet()
}

// HasApplicationType returns a boolean if a field has been set.
func (o *AgentApp) HasApplicationType() bool {
	if o != nil && o.ApplicationType.IsSet() {
		return true
	}

	return false
}

// SetApplicationType gets a reference to the given NullableString and assigns it to the ApplicationType field.
func (o *AgentApp) SetApplicationType(v string) {
	o.ApplicationType.Set(&v)
}
// SetApplicationTypeNil sets the value for ApplicationType to be an explicit nil
func (o *AgentApp) SetApplicationTypeNil() {
	o.ApplicationType.Set(nil)
}

// UnsetApplicationType ensures that no value is present for ApplicationType, not even an explicit nil
func (o *AgentApp) UnsetApplicationType() {
	o.ApplicationType.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentApp) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentApp) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AgentApp) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AgentApp) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AgentApp) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AgentApp) UnsetName() {
	o.Name.Unset()
}

// GetBundleID returns the BundleID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentApp) GetBundleID() string {
	if o == nil || IsNil(o.BundleID.Get()) {
		var ret string
		return ret
	}
	return *o.BundleID.Get()
}

// GetBundleIDOk returns a tuple with the BundleID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentApp) GetBundleIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BundleID.Get(), o.BundleID.IsSet()
}

// HasBundleID returns a boolean if a field has been set.
func (o *AgentApp) HasBundleID() bool {
	if o != nil && o.BundleID.IsSet() {
		return true
	}

	return false
}

// SetBundleID gets a reference to the given NullableString and assigns it to the BundleID field.
func (o *AgentApp) SetBundleID(v string) {
	o.BundleID.Set(&v)
}
// SetBundleIDNil sets the value for BundleID to be an explicit nil
func (o *AgentApp) SetBundleIDNil() {
	o.BundleID.Set(nil)
}

// UnsetBundleID ensures that no value is present for BundleID, not even an explicit nil
func (o *AgentApp) UnsetBundleID() {
	o.BundleID.Unset()
}

func (o AgentApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Running.IsSet() {
		toSerialize["running"] = o.Running.Get()
	}
	if o.DiskUsage.IsSet() {
		toSerialize["diskUsage"] = o.DiskUsage.Get()
	}
	if o.Date.IsSet() {
		toSerialize["Date"] = o.Date.Get()
	}
	if o.ApplicationType.IsSet() {
		toSerialize["applicationType"] = o.ApplicationType.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.BundleID.IsSet() {
		toSerialize["bundleID"] = o.BundleID.Get()
	}
	return toSerialize, nil
}

type NullableAgentApp struct {
	value *AgentApp
	isSet bool
}

func (v NullableAgentApp) Get() *AgentApp {
	return v.value
}

func (v *NullableAgentApp) Set(val *AgentApp) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentApp) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentApp(val *AgentApp) *NullableAgentApp {
	return &NullableAgentApp{value: val, isSet: true}
}

func (v NullableAgentApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



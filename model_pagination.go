/*
Corellium API

REST API to manage your virtual devices.

API version: 7.3.0-27831
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the Pagination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Pagination{}

// Pagination 
type Pagination struct {
	// The current page
	CurrentPage NullableFloat32 `json:"currentPage,omitempty"`
	// The total number of pages
	TotalPages NullableFloat32 `json:"totalPages,omitempty"`
	// The total number of activity entries
	TotalItems NullableFloat32 `json:"totalItems,omitempty"`
	// The number of activity entries per page
	ItemsPerPage NullableFloat32 `json:"itemsPerPage,omitempty"`
}

// NewPagination instantiates a new Pagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagination() *Pagination {
	this := Pagination{}
	return &this
}

// NewPaginationWithDefaults instantiates a new Pagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationWithDefaults() *Pagination {
	this := Pagination{}
	return &this
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Pagination) GetCurrentPage() float32 {
	if o == nil || IsNil(o.CurrentPage.Get()) {
		var ret float32
		return ret
	}
	return *o.CurrentPage.Get()
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pagination) GetCurrentPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentPage.Get(), o.CurrentPage.IsSet()
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *Pagination) HasCurrentPage() bool {
	if o != nil && o.CurrentPage.IsSet() {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given NullableFloat32 and assigns it to the CurrentPage field.
func (o *Pagination) SetCurrentPage(v float32) {
	o.CurrentPage.Set(&v)
}
// SetCurrentPageNil sets the value for CurrentPage to be an explicit nil
func (o *Pagination) SetCurrentPageNil() {
	o.CurrentPage.Set(nil)
}

// UnsetCurrentPage ensures that no value is present for CurrentPage, not even an explicit nil
func (o *Pagination) UnsetCurrentPage() {
	o.CurrentPage.Unset()
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Pagination) GetTotalPages() float32 {
	if o == nil || IsNil(o.TotalPages.Get()) {
		var ret float32
		return ret
	}
	return *o.TotalPages.Get()
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pagination) GetTotalPagesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalPages.Get(), o.TotalPages.IsSet()
}

// HasTotalPages returns a boolean if a field has been set.
func (o *Pagination) HasTotalPages() bool {
	if o != nil && o.TotalPages.IsSet() {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given NullableFloat32 and assigns it to the TotalPages field.
func (o *Pagination) SetTotalPages(v float32) {
	o.TotalPages.Set(&v)
}
// SetTotalPagesNil sets the value for TotalPages to be an explicit nil
func (o *Pagination) SetTotalPagesNil() {
	o.TotalPages.Set(nil)
}

// UnsetTotalPages ensures that no value is present for TotalPages, not even an explicit nil
func (o *Pagination) UnsetTotalPages() {
	o.TotalPages.Unset()
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Pagination) GetTotalItems() float32 {
	if o == nil || IsNil(o.TotalItems.Get()) {
		var ret float32
		return ret
	}
	return *o.TotalItems.Get()
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pagination) GetTotalItemsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalItems.Get(), o.TotalItems.IsSet()
}

// HasTotalItems returns a boolean if a field has been set.
func (o *Pagination) HasTotalItems() bool {
	if o != nil && o.TotalItems.IsSet() {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given NullableFloat32 and assigns it to the TotalItems field.
func (o *Pagination) SetTotalItems(v float32) {
	o.TotalItems.Set(&v)
}
// SetTotalItemsNil sets the value for TotalItems to be an explicit nil
func (o *Pagination) SetTotalItemsNil() {
	o.TotalItems.Set(nil)
}

// UnsetTotalItems ensures that no value is present for TotalItems, not even an explicit nil
func (o *Pagination) UnsetTotalItems() {
	o.TotalItems.Unset()
}

// GetItemsPerPage returns the ItemsPerPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Pagination) GetItemsPerPage() float32 {
	if o == nil || IsNil(o.ItemsPerPage.Get()) {
		var ret float32
		return ret
	}
	return *o.ItemsPerPage.Get()
}

// GetItemsPerPageOk returns a tuple with the ItemsPerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pagination) GetItemsPerPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemsPerPage.Get(), o.ItemsPerPage.IsSet()
}

// HasItemsPerPage returns a boolean if a field has been set.
func (o *Pagination) HasItemsPerPage() bool {
	if o != nil && o.ItemsPerPage.IsSet() {
		return true
	}

	return false
}

// SetItemsPerPage gets a reference to the given NullableFloat32 and assigns it to the ItemsPerPage field.
func (o *Pagination) SetItemsPerPage(v float32) {
	o.ItemsPerPage.Set(&v)
}
// SetItemsPerPageNil sets the value for ItemsPerPage to be an explicit nil
func (o *Pagination) SetItemsPerPageNil() {
	o.ItemsPerPage.Set(nil)
}

// UnsetItemsPerPage ensures that no value is present for ItemsPerPage, not even an explicit nil
func (o *Pagination) UnsetItemsPerPage() {
	o.ItemsPerPage.Unset()
}

func (o Pagination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Pagination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrentPage.IsSet() {
		toSerialize["currentPage"] = o.CurrentPage.Get()
	}
	if o.TotalPages.IsSet() {
		toSerialize["totalPages"] = o.TotalPages.Get()
	}
	if o.TotalItems.IsSet() {
		toSerialize["totalItems"] = o.TotalItems.Get()
	}
	if o.ItemsPerPage.IsSet() {
		toSerialize["itemsPerPage"] = o.ItemsPerPage.Get()
	}
	return toSerialize, nil
}

type NullablePagination struct {
	value *Pagination
	isSet bool
}

func (v NullablePagination) Get() *Pagination {
	return v.value
}

func (v *NullablePagination) Set(val *Pagination) {
	v.value = val
	v.isSet = true
}

func (v NullablePagination) IsSet() bool {
	return v.isSet
}

func (v *NullablePagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagination(val *Pagination) *NullablePagination {
	return &NullablePagination{value: val, isSet: true}
}

func (v NullablePagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



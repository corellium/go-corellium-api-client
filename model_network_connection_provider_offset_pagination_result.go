/*
Corellium API

REST API to manage your virtual devices.

API version: 6.5.0-23522
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package corellium

import (
	"encoding/json"
)

// checks if the NetworkConnectionProviderOffsetPaginationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkConnectionProviderOffsetPaginationResult{}

// NetworkConnectionProviderOffsetPaginationResult Network Connection Provider Offset Pagination Result
type NetworkConnectionProviderOffsetPaginationResult struct {
	// Total number of items.
	Total float32 `json:"total"`
	// The number of items returned in this result.
	Count float32 `json:"count"`
	// The maximum number of items that could be returned for this result.
	Limit float32 `json:"limit"`
	// That starting item 0-indexed.
	Offset float32 `json:"offset"`
	// Array of network connection providers.
	Results []NetworkConnectionProvider `json:"results"`
}

// NewNetworkConnectionProviderOffsetPaginationResult instantiates a new NetworkConnectionProviderOffsetPaginationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkConnectionProviderOffsetPaginationResult(total float32, count float32, limit float32, offset float32, results []NetworkConnectionProvider) *NetworkConnectionProviderOffsetPaginationResult {
	this := NetworkConnectionProviderOffsetPaginationResult{}
	this.Total = total
	this.Count = count
	this.Limit = limit
	this.Offset = offset
	this.Results = results
	return &this
}

// NewNetworkConnectionProviderOffsetPaginationResultWithDefaults instantiates a new NetworkConnectionProviderOffsetPaginationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkConnectionProviderOffsetPaginationResultWithDefaults() *NetworkConnectionProviderOffsetPaginationResult {
	this := NetworkConnectionProviderOffsetPaginationResult{}
	return &this
}

// GetTotal returns the Total field value
func (o *NetworkConnectionProviderOffsetPaginationResult) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionProviderOffsetPaginationResult) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *NetworkConnectionProviderOffsetPaginationResult) SetTotal(v float32) {
	o.Total = v
}

// GetCount returns the Count field value
func (o *NetworkConnectionProviderOffsetPaginationResult) GetCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionProviderOffsetPaginationResult) GetCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *NetworkConnectionProviderOffsetPaginationResult) SetCount(v float32) {
	o.Count = v
}

// GetLimit returns the Limit field value
func (o *NetworkConnectionProviderOffsetPaginationResult) GetLimit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionProviderOffsetPaginationResult) GetLimitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *NetworkConnectionProviderOffsetPaginationResult) SetLimit(v float32) {
	o.Limit = v
}

// GetOffset returns the Offset field value
func (o *NetworkConnectionProviderOffsetPaginationResult) GetOffset() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionProviderOffsetPaginationResult) GetOffsetOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *NetworkConnectionProviderOffsetPaginationResult) SetOffset(v float32) {
	o.Offset = v
}

// GetResults returns the Results field value
func (o *NetworkConnectionProviderOffsetPaginationResult) GetResults() []NetworkConnectionProvider {
	if o == nil {
		var ret []NetworkConnectionProvider
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *NetworkConnectionProviderOffsetPaginationResult) GetResultsOk() ([]NetworkConnectionProvider, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *NetworkConnectionProviderOffsetPaginationResult) SetResults(v []NetworkConnectionProvider) {
	o.Results = v
}

func (o NetworkConnectionProviderOffsetPaginationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkConnectionProviderOffsetPaginationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total"] = o.Total
	toSerialize["count"] = o.Count
	toSerialize["limit"] = o.Limit
	toSerialize["offset"] = o.Offset
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

type NullableNetworkConnectionProviderOffsetPaginationResult struct {
	value *NetworkConnectionProviderOffsetPaginationResult
	isSet bool
}

func (v NullableNetworkConnectionProviderOffsetPaginationResult) Get() *NetworkConnectionProviderOffsetPaginationResult {
	return v.value
}

func (v *NullableNetworkConnectionProviderOffsetPaginationResult) Set(val *NetworkConnectionProviderOffsetPaginationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkConnectionProviderOffsetPaginationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkConnectionProviderOffsetPaginationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkConnectionProviderOffsetPaginationResult(val *NetworkConnectionProviderOffsetPaginationResult) *NullableNetworkConnectionProviderOffsetPaginationResult {
	return &NullableNetworkConnectionProviderOffsetPaginationResult{value: val, isSet: true}
}

func (v NullableNetworkConnectionProviderOffsetPaginationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkConnectionProviderOffsetPaginationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


